<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: %3 Pages: 1 -->
<svg width="21720pt" height="2685pt"
 viewBox="0.00 0.00 21720.00 2685.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2681)">
<title>%3</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-2681 21716,-2681 21716,4 -4,4"/>
<!-- (below main) -->
<g id="node1" class="node">
<title>(below main)</title>
<polygon fill="#ff0300" stroke="#ff0300" points="3802,-2574 3730,-2574 3730,-2511 3802,-2511 3802,-2574"/>
<text text-anchor="middle" x="3766" y="-2562" font-family="Arial" font-size="10.00" fill="#ffffff">libc.so.6</text>
<text text-anchor="middle" x="3766" y="-2551" font-family="Arial" font-size="10.00" fill="#ffffff">(below main)</text>
<text text-anchor="middle" x="3766" y="-2540" font-family="Arial" font-size="10.00" fill="#ffffff">99.71%</text>
<text text-anchor="middle" x="3766" y="-2529" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="3766" y="-2518" font-family="Arial" font-size="10.00" fill="#ffffff">2×</text>
</g>
<!-- main -->
<g id="node2" class="node">
<title>main</title>
<polygon fill="#ff0300" stroke="#ff0300" points="3791,-2471 3741,-2471 3741,-2408 3791,-2408 3791,-2471"/>
<text text-anchor="middle" x="3766" y="-2459" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="3766" y="-2448" font-family="Arial" font-size="10.00" fill="#ffffff">main</text>
<text text-anchor="middle" x="3766" y="-2437" font-family="Arial" font-size="10.00" fill="#ffffff">99.69%</text>
<text text-anchor="middle" x="3766" y="-2426" font-family="Arial" font-size="10.00" fill="#ffffff">(0.02%)</text>
<text text-anchor="middle" x="3766" y="-2415" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- (below main)&#45;&gt;main -->
<g id="edge1" class="edge">
<title>(below main)&#45;&gt;main</title>
<path fill="none" stroke="#ff0300" stroke-width="3.99" d="M3766,-2510.92C3766,-2501.61 3766,-2491.23 3766,-2481.36"/>
<polygon fill="#ff0300" stroke="#ff0300" stroke-width="3.99" points="3769.5,-2481.32 3766,-2471.32 3762.5,-2481.32 3769.5,-2481.32"/>
<text text-anchor="middle" x="3783" y="-2494" font-family="Arial" font-size="10.00" fill="#ff0300">99.69%</text>
<text text-anchor="middle" x="3783" y="-2483" font-family="Arial" font-size="10.00" fill="#ff0300">1×</text>
</g>
<!-- SimulationProtocol::~SimulationProtocol() -->
<g id="node42" class="node">
<title>SimulationProtocol::~SimulationProtocol()</title>
<polygon fill="#0d1876" stroke="#0d1876" points="198,-2296 0,-2296 0,-2233 198,-2233 198,-2296"/>
<text text-anchor="middle" x="99" y="-2284" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="99" y="-2273" font-family="Arial" font-size="10.00" fill="#ffffff">SimulationProtocol::~SimulationProtocol()</text>
<text text-anchor="middle" x="99" y="-2262" font-family="Arial" font-size="10.00" fill="#ffffff">2.60%</text>
<text text-anchor="middle" x="99" y="-2251" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="99" y="-2240" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- main&#45;&gt;SimulationProtocol::~SimulationProtocol() -->
<g id="edge54" class="edge">
<title>main&#45;&gt;SimulationProtocol::~SimulationProtocol()</title>
<path fill="none" stroke="#0d1876" stroke-width="0.5" d="M3740.92,-2438.55C3462.43,-2439 951.79,-2441.91 625,-2399 472.06,-2378.92 299.6,-2329.92 195.15,-2297.2"/>
<polygon fill="#0d1876" stroke="#0d1876" stroke-width="0.5" points="195.47,-2296.02 191.77,-2296.14 194.74,-2298.36 195.47,-2296.02"/>
<text text-anchor="middle" x="639" y="-2391" font-family="Arial" font-size="10.00" fill="#0d1876">2.60%</text>
<text text-anchor="middle" x="639" y="-2380" font-family="Arial" font-size="10.00" fill="#0d1876">1×</text>
</g>
<!-- Simulator::runSimulator[abi:cxx11](unsigned long) -->
<g id="node47" class="node">
<title>Simulator::runSimulator[abi:cxx11](unsigned long)</title>
<polygon fill="#0d307d" stroke="#0d307d" points="5050,-1792 4818,-1792 4818,-1729 5050,-1729 5050,-1792"/>
<text text-anchor="middle" x="4934" y="-1780" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="4934" y="-1769" font-family="Arial" font-size="10.00" fill="#ffffff">Simulator::runSimulator[abi:cxx11](unsigned long)</text>
<text text-anchor="middle" x="4934" y="-1758" font-family="Arial" font-size="10.00" fill="#ffffff">7.90%</text>
<text text-anchor="middle" x="4934" y="-1747" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="4934" y="-1736" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- main&#45;&gt;Simulator::runSimulator[abi:cxx11](unsigned long) -->
<g id="edge55" class="edge">
<title>main&#45;&gt;Simulator::runSimulator[abi:cxx11](unsigned long)</title>
<path fill="none" stroke="#0d307d" stroke-width="0.5" d="M3791.26,-2437.54C3955.41,-2431.14 4864,-2393.22 4864,-2337.5 4864,-2337.5 4864,-2337.5 4864,-1903.5 4864,-1863.19 4886.97,-1822.46 4906.6,-1795.03"/>
<polygon fill="#0d307d" stroke="#0d307d" stroke-width="0.5" points="4907.67,-1795.63 4908.73,-1792.08 4905.68,-1794.2 4907.67,-1795.63"/>
<text text-anchor="middle" x="4878" y="-2123.5" font-family="Arial" font-size="10.00" fill="#0d307d">7.90%</text>
<text text-anchor="middle" x="4878" y="-2112.5" font-family="Arial" font-size="10.00" fill="#0d307d">1×</text>
</g>
<!-- Simulator::simulateSubstitutions(unsigned long) -->
<g id="node51" class="node">
<title>Simulator::simulateSubstitutions(unsigned long)</title>
<polygon fill="#0b9e70" stroke="#0b9e70" points="4019,-2368 3795,-2368 3795,-2305 4019,-2305 4019,-2368"/>
<text text-anchor="middle" x="3907" y="-2356" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="3907" y="-2345" font-family="Arial" font-size="10.00" fill="#ffffff">Simulator::simulateSubstitutions(unsigned long)</text>
<text text-anchor="middle" x="3907" y="-2334" font-family="Arial" font-size="10.00" fill="#ffffff">32.91%</text>
<text text-anchor="middle" x="3907" y="-2323" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="3907" y="-2312" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- main&#45;&gt;Simulator::simulateSubstitutions(unsigned long) -->
<g id="edge56" class="edge">
<title>main&#45;&gt;Simulator::simulateSubstitutions(unsigned long)</title>
<path fill="none" stroke="#0b9e70" stroke-width="1.32" d="M3791.21,-2420.44C3810.14,-2406.88 3836.63,-2387.91 3859.49,-2371.53"/>
<polygon fill="#0b9e70" stroke="#0b9e70" stroke-width="1.32" points="3860.84,-2373.02 3864.31,-2368.08 3858.52,-2369.77 3860.84,-2373.02"/>
<text text-anchor="middle" x="3866" y="-2391" font-family="Arial" font-size="10.00" fill="#0b9e70">32.91%</text>
<text text-anchor="middle" x="3866" y="-2380" font-family="Arial" font-size="10.00" fill="#0b9e70">1×</text>
</g>
<!-- tree::clear() -->
<g id="node61" class="node">
<title>tree::clear()</title>
<polygon fill="#0d1475" stroke="#0d1475" points="3800,-1792 3734,-1792 3734,-1729 3800,-1729 3800,-1792"/>
<text text-anchor="middle" x="3767" y="-1780" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="3767" y="-1769" font-family="Arial" font-size="10.00" fill="#ffffff">tree::clear()</text>
<text text-anchor="middle" x="3767" y="-1758" font-family="Arial" font-size="10.00" fill="#ffffff">1.71%</text>
<text text-anchor="middle" x="3767" y="-1747" font-family="Arial" font-size="10.00" fill="#ffffff">(0.13%)</text>
<text text-anchor="middle" x="3767" y="-1736" font-family="Arial" font-size="10.00" fill="#ffffff">3×</text>
</g>
<!-- main&#45;&gt;tree::clear() -->
<g id="edge61" class="edge">
<title>main&#45;&gt;tree::clear()</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M3766,-2407.56C3766,-2387.57 3766,-2361 3766,-2337.5 3766,-2337.5 3766,-2337.5 3766,-1903.5 3766,-1866.81 3766.34,-1824.79 3766.62,-1796.04"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="3767.85,-1795.76 3766.66,-1792.25 3765.4,-1795.73 3767.85,-1795.76"/>
<text text-anchor="middle" x="3780" y="-2123.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.86%</text>
<text text-anchor="middle" x="3780" y="-2112.5" font-family="Arial" font-size="10.00" fill="#0d1074">1×</text>
</g>
<!-- rateMatrixSim::rateMatrixSim(modelFactory&amp;) -->
<g id="node69" class="node">
<title>rateMatrixSim::rateMatrixSim(modelFactory&amp;)</title>
<polygon fill="#0b9f6d" stroke="#0b9f6d" points="5552,-2152 5336,-2152 5336,-2089 5552,-2089 5552,-2152"/>
<text text-anchor="middle" x="5444" y="-2140" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="5444" y="-2129" font-family="Arial" font-size="10.00" fill="#ffffff">rateMatrixSim::rateMatrixSim(modelFactory&amp;)</text>
<text text-anchor="middle" x="5444" y="-2118" font-family="Arial" font-size="10.00" fill="#ffffff">33.40%</text>
<text text-anchor="middle" x="5444" y="-2107" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="5444" y="-2096" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- main&#45;&gt;rateMatrixSim::rateMatrixSim(modelFactory&amp;) -->
<g id="edge57" class="edge">
<title>main&#45;&gt;rateMatrixSim::rateMatrixSim(modelFactory&amp;)</title>
<path fill="none" stroke="#0b9f6d" stroke-width="1.34" d="M3791.21,-2438.22C3945.86,-2436.44 4763.12,-2425.79 4871,-2399 5076.77,-2347.91 5295.88,-2217.58 5392.81,-2155.45"/>
<polygon fill="#0b9f6d" stroke="#0b9f6d" stroke-width="1.34" points="5394.12,-2157.02 5397.9,-2152.18 5391.92,-2153.61 5394.12,-2157.02"/>
<text text-anchor="middle" x="5139" y="-2339.5" font-family="Arial" font-size="10.00" fill="#0b9f6d">33.40%</text>
<text text-anchor="middle" x="5139" y="-2328.5" font-family="Arial" font-size="10.00" fill="#0b9f6d">1×</text>
</g>
<!-- std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release() -->
<g id="node70" class="node">
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release()</title>
<polygon fill="#0d1375" stroke="#0d1375" points="882.5,-2008 567.5,-2008 567.5,-1945 882.5,-1945 882.5,-2008"/>
<text text-anchor="middle" x="725" y="-1996" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="725" y="-1985" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release()</text>
<text text-anchor="middle" x="725" y="-1974" font-family="Arial" font-size="10.00" fill="#ffffff">1.56%</text>
<text text-anchor="middle" x="725" y="-1963" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="725" y="-1952" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- main&#45;&gt;std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release() -->
<g id="edge58" class="edge">
<title>main&#45;&gt;std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release()</title>
<path fill="none" stroke="#0d1375" stroke-width="0.5" d="M3740.61,-2438.26C3453.5,-2435.46 826.63,-2408.8 759,-2368 745.71,-2359.98 742,-2353.02 742,-2337.5 742,-2337.5 742,-2337.5 742,-2119.5 742,-2082.55 736.26,-2040.57 731.44,-2011.9"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width="0.5" points="732.6,-2011.37 730.8,-2008.12 730.18,-2011.78 732.6,-2011.37"/>
<text text-anchor="middle" x="756" y="-2267.5" font-family="Arial" font-size="10.00" fill="#0d1375">1.56%</text>
<text text-anchor="middle" x="756" y="-2256.5" font-family="Arial" font-size="10.00" fill="#0d1375">1×</text>
</g>
<!-- std::unique_ptr&lt;rateMatrixSim, std::default_delete&lt;rateMatrixSim&gt; &gt;::~unique_ptr() -->
<g id="node71" class="node">
<title>std::unique_ptr&lt;rateMatrixSim, std::default_delete&lt;rateMatrixSim&gt; &gt;::~unique_ptr()</title>
<polygon fill="#0d277a" stroke="#0d277a" points="693.5,-2296 314.5,-2296 314.5,-2233 693.5,-2233 693.5,-2296"/>
<text text-anchor="middle" x="504" y="-2284" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="504" y="-2273" font-family="Arial" font-size="10.00" fill="#ffffff">std::unique_ptr&lt;rateMatrixSim, std::default_delete&lt;rateMatrixSim&gt; &gt;::~unique_ptr()</text>
<text text-anchor="middle" x="504" y="-2262" font-family="Arial" font-size="10.00" fill="#ffffff">5.94%</text>
<text text-anchor="middle" x="504" y="-2251" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="504" y="-2240" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- main&#45;&gt;std::unique_ptr&lt;rateMatrixSim, std::default_delete&lt;rateMatrixSim&gt; &gt;::~unique_ptr() -->
<g id="edge59" class="edge">
<title>main&#45;&gt;std::unique_ptr&lt;rateMatrixSim, std::default_delete&lt;rateMatrixSim&gt; &gt;::~unique_ptr()</title>
<path fill="none" stroke="#0d277a" stroke-width="0.5" d="M3740.93,-2438.58C3457.37,-2439.45 860.61,-2446.07 707,-2399 641.82,-2379.03 578.03,-2331.06 539.85,-2298.41"/>
<polygon fill="#0d277a" stroke="#0d277a" stroke-width="0.5" points="540.6,-2297.44 537.15,-2296.09 539,-2299.3 540.6,-2297.44"/>
<text text-anchor="middle" x="721" y="-2391" font-family="Arial" font-size="10.00" fill="#0d277a">5.94%</text>
<text text-anchor="middle" x="721" y="-2380" font-family="Arial" font-size="10.00" fill="#0d277a">1×</text>
</g>
<!-- std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt;::~vector() -->
<g id="node72" class="node">
<title>std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt;::~vector()</title>
<polygon fill="#0d1074" stroke="#0d1074" points="3748,-2368 764,-2368 764,-2305 3748,-2305 3748,-2368"/>
<text text-anchor="middle" x="2256" y="-2356" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="2256" y="-2345" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt;::~vector()</text>
<text text-anchor="middle" x="2256" y="-2334" font-family="Arial" font-size="10.00" fill="#ffffff">0.79%</text>
<text text-anchor="middle" x="2256" y="-2323" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="2256" y="-2312" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- main&#45;&gt;std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt;::~vector() -->
<g id="edge60" class="edge">
<title>main&#45;&gt;std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt;::~vector()</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M3740.74,-2436.81C3621.71,-2428.85 3106.27,-2394.37 2715.83,-2368.26"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="2715.68,-2367.02 2712.1,-2368.01 2715.51,-2369.46 2715.68,-2367.02"/>
<text text-anchor="middle" x="3161" y="-2391" font-family="Arial" font-size="10.00" fill="#0d1074">0.79%</text>
<text text-anchor="middle" x="3161" y="-2380" font-family="Arial" font-size="10.00" fill="#0d1074">1×</text>
</g>
<!-- tree::tree(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="node73" class="node">
<title>tree::tree(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<polygon fill="#0d4d84" stroke="#0d4d84" points="18925,-2080 18487,-2080 18487,-2017 18925,-2017 18925,-2080"/>
<text text-anchor="middle" x="18706" y="-2068" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="18706" y="-2057" font-family="Arial" font-size="10.00" fill="#ffffff">tree::tree(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="18706" y="-2046" font-family="Arial" font-size="10.00" fill="#ffffff">13.42%</text>
<text text-anchor="middle" x="18706" y="-2035" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="18706" y="-2024" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- main&#45;&gt;tree::tree(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="edge62" class="edge">
<title>main&#45;&gt;tree::tree(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d4d84" stroke-width="0.54" d="M3791.25,-2437.84C4421.88,-2421.42 16670.88,-2102.49 18482.82,-2055.31"/>
<polygon fill="#0d4d84" stroke="#0d4d84" stroke-width="0.54" points="18483.12,-2056.6 18486.79,-2055.21 18483.05,-2054.01 18483.12,-2056.6"/>
<text text-anchor="middle" x="11597" y="-2267.5" font-family="Arial" font-size="10.00" fill="#0d4d84">13.42%</text>
<text text-anchor="middle" x="11597" y="-2256.5" font-family="Arial" font-size="10.00" fill="#0d4d84">1×</text>
</g>
<!-- 0x0000000000020290 -->
<g id="node3" class="node">
<title>0x0000000000020290</title>
<polygon fill="#ff0000" stroke="#ff0000" points="3821.5,-2677 3710.5,-2677 3710.5,-2614 3821.5,-2614 3821.5,-2677"/>
<text text-anchor="middle" x="3766" y="-2665" font-family="Arial" font-size="10.00" fill="#ffffff">ld&#45;linux&#45;x86&#45;64.so.2</text>
<text text-anchor="middle" x="3766" y="-2654" font-family="Arial" font-size="10.00" fill="#ffffff">0x0000000000020290</text>
<text text-anchor="middle" x="3766" y="-2643" font-family="Arial" font-size="10.00" fill="#ffffff">100.00%</text>
<text text-anchor="middle" x="3766" y="-2632" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="3766" y="-2621" font-family="Arial" font-size="10.00" fill="#ffffff">0×</text>
</g>
<!-- 0x0000000000020290&#45;&gt;(below main) -->
<g id="edge2" class="edge">
<title>0x0000000000020290&#45;&gt;(below main)</title>
<path fill="none" stroke="#ff0300" stroke-width="3.99" d="M3766,-2613.92C3766,-2604.61 3766,-2594.23 3766,-2584.36"/>
<polygon fill="#ff0300" stroke="#ff0300" stroke-width="3.99" points="3769.5,-2584.32 3766,-2574.32 3762.5,-2584.32 3769.5,-2584.32"/>
<text text-anchor="middle" x="3783" y="-2597" font-family="Arial" font-size="10.00" fill="#ff0300">99.71%</text>
<text text-anchor="middle" x="3783" y="-2586" font-family="Arial" font-size="10.00" fill="#ff0300">1×</text>
</g>
<!-- 0x000000000010d690 -->
<g id="node4" class="node">
<title>0x000000000010d690</title>
<polygon fill="#0d1676" stroke="#0d1676" points="5007.5,-1360 4896.5,-1360 4896.5,-1297 5007.5,-1297 5007.5,-1360"/>
<text text-anchor="middle" x="4952" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">???</text>
<text text-anchor="middle" x="4952" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">0x000000000010d690</text>
<text text-anchor="middle" x="4952" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">2.20%</text>
<text text-anchor="middle" x="4952" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.18%)</text>
<text text-anchor="middle" x="4952" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">726361×</text>
</g>
<!-- __memcmp_avx2_movbe -->
<g id="node5" class="node">
<title>__memcmp_avx2_movbe</title>
<polygon fill="#0d1575" stroke="#0d1575" points="6497,-1257 6369,-1257 6369,-1194 6497,-1194 6497,-1257"/>
<text text-anchor="middle" x="6433" y="-1245" font-family="Arial" font-size="10.00" fill="#ffffff">libc.so.6</text>
<text text-anchor="middle" x="6433" y="-1234" font-family="Arial" font-size="10.00" fill="#ffffff">__memcmp_avx2_movbe</text>
<text text-anchor="middle" x="6433" y="-1223" font-family="Arial" font-size="10.00" fill="#ffffff">2.01%</text>
<text text-anchor="middle" x="6433" y="-1212" font-family="Arial" font-size="10.00" fill="#ffffff">(2.01%)</text>
<text text-anchor="middle" x="6433" y="-1201" font-family="Arial" font-size="10.00" fill="#ffffff">726413×</text>
</g>
<!-- 0x000000000010d690&#45;&gt;__memcmp_avx2_movbe -->
<g id="edge3" class="edge">
<title>0x000000000010d690&#45;&gt;__memcmp_avx2_movbe</title>
<path fill="none" stroke="#0d1575" stroke-width="0.5" d="M5007.51,-1299.04C5010.01,-1298.27 5012.51,-1297.58 5015,-1297 5051.93,-1288.4 6346.27,-1305.32 6380,-1288 6390.76,-1282.48 6388.3,-1275.32 6396,-1266 6397.65,-1264.01 6399.37,-1261.99 6401.12,-1259.97"/>
<polygon fill="#0d1575" stroke="#0d1575" stroke-width="0.5" points="6402.15,-1260.66 6403.54,-1257.22 6400.31,-1259.04 6402.15,-1260.66"/>
<text text-anchor="middle" x="6415" y="-1280" font-family="Arial" font-size="10.00" fill="#0d1575">2.01%</text>
<text text-anchor="middle" x="6415" y="-1269" font-family="Arial" font-size="10.00" fill="#0d1575">726361×</text>
</g>
<!-- 0x000000000010d6b0 -->
<g id="node6" class="node">
<title>0x000000000010d6b0</title>
<polygon fill="#0d0f74" stroke="#0d0f74" points="20135.5,-1257 20024.5,-1257 20024.5,-1194 20135.5,-1194 20135.5,-1257"/>
<text text-anchor="middle" x="20080" y="-1245" font-family="Arial" font-size="10.00" fill="#ffffff">???</text>
<text text-anchor="middle" x="20080" y="-1234" font-family="Arial" font-size="10.00" fill="#ffffff">0x000000000010d6b0</text>
<text text-anchor="middle" x="20080" y="-1223" font-family="Arial" font-size="10.00" fill="#ffffff">0.60%</text>
<text text-anchor="middle" x="20080" y="-1212" font-family="Arial" font-size="10.00" fill="#ffffff">(0.02%)</text>
<text text-anchor="middle" x="20080" y="-1201" font-family="Arial" font-size="10.00" fill="#ffffff">89993×</text>
</g>
<!-- std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="node7" class="node">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="20477.5,-1113 19682.5,-1113 19682.5,-1050 20477.5,-1050 20477.5,-1113"/>
<text text-anchor="middle" x="20080" y="-1101" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.30</text>
<text text-anchor="middle" x="20080" y="-1090" font-family="Arial" font-size="10.00" fill="#ffffff">std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="20080" y="-1079" font-family="Arial" font-size="10.00" fill="#ffffff">0.58%</text>
<text text-anchor="middle" x="20080" y="-1068" font-family="Arial" font-size="10.00" fill="#ffffff">(0.47%)</text>
<text text-anchor="middle" x="20080" y="-1057" font-family="Arial" font-size="10.00" fill="#ffffff">89993×</text>
</g>
<!-- 0x000000000010d6b0&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="edge4" class="edge">
<title>0x000000000010d6b0&#45;&gt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M20080,-1193.69C20080,-1171.08 20080,-1140.36 20080,-1116.95"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="20081.23,-1116.75 20080,-1113.25 20078.78,-1116.75 20081.23,-1116.75"/>
<text text-anchor="middle" x="20096.5" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.58%</text>
<text text-anchor="middle" x="20096.5" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d0f73">89993×</text>
</g>
<!-- 0x000000000010d6c0 -->
<g id="node8" class="node">
<title>0x000000000010d6c0</title>
<polygon fill="#0d1074" stroke="#0d1074" points="19585.5,-1113 19474.5,-1113 19474.5,-1050 19585.5,-1050 19585.5,-1113"/>
<text text-anchor="middle" x="19530" y="-1101" font-family="Arial" font-size="10.00" fill="#ffffff">???</text>
<text text-anchor="middle" x="19530" y="-1090" font-family="Arial" font-size="10.00" fill="#ffffff">0x000000000010d6c0</text>
<text text-anchor="middle" x="19530" y="-1079" font-family="Arial" font-size="10.00" fill="#ffffff">0.67%</text>
<text text-anchor="middle" x="19530" y="-1068" font-family="Arial" font-size="10.00" fill="#ffffff">(0.07%)</text>
<text text-anchor="middle" x="19530" y="-1057" font-family="Arial" font-size="10.00" fill="#ffffff">267352×</text>
</g>
<!-- __memset_avx2_unaligned_erms -->
<g id="node9" class="node">
<title>__memset_avx2_unaligned_erms</title>
<polygon fill="#0d0f74" stroke="#0d0f74" points="19611,-1010 19449,-1010 19449,-947 19611,-947 19611,-1010"/>
<text text-anchor="middle" x="19530" y="-998" font-family="Arial" font-size="10.00" fill="#ffffff">libc.so.6</text>
<text text-anchor="middle" x="19530" y="-987" font-family="Arial" font-size="10.00" fill="#ffffff">__memset_avx2_unaligned_erms</text>
<text text-anchor="middle" x="19530" y="-976" font-family="Arial" font-size="10.00" fill="#ffffff">0.60%</text>
<text text-anchor="middle" x="19530" y="-965" font-family="Arial" font-size="10.00" fill="#ffffff">(0.60%)</text>
<text text-anchor="middle" x="19530" y="-954" font-family="Arial" font-size="10.00" fill="#ffffff">267353×</text>
</g>
<!-- 0x000000000010d6c0&#45;&gt;__memset_avx2_unaligned_erms -->
<g id="edge5" class="edge">
<title>0x000000000010d6c0&#45;&gt;__memset_avx2_unaligned_erms</title>
<path fill="none" stroke="#0d0f74" stroke-width="0.5" d="M19530,-1049.92C19530,-1038.56 19530,-1025.59 19530,-1013.9"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width="0.5" points="19531.23,-1013.82 19530,-1010.32 19528.78,-1013.82 19531.23,-1013.82"/>
<text text-anchor="middle" x="19549" y="-1033" font-family="Arial" font-size="10.00" fill="#0d0f74">0.60%</text>
<text text-anchor="middle" x="19549" y="-1022" font-family="Arial" font-size="10.00" fill="#0d0f74">267352×</text>
</g>
<!-- 0x000000000010d750 -->
<g id="node10" class="node">
<title>0x000000000010d750</title>
<polygon fill="#0d1676" stroke="#0d1676" points="20862.5,-1010 20751.5,-1010 20751.5,-947 20862.5,-947 20862.5,-1010"/>
<text text-anchor="middle" x="20807" y="-998" font-family="Arial" font-size="10.00" fill="#ffffff">???</text>
<text text-anchor="middle" x="20807" y="-987" font-family="Arial" font-size="10.00" fill="#ffffff">0x000000000010d750</text>
<text text-anchor="middle" x="20807" y="-976" font-family="Arial" font-size="10.00" fill="#ffffff">2.29%</text>
<text text-anchor="middle" x="20807" y="-965" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="20807" y="-954" font-family="Arial" font-size="10.00" fill="#ffffff">19997×</text>
</g>
<!-- strtod -->
<g id="node11" class="node">
<title>strtod</title>
<polygon fill="#0d1676" stroke="#0d1676" points="20833.5,-866 20780.5,-866 20780.5,-803 20833.5,-803 20833.5,-866"/>
<text text-anchor="middle" x="20807" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">libc.so.6</text>
<text text-anchor="middle" x="20807" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">strtod</text>
<text text-anchor="middle" x="20807" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">2.29%</text>
<text text-anchor="middle" x="20807" y="-821" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="20807" y="-810" font-family="Arial" font-size="10.00" fill="#ffffff">19997×</text>
</g>
<!-- 0x000000000010d750&#45;&gt;strtod -->
<g id="edge6" class="edge">
<title>0x000000000010d750&#45;&gt;strtod</title>
<path fill="none" stroke="#0d1676" stroke-width="0.5" d="M20807,-946.69C20807,-924.08 20807,-893.36 20807,-869.95"/>
<polygon fill="#0d1676" stroke="#0d1676" stroke-width="0.5" points="20808.23,-869.75 20807,-866.25 20805.78,-869.75 20808.23,-869.75"/>
<text text-anchor="middle" x="20823.5" y="-909.5" font-family="Arial" font-size="10.00" fill="#0d1676">2.29%</text>
<text text-anchor="middle" x="20823.5" y="-898.5" font-family="Arial" font-size="10.00" fill="#0d1676">19997×</text>
</g>
<!-- ____strtod_l_internal -->
<g id="node53" class="node">
<title>____strtod_l_internal</title>
<polygon fill="#0d1676" stroke="#0d1676" points="20860.5,-722 20753.5,-722 20753.5,-659 20860.5,-659 20860.5,-722"/>
<text text-anchor="middle" x="20807" y="-710" font-family="Arial" font-size="10.00" fill="#ffffff">libc.so.6</text>
<text text-anchor="middle" x="20807" y="-699" font-family="Arial" font-size="10.00" fill="#ffffff">____strtod_l_internal</text>
<text text-anchor="middle" x="20807" y="-688" font-family="Arial" font-size="10.00" fill="#ffffff">2.27%</text>
<text text-anchor="middle" x="20807" y="-677" font-family="Arial" font-size="10.00" fill="#ffffff">(1.32%)</text>
<text text-anchor="middle" x="20807" y="-666" font-family="Arial" font-size="10.00" fill="#ffffff">19997×</text>
</g>
<!-- strtod&#45;&gt;____strtod_l_internal -->
<g id="edge131" class="edge">
<title>strtod&#45;&gt;____strtod_l_internal</title>
<path fill="none" stroke="#0d1676" stroke-width="0.5" d="M20807,-802.69C20807,-780.08 20807,-749.36 20807,-725.95"/>
<polygon fill="#0d1676" stroke="#0d1676" stroke-width="0.5" points="20808.23,-725.75 20807,-722.25 20805.78,-725.75 20808.23,-725.75"/>
<text text-anchor="middle" x="20823.5" y="-765.5" font-family="Arial" font-size="10.00" fill="#0d1676">2.27%</text>
<text text-anchor="middle" x="20823.5" y="-754.5" font-family="Arial" font-size="10.00" fill="#0d1676">19997×</text>
</g>
<!-- 0x000000000010d780 -->
<g id="node12" class="node">
<title>0x000000000010d780</title>
<polygon fill="#0d1475" stroke="#0d1475" points="6125.5,-1257 6014.5,-1257 6014.5,-1194 6125.5,-1194 6125.5,-1257"/>
<text text-anchor="middle" x="6070" y="-1245" font-family="Arial" font-size="10.00" fill="#ffffff">???</text>
<text text-anchor="middle" x="6070" y="-1234" font-family="Arial" font-size="10.00" fill="#ffffff">0x000000000010d780</text>
<text text-anchor="middle" x="6070" y="-1223" font-family="Arial" font-size="10.00" fill="#ffffff">1.70%</text>
<text text-anchor="middle" x="6070" y="-1212" font-family="Arial" font-size="10.00" fill="#ffffff">(0.06%)</text>
<text text-anchor="middle" x="6070" y="-1201" font-family="Arial" font-size="10.00" fill="#ffffff">240886×</text>
</g>
<!-- log@@GLIBC_2.29 -->
<g id="node13" class="node">
<title>log@@GLIBC_2.29</title>
<polygon fill="#0d1475" stroke="#0d1475" points="11882,-1113 11778,-1113 11778,-1050 11882,-1050 11882,-1113"/>
<text text-anchor="middle" x="11830" y="-1101" font-family="Arial" font-size="10.00" fill="#ffffff">libm.so.6</text>
<text text-anchor="middle" x="11830" y="-1090" font-family="Arial" font-size="10.00" fill="#ffffff">log@@GLIBC_2.29</text>
<text text-anchor="middle" x="11830" y="-1079" font-family="Arial" font-size="10.00" fill="#ffffff">1.64%</text>
<text text-anchor="middle" x="11830" y="-1068" font-family="Arial" font-size="10.00" fill="#ffffff">(0.15%)</text>
<text text-anchor="middle" x="11830" y="-1057" font-family="Arial" font-size="10.00" fill="#ffffff">240886×</text>
</g>
<!-- 0x000000000010d780&#45;&gt;log@@GLIBC_2.29 -->
<g id="edge7" class="edge">
<title>0x000000000010d780&#45;&gt;log@@GLIBC_2.29</title>
<path fill="none" stroke="#0d1475" stroke-width="0.5" d="M6062.26,-1193.87C6058.42,-1170.67 6058.03,-1139.84 6077,-1122 6104.41,-1096.22 11182.75,-1083.96 11774.04,-1082.62"/>
<polygon fill="#0d1475" stroke="#0d1475" stroke-width="0.5" points="11774.38,-1083.85 11777.88,-1082.62 11774.38,-1081.4 11774.38,-1083.85"/>
<text text-anchor="middle" x="6096" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d1475">1.64%</text>
<text text-anchor="middle" x="6096" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d1475">240886×</text>
</g>
<!-- 0x0000000004a912e0 -->
<g id="node32" class="node">
<title>0x0000000004a912e0</title>
<polygon fill="#0d1375" stroke="#0d1375" points="17497.5,-1010 17386.5,-1010 17386.5,-947 17497.5,-947 17497.5,-1010"/>
<text text-anchor="middle" x="17442" y="-998" font-family="Arial" font-size="10.00" fill="#ffffff">???</text>
<text text-anchor="middle" x="17442" y="-987" font-family="Arial" font-size="10.00" fill="#ffffff">0x0000000004a912e0</text>
<text text-anchor="middle" x="17442" y="-976" font-family="Arial" font-size="10.00" fill="#ffffff">1.48%</text>
<text text-anchor="middle" x="17442" y="-965" font-family="Arial" font-size="10.00" fill="#ffffff">(0.06%)</text>
<text text-anchor="middle" x="17442" y="-954" font-family="Arial" font-size="10.00" fill="#ffffff">240886×</text>
</g>
<!-- log@@GLIBC_2.29&#45;&gt;0x0000000004a912e0 -->
<g id="edge53" class="edge">
<title>log@@GLIBC_2.29&#45;&gt;0x0000000004a912e0</title>
<path fill="none" stroke="#0d1375" stroke-width="0.5" d="M11882.03,-1080.59C12435.69,-1081.46 17223.98,-1087.67 17361,-1041 17378.39,-1035.08 17395.03,-1023.81 17408.65,-1012.52"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width="0.5" points="17409.44,-1013.45 17411.33,-1010.26 17407.87,-1011.57 17409.44,-1013.45"/>
<text text-anchor="middle" x="17418" y="-1033" font-family="Arial" font-size="10.00" fill="#0d1375">1.48%</text>
<text text-anchor="middle" x="17418" y="-1022" font-family="Arial" font-size="10.00" fill="#0d1375">240886×</text>
</g>
<!-- 0x000000000010d7f0 -->
<g id="node14" class="node">
<title>0x000000000010d7f0</title>
<polygon fill="#0c778e" stroke="#0c778e" points="17587.5,-1113 17478.5,-1113 17478.5,-1050 17587.5,-1050 17587.5,-1113"/>
<text text-anchor="middle" x="17533" y="-1101" font-family="Arial" font-size="10.00" fill="#ffffff">???</text>
<text text-anchor="middle" x="17533" y="-1090" font-family="Arial" font-size="10.00" fill="#ffffff">0x000000000010d7f0</text>
<text text-anchor="middle" x="17533" y="-1079" font-family="Arial" font-size="10.00" fill="#ffffff">20.63%</text>
<text text-anchor="middle" x="17533" y="-1068" font-family="Arial" font-size="10.00" fill="#ffffff">(0.30%)</text>
<text text-anchor="middle" x="17533" y="-1057" font-family="Arial" font-size="10.00" fill="#ffffff">1179480×</text>
</g>
<!-- operator new(unsigned long) -->
<g id="node15" class="node">
<title>operator new(unsigned long)</title>
<polygon fill="#0c758d" stroke="#0c758d" points="17602.5,-938 17463.5,-938 17463.5,-875 17602.5,-875 17602.5,-938"/>
<text text-anchor="middle" x="17533" y="-926" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.30</text>
<text text-anchor="middle" x="17533" y="-915" font-family="Arial" font-size="10.00" fill="#ffffff">operator new(unsigned long)</text>
<text text-anchor="middle" x="17533" y="-904" font-family="Arial" font-size="10.00" fill="#ffffff">20.33%</text>
<text text-anchor="middle" x="17533" y="-893" font-family="Arial" font-size="10.00" fill="#ffffff">(1.79%)</text>
<text text-anchor="middle" x="17533" y="-882" font-family="Arial" font-size="10.00" fill="#ffffff">1179502×</text>
</g>
<!-- 0x000000000010d7f0&#45;&gt;operator new(unsigned long) -->
<g id="edge8" class="edge">
<title>0x000000000010d7f0&#45;&gt;operator new(unsigned long)</title>
<path fill="none" stroke="#0c758d" stroke-width="0.81" d="M17533,-1049.97C17533,-1019.92 17533,-974.08 17533,-942.56"/>
<polygon fill="#0c758d" stroke="#0c758d" stroke-width="0.81" points="17534.58,-942.52 17533,-938.02 17531.43,-942.52 17534.58,-942.52"/>
<text text-anchor="middle" x="17554.5" y="-1033" font-family="Arial" font-size="10.00" fill="#0c758d">20.33%</text>
<text text-anchor="middle" x="17554.5" y="-1022" font-family="Arial" font-size="10.00" fill="#0c758d">1179480×</text>
</g>
<!-- 0x00000000048f60d0 -->
<g id="node24" class="node">
<title>0x00000000048f60d0</title>
<polygon fill="#0c6a8b" stroke="#0c6a8b" points="16688.5,-794 16579.5,-794 16579.5,-731 16688.5,-731 16688.5,-794"/>
<text text-anchor="middle" x="16634" y="-782" font-family="Arial" font-size="10.00" fill="#ffffff">???</text>
<text text-anchor="middle" x="16634" y="-771" font-family="Arial" font-size="10.00" fill="#ffffff">0x00000000048f60d0</text>
<text text-anchor="middle" x="16634" y="-760" font-family="Arial" font-size="10.00" fill="#ffffff">18.55%</text>
<text text-anchor="middle" x="16634" y="-749" font-family="Arial" font-size="10.00" fill="#ffffff">(0.30%)</text>
<text text-anchor="middle" x="16634" y="-738" font-family="Arial" font-size="10.00" fill="#ffffff">1179503×</text>
</g>
<!-- operator new(unsigned long)&#45;&gt;0x00000000048f60d0 -->
<g id="edge71" class="edge">
<title>operator new(unsigned long)&#45;&gt;0x00000000048f60d0</title>
<path fill="none" stroke="#0c6a8b" stroke-width="0.74" d="M17524.5,-874.63C17516.13,-850.63 17500.78,-818.85 17475,-803 17408.9,-762.35 16873.82,-761.96 16693.25,-763.01"/>
<polygon fill="#0c6a8b" stroke="#0c6a8b" stroke-width="0.74" points="16693.09,-761.5 16688.8,-763.03 16693.1,-764.51 16693.09,-761.5"/>
<text text-anchor="middle" x="17541.5" y="-837.5" font-family="Arial" font-size="10.00" fill="#0c6a8b">18.55%</text>
<text text-anchor="middle" x="17541.5" y="-826.5" font-family="Arial" font-size="10.00" fill="#0c6a8b">1179502×</text>
</g>
<!-- 0x000000000010d800 -->
<g id="node16" class="node">
<title>0x000000000010d800</title>
<polygon fill="#0c7c8f" stroke="#0c7c8f" points="3157.5,-1010 3046.5,-1010 3046.5,-947 3157.5,-947 3157.5,-1010"/>
<text text-anchor="middle" x="3102" y="-998" font-family="Arial" font-size="10.00" fill="#ffffff">???</text>
<text text-anchor="middle" x="3102" y="-987" font-family="Arial" font-size="10.00" fill="#ffffff">0x000000000010d800</text>
<text text-anchor="middle" x="3102" y="-976" font-family="Arial" font-size="10.00" fill="#ffffff">21.43%</text>
<text text-anchor="middle" x="3102" y="-965" font-family="Arial" font-size="10.00" fill="#ffffff">(0.30%)</text>
<text text-anchor="middle" x="3102" y="-954" font-family="Arial" font-size="10.00" fill="#ffffff">1179494×</text>
</g>
<!-- operator delete(void*, unsigned long) -->
<g id="node17" class="node">
<title>operator delete(void*, unsigned long)</title>
<polygon fill="#0c7a8e" stroke="#0c7a8e" points="13830.5,-866 13655.5,-866 13655.5,-803 13830.5,-803 13830.5,-866"/>
<text text-anchor="middle" x="13743" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.30</text>
<text text-anchor="middle" x="13743" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">operator delete(void*, unsigned long)</text>
<text text-anchor="middle" x="13743" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">21.13%</text>
<text text-anchor="middle" x="13743" y="-821" font-family="Arial" font-size="10.00" fill="#ffffff">(0.30%)</text>
<text text-anchor="middle" x="13743" y="-810" font-family="Arial" font-size="10.00" fill="#ffffff">1179494×</text>
</g>
<!-- 0x000000000010d800&#45;&gt;operator delete(void*, unsigned long) -->
<g id="edge9" class="edge">
<title>0x000000000010d800&#45;&gt;operator delete(void*, unsigned long)</title>
<path fill="none" stroke="#0c7a8e" stroke-width="0.85" d="M3157.68,-976.72C3408.41,-973.23 4457.79,-958.62 5319,-947 8753.86,-900.64 12976.55,-845.5 13650.44,-836.71"/>
<polygon fill="#0c7a8e" stroke="#0c7a8e" stroke-width="0.85" points="13650.75,-838.31 13655.33,-836.64 13650.71,-835.09 13650.75,-838.31"/>
<text text-anchor="middle" x="10554.5" y="-909.5" font-family="Arial" font-size="10.00" fill="#0c7a8e">21.13%</text>
<text text-anchor="middle" x="10554.5" y="-898.5" font-family="Arial" font-size="10.00" fill="#0c7a8e">1179494×</text>
</g>
<!-- 0x00000000048f62e0 -->
<g id="node26" class="node">
<title>0x00000000048f62e0</title>
<polygon fill="#0c788e" stroke="#0c788e" points="13926.5,-722 13817.5,-722 13817.5,-659 13926.5,-659 13926.5,-722"/>
<text text-anchor="middle" x="13872" y="-710" font-family="Arial" font-size="10.00" fill="#ffffff">???</text>
<text text-anchor="middle" x="13872" y="-699" font-family="Arial" font-size="10.00" fill="#ffffff">0x00000000048f62e0</text>
<text text-anchor="middle" x="13872" y="-688" font-family="Arial" font-size="10.00" fill="#ffffff">20.84%</text>
<text text-anchor="middle" x="13872" y="-677" font-family="Arial" font-size="10.00" fill="#ffffff">(0.30%)</text>
<text text-anchor="middle" x="13872" y="-666" font-family="Arial" font-size="10.00" fill="#ffffff">1179496×</text>
</g>
<!-- operator delete(void*, unsigned long)&#45;&gt;0x00000000048f62e0 -->
<g id="edge70" class="edge">
<title>operator delete(void*, unsigned long)&#45;&gt;0x00000000048f62e0</title>
<path fill="none" stroke="#0c788e" stroke-width="0.83" d="M13770.99,-802.69C13791.61,-779.99 13819.66,-749.11 13840.97,-725.66"/>
<polygon fill="#0c788e" stroke="#0c788e" stroke-width="0.83" points="13842.16,-726.74 13844.06,-722.25 13839.78,-724.57 13842.16,-726.74"/>
<text text-anchor="middle" x="13854.5" y="-765.5" font-family="Arial" font-size="10.00" fill="#0c788e">20.84%</text>
<text text-anchor="middle" x="13854.5" y="-754.5" font-family="Arial" font-size="10.00" fill="#0c788e">1179494×</text>
</g>
<!-- 0x000000000010d8c0 -->
<g id="node18" class="node">
<title>0x000000000010d8c0</title>
<polygon fill="#0d1977" stroke="#0d1977" points="20754.5,-1648 20643.5,-1648 20643.5,-1585 20754.5,-1585 20754.5,-1648"/>
<text text-anchor="middle" x="20699" y="-1636" font-family="Arial" font-size="10.00" fill="#ffffff">???</text>
<text text-anchor="middle" x="20699" y="-1625" font-family="Arial" font-size="10.00" fill="#ffffff">0x000000000010d8c0</text>
<text text-anchor="middle" x="20699" y="-1614" font-family="Arial" font-size="10.00" fill="#ffffff">3.00%</text>
<text text-anchor="middle" x="20699" y="-1603" font-family="Arial" font-size="10.00" fill="#ffffff">(0.09%)</text>
<text text-anchor="middle" x="20699" y="-1592" font-family="Arial" font-size="10.00" fill="#ffffff">338847×</text>
</g>
<!-- std::istream::get(char&amp;) -->
<g id="node19" class="node">
<title>std::istream::get(char&amp;)</title>
<polygon fill="#0d1976" stroke="#0d1976" points="20823.5,-1504 20704.5,-1504 20704.5,-1441 20823.5,-1441 20823.5,-1504"/>
<text text-anchor="middle" x="20764" y="-1492" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.30</text>
<text text-anchor="middle" x="20764" y="-1481" font-family="Arial" font-size="10.00" fill="#ffffff">std::istream::get(char&amp;)</text>
<text text-anchor="middle" x="20764" y="-1470" font-family="Arial" font-size="10.00" fill="#ffffff">2.91%</text>
<text text-anchor="middle" x="20764" y="-1459" font-family="Arial" font-size="10.00" fill="#ffffff">(1.63%)</text>
<text text-anchor="middle" x="20764" y="-1448" font-family="Arial" font-size="10.00" fill="#ffffff">338847×</text>
</g>
<!-- 0x000000000010d8c0&#45;&gt;std::istream::get(char&amp;) -->
<g id="edge10" class="edge">
<title>0x000000000010d8c0&#45;&gt;std::istream::get(char&amp;)</title>
<path fill="none" stroke="#0d1976" stroke-width="0.5" d="M20713.1,-1584.69C20723.5,-1561.99 20737.63,-1531.11 20748.36,-1507.66"/>
<polygon fill="#0d1976" stroke="#0d1976" stroke-width="0.5" points="20749.58,-1507.94 20749.92,-1504.25 20747.35,-1506.92 20749.58,-1507.94"/>
<text text-anchor="middle" x="20763" y="-1547.5" font-family="Arial" font-size="10.00" fill="#0d1976">2.91%</text>
<text text-anchor="middle" x="20763" y="-1536.5" font-family="Arial" font-size="10.00" fill="#0d1976">338847×</text>
</g>
<!-- 0x00000000048f8990 -->
<g id="node30" class="node">
<title>0x00000000048f8990</title>
<polygon fill="#0d1274" stroke="#0d1274" points="20875.5,-1360 20766.5,-1360 20766.5,-1297 20875.5,-1297 20875.5,-1360"/>
<text text-anchor="middle" x="20821" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">???</text>
<text text-anchor="middle" x="20821" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">0x00000000048f8990</text>
<text text-anchor="middle" x="20821" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">1.28%</text>
<text text-anchor="middle" x="20821" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.09%)</text>
<text text-anchor="middle" x="20821" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">338847×</text>
</g>
<!-- std::istream::get(char&amp;)&#45;&gt;0x00000000048f8990 -->
<g id="edge118" class="edge">
<title>std::istream::get(char&amp;)&#45;&gt;0x00000000048f8990</title>
<path fill="none" stroke="#0d1274" stroke-width="0.5" d="M20776.37,-1440.69C20785.48,-1417.99 20797.87,-1387.11 20807.29,-1363.66"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width="0.5" points="20808.49,-1363.96 20808.66,-1360.25 20806.22,-1363.04 20808.49,-1363.96"/>
<text text-anchor="middle" x="20823" y="-1403.5" font-family="Arial" font-size="10.00" fill="#0d1274">1.28%</text>
<text text-anchor="middle" x="20823" y="-1392.5" font-family="Arial" font-size="10.00" fill="#0d1274">338847×</text>
</g>
<!-- 0x000000000010d9b0 -->
<g id="node20" class="node">
<title>0x000000000010d9b0</title>
<polygon fill="#0d1074" stroke="#0d1074" points="6231.5,-1113 6120.5,-1113 6120.5,-1050 6231.5,-1050 6231.5,-1113"/>
<text text-anchor="middle" x="6176" y="-1101" font-family="Arial" font-size="10.00" fill="#ffffff">???</text>
<text text-anchor="middle" x="6176" y="-1090" font-family="Arial" font-size="10.00" fill="#ffffff">0x000000000010d9b0</text>
<text text-anchor="middle" x="6176" y="-1079" font-family="Arial" font-size="10.00" fill="#ffffff">0.75%</text>
<text text-anchor="middle" x="6176" y="-1068" font-family="Arial" font-size="10.00" fill="#ffffff">(0.06%)</text>
<text text-anchor="middle" x="6176" y="-1057" font-family="Arial" font-size="10.00" fill="#ffffff">242029×</text>
</g>
<!-- __memcpy_avx_unaligned_erms -->
<g id="node21" class="node">
<title>__memcpy_avx_unaligned_erms</title>
<polygon fill="#0d1274" stroke="#0d1274" points="17377.5,-1010 17218.5,-1010 17218.5,-947 17377.5,-947 17377.5,-1010"/>
<text text-anchor="middle" x="17298" y="-998" font-family="Arial" font-size="10.00" fill="#ffffff">libc.so.6</text>
<text text-anchor="middle" x="17298" y="-987" font-family="Arial" font-size="10.00" fill="#ffffff">__memcpy_avx_unaligned_erms</text>
<text text-anchor="middle" x="17298" y="-976" font-family="Arial" font-size="10.00" fill="#ffffff">1.34%</text>
<text text-anchor="middle" x="17298" y="-965" font-family="Arial" font-size="10.00" fill="#ffffff">(1.34%)</text>
<text text-anchor="middle" x="17298" y="-954" font-family="Arial" font-size="10.00" fill="#ffffff">535962×</text>
</g>
<!-- 0x000000000010d9b0&#45;&gt;__memcpy_avx_unaligned_erms -->
<g id="edge11" class="edge">
<title>0x000000000010d9b0&#45;&gt;__memcpy_avx_unaligned_erms</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M6231.56,-1080C7032.59,-1072.72 16240.23,-989.11 17214.67,-980.26"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="17214.72,-981.48 17218.21,-980.22 17214.7,-979.03 17214.72,-981.48"/>
<text text-anchor="middle" x="12752" y="-1033" font-family="Arial" font-size="10.00" fill="#0d1074">0.69%</text>
<text text-anchor="middle" x="12752" y="-1022" font-family="Arial" font-size="10.00" fill="#0d1074">242029×</text>
</g>
<!-- 0x000000000010da50 -->
<g id="node22" class="node">
<title>0x000000000010da50</title>
<polygon fill="#0d1375" stroke="#0d1375" points="20719.5,-1257 20608.5,-1257 20608.5,-1194 20719.5,-1194 20719.5,-1257"/>
<text text-anchor="middle" x="20664" y="-1245" font-family="Arial" font-size="10.00" fill="#ffffff">???</text>
<text text-anchor="middle" x="20664" y="-1234" font-family="Arial" font-size="10.00" fill="#ffffff">0x000000000010da50</text>
<text text-anchor="middle" x="20664" y="-1223" font-family="Arial" font-size="10.00" fill="#ffffff">1.41%</text>
<text text-anchor="middle" x="20664" y="-1212" font-family="Arial" font-size="10.00" fill="#ffffff">(0.05%)</text>
<text text-anchor="middle" x="20664" y="-1201" font-family="Arial" font-size="10.00" fill="#ffffff">199970×</text>
</g>
<!-- exp@@GLIBC_2.29 -->
<g id="node23" class="node">
<title>exp@@GLIBC_2.29</title>
<polygon fill="#0d1274" stroke="#0d1274" points="20655.5,-1113 20548.5,-1113 20548.5,-1050 20655.5,-1050 20655.5,-1113"/>
<text text-anchor="middle" x="20602" y="-1101" font-family="Arial" font-size="10.00" fill="#ffffff">libm.so.6</text>
<text text-anchor="middle" x="20602" y="-1090" font-family="Arial" font-size="10.00" fill="#ffffff">exp@@GLIBC_2.29</text>
<text text-anchor="middle" x="20602" y="-1079" font-family="Arial" font-size="10.00" fill="#ffffff">1.36%</text>
<text text-anchor="middle" x="20602" y="-1068" font-family="Arial" font-size="10.00" fill="#ffffff">(0.40%)</text>
<text text-anchor="middle" x="20602" y="-1057" font-family="Arial" font-size="10.00" fill="#ffffff">199970×</text>
</g>
<!-- 0x000000000010da50&#45;&gt;exp@@GLIBC_2.29 -->
<g id="edge12" class="edge">
<title>0x000000000010da50&#45;&gt;exp@@GLIBC_2.29</title>
<path fill="none" stroke="#0d1274" stroke-width="0.5" d="M20650.55,-1193.69C20640.63,-1170.99 20627.15,-1140.11 20616.91,-1116.66"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width="0.5" points="20617.95,-1115.97 20615.43,-1113.25 20615.7,-1116.95 20617.95,-1115.97"/>
<text text-anchor="middle" x="20664" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d1274">1.36%</text>
<text text-anchor="middle" x="20664" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d1274">199970×</text>
</g>
<!-- 0x0000000004a91380 -->
<g id="node34" class="node">
<title>0x0000000004a91380</title>
<polygon fill="#0d1174" stroke="#0d1174" points="20657.5,-1010 20546.5,-1010 20546.5,-947 20657.5,-947 20657.5,-1010"/>
<text text-anchor="middle" x="20602" y="-998" font-family="Arial" font-size="10.00" fill="#ffffff">???</text>
<text text-anchor="middle" x="20602" y="-987" font-family="Arial" font-size="10.00" fill="#ffffff">0x0000000004a91380</text>
<text text-anchor="middle" x="20602" y="-976" font-family="Arial" font-size="10.00" fill="#ffffff">0.96%</text>
<text text-anchor="middle" x="20602" y="-965" font-family="Arial" font-size="10.00" fill="#ffffff">(0.05%)</text>
<text text-anchor="middle" x="20602" y="-954" font-family="Arial" font-size="10.00" fill="#ffffff">199970×</text>
</g>
<!-- exp@@GLIBC_2.29&#45;&gt;0x0000000004a91380 -->
<g id="edge50" class="edge">
<title>exp@@GLIBC_2.29&#45;&gt;0x0000000004a91380</title>
<path fill="none" stroke="#0d1174" stroke-width="0.5" d="M20602,-1049.92C20602,-1038.56 20602,-1025.59 20602,-1013.9"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width="0.5" points="20603.23,-1013.82 20602,-1010.32 20600.78,-1013.82 20603.23,-1013.82"/>
<text text-anchor="middle" x="20621" y="-1033" font-family="Arial" font-size="10.00" fill="#0d1174">0.96%</text>
<text text-anchor="middle" x="20621" y="-1022" font-family="Arial" font-size="10.00" fill="#0d1174">199970×</text>
</g>
<!-- malloc -->
<g id="node25" class="node">
<title>malloc</title>
<polygon fill="#0c688a" stroke="#0c688a" points="15785.5,-650 15726.5,-650 15726.5,-587 15785.5,-587 15785.5,-650"/>
<text text-anchor="middle" x="15756" y="-638" font-family="Arial" font-size="10.00" fill="#ffffff">libc.so.6</text>
<text text-anchor="middle" x="15756" y="-627" font-family="Arial" font-size="10.00" fill="#ffffff">malloc</text>
<text text-anchor="middle" x="15756" y="-616" font-family="Arial" font-size="10.00" fill="#ffffff">18.25%</text>
<text text-anchor="middle" x="15756" y="-605" font-family="Arial" font-size="10.00" fill="#ffffff">(6.61%)</text>
<text text-anchor="middle" x="15756" y="-594" font-family="Arial" font-size="10.00" fill="#ffffff">1179505×</text>
</g>
<!-- 0x00000000048f60d0&#45;&gt;malloc -->
<g id="edge13" class="edge">
<title>0x00000000048f60d0&#45;&gt;malloc</title>
<path fill="none" stroke="#0c688a" stroke-width="0.73" d="M16579.41,-752.67C16414.46,-725.99 15924.32,-646.72 15790.23,-625.04"/>
<polygon fill="#0c688a" stroke="#0c688a" stroke-width="0.73" points="15790.1,-623.49 15785.62,-624.29 15789.62,-626.46 15790.1,-623.49"/>
<text text-anchor="middle" x="16395.5" y="-693.5" font-family="Arial" font-size="10.00" fill="#0c688a">18.25%</text>
<text text-anchor="middle" x="16395.5" y="-682.5" font-family="Arial" font-size="10.00" fill="#0c688a">1179503×</text>
</g>
<!-- _int_malloc -->
<g id="node56" class="node">
<title>_int_malloc</title>
<polygon fill="#0d4382" stroke="#0d4382" points="14035,-269 13969,-269 13969,-206 14035,-206 14035,-269"/>
<text text-anchor="middle" x="14002" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">libc.so.6</text>
<text text-anchor="middle" x="14002" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">_int_malloc</text>
<text text-anchor="middle" x="14002" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">11.63%</text>
<text text-anchor="middle" x="14002" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(11.24%)</text>
<text text-anchor="middle" x="14002" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">583033×</text>
</g>
<!-- malloc&#45;&gt;_int_malloc -->
<g id="edge63" class="edge">
<title>malloc&#45;&gt;_int_malloc</title>
<path fill="none" stroke="#0d4382" stroke-width="0.5" d="M15756,-586.79C15756,-562.23 15756,-526.9 15756,-496 15756,-496 15756,-496 15756,-339.5 15756,-250.29 14290.8,-239.78 14038.71,-238.63"/>
<polygon fill="#0d4382" stroke="#0d4382" stroke-width="0.5" points="14038.59,-237.41 14035.09,-238.62 14038.58,-239.86 14038.59,-237.41"/>
<text text-anchor="middle" x="15775" y="-446.5" font-family="Arial" font-size="10.00" fill="#0d4382">11.63%</text>
<text text-anchor="middle" x="15775" y="-435.5" font-family="Arial" font-size="10.00" fill="#0d4382">583031×</text>
</g>
<!-- operator delete(void*) -->
<g id="node27" class="node">
<title>operator delete(void*)</title>
<polygon fill="#0c768d" stroke="#0c768d" points="13964.5,-578 13855.5,-578 13855.5,-515 13964.5,-515 13964.5,-578"/>
<text text-anchor="middle" x="13910" y="-566" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.30</text>
<text text-anchor="middle" x="13910" y="-555" font-family="Arial" font-size="10.00" fill="#ffffff">operator delete(void*)</text>
<text text-anchor="middle" x="13910" y="-544" font-family="Arial" font-size="10.00" fill="#ffffff">20.54%</text>
<text text-anchor="middle" x="13910" y="-533" font-family="Arial" font-size="10.00" fill="#ffffff">(0.30%)</text>
<text text-anchor="middle" x="13910" y="-522" font-family="Arial" font-size="10.00" fill="#ffffff">1179496×</text>
</g>
<!-- 0x00000000048f62e0&#45;&gt;operator delete(void*) -->
<g id="edge14" class="edge">
<title>0x00000000048f62e0&#45;&gt;operator delete(void*)</title>
<path fill="none" stroke="#0c768d" stroke-width="0.82" d="M13880.25,-658.69C13886.22,-636.36 13894.31,-606.12 13900.55,-582.82"/>
<polygon fill="#0c768d" stroke="#0c768d" stroke-width="0.82" points="13902.13,-583.01 13901.77,-578.25 13899.09,-582.19 13902.13,-583.01"/>
<text text-anchor="middle" x="13919.5" y="-621.5" font-family="Arial" font-size="10.00" fill="#0c768d">20.54%</text>
<text text-anchor="middle" x="13919.5" y="-610.5" font-family="Arial" font-size="10.00" fill="#0c768d">1179496×</text>
</g>
<!-- 0x00000000048f6b30 -->
<g id="node28" class="node">
<title>0x00000000048f6b30</title>
<polygon fill="#0c758d" stroke="#0c758d" points="13973.5,-475 13864.5,-475 13864.5,-412 13973.5,-412 13973.5,-475"/>
<text text-anchor="middle" x="13919" y="-463" font-family="Arial" font-size="10.00" fill="#ffffff">???</text>
<text text-anchor="middle" x="13919" y="-452" font-family="Arial" font-size="10.00" fill="#ffffff">0x00000000048f6b30</text>
<text text-anchor="middle" x="13919" y="-441" font-family="Arial" font-size="10.00" fill="#ffffff">20.24%</text>
<text text-anchor="middle" x="13919" y="-430" font-family="Arial" font-size="10.00" fill="#ffffff">(0.30%)</text>
<text text-anchor="middle" x="13919" y="-419" font-family="Arial" font-size="10.00" fill="#ffffff">1179496×</text>
</g>
<!-- operator delete(void*)&#45;&gt;0x00000000048f6b30 -->
<g id="edge69" class="edge">
<title>operator delete(void*)&#45;&gt;0x00000000048f6b30</title>
<path fill="none" stroke="#0c758d" stroke-width="0.81" d="M13912.72,-514.92C13913.71,-503.85 13914.83,-491.26 13915.85,-479.81"/>
<polygon fill="#0c758d" stroke="#0c758d" stroke-width="0.81" points="13917.42,-479.94 13916.25,-475.32 13914.29,-479.66 13917.42,-479.94"/>
<text text-anchor="middle" x="13936.5" y="-498" font-family="Arial" font-size="10.00" fill="#0c758d">20.24%</text>
<text text-anchor="middle" x="13936.5" y="-487" font-family="Arial" font-size="10.00" fill="#0c758d">1179496×</text>
</g>
<!-- free -->
<g id="node29" class="node">
<title>free</title>
<polygon fill="#0c738d" stroke="#0c738d" points="13951.5,-372 13892.5,-372 13892.5,-309 13951.5,-309 13951.5,-372"/>
<text text-anchor="middle" x="13922" y="-360" font-family="Arial" font-size="10.00" fill="#ffffff">libc.so.6</text>
<text text-anchor="middle" x="13922" y="-349" font-family="Arial" font-size="10.00" fill="#ffffff">free</text>
<text text-anchor="middle" x="13922" y="-338" font-family="Arial" font-size="10.00" fill="#ffffff">19.94%</text>
<text text-anchor="middle" x="13922" y="-327" font-family="Arial" font-size="10.00" fill="#ffffff">(3.72%)</text>
<text text-anchor="middle" x="13922" y="-316" font-family="Arial" font-size="10.00" fill="#ffffff">1179498×</text>
</g>
<!-- 0x00000000048f6b30&#45;&gt;free -->
<g id="edge15" class="edge">
<title>0x00000000048f6b30&#45;&gt;free</title>
<path fill="none" stroke="#0c738d" stroke-width="0.8" d="M13919.91,-411.92C13920.23,-400.95 13920.6,-388.48 13920.94,-377.12"/>
<polygon fill="#0c738d" stroke="#0c738d" stroke-width="0.8" points="13922.53,-376.87 13921.08,-372.32 13919.38,-376.77 13922.53,-376.87"/>
<text text-anchor="middle" x="13941.5" y="-395" font-family="Arial" font-size="10.00" fill="#0c738d">19.94%</text>
<text text-anchor="middle" x="13941.5" y="-384" font-family="Arial" font-size="10.00" fill="#0c738d">1179496×</text>
</g>
<!-- _int_free -->
<g id="node54" class="node">
<title>_int_free</title>
<polygon fill="#0c5c88" stroke="#0c5c88" points="13951.5,-269 13892.5,-269 13892.5,-206 13951.5,-206 13951.5,-269"/>
<text text-anchor="middle" x="13922" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">libc.so.6</text>
<text text-anchor="middle" x="13922" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">_int_free</text>
<text text-anchor="middle" x="13922" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">16.22%</text>
<text text-anchor="middle" x="13922" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(11.40%)</text>
<text text-anchor="middle" x="13922" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">1179624×</text>
</g>
<!-- free&#45;&gt;_int_free -->
<g id="edge51" class="edge">
<title>free&#45;&gt;_int_free</title>
<path fill="none" stroke="#0c5c88" stroke-width="0.65" d="M13922,-308.92C13922,-297.75 13922,-285.04 13922,-273.51"/>
<polygon fill="#0c5c88" stroke="#0c5c88" stroke-width="0.65" points="13923.4,-273.32 13922,-269.32 13920.6,-273.32 13923.4,-273.32"/>
<text text-anchor="middle" x="13943.5" y="-292" font-family="Arial" font-size="10.00" fill="#0c5c88">16.22%</text>
<text text-anchor="middle" x="13943.5" y="-281" font-family="Arial" font-size="10.00" fill="#0c5c88">1179493×</text>
</g>
<!-- std::istream::sentry::sentry(std::istream&amp;, bool) -->
<g id="node31" class="node">
<title>std::istream::sentry::sentry(std::istream&amp;, bool)</title>
<polygon fill="#0d1274" stroke="#0d1274" points="20951.5,-1257 20728.5,-1257 20728.5,-1194 20951.5,-1194 20951.5,-1257"/>
<text text-anchor="middle" x="20840" y="-1245" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.30</text>
<text text-anchor="middle" x="20840" y="-1234" font-family="Arial" font-size="10.00" fill="#ffffff">std::istream::sentry::sentry(std::istream&amp;, bool)</text>
<text text-anchor="middle" x="20840" y="-1223" font-family="Arial" font-size="10.00" fill="#ffffff">1.20%</text>
<text text-anchor="middle" x="20840" y="-1212" font-family="Arial" font-size="10.00" fill="#ffffff">(1.20%)</text>
<text text-anchor="middle" x="20840" y="-1201" font-family="Arial" font-size="10.00" fill="#ffffff">338847×</text>
</g>
<!-- 0x00000000048f8990&#45;&gt;std::istream::sentry::sentry(std::istream&amp;, bool) -->
<g id="edge16" class="edge">
<title>0x00000000048f8990&#45;&gt;std::istream::sentry::sentry(std::istream&amp;, bool)</title>
<path fill="none" stroke="#0d1274" stroke-width="0.5" d="M20826.75,-1296.92C20828.89,-1285.56 20831.33,-1272.59 20833.53,-1260.9"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width="0.5" points="20834.76,-1260.99 20834.2,-1257.32 20832.35,-1260.54 20834.76,-1260.99"/>
<text text-anchor="middle" x="20851" y="-1280" font-family="Arial" font-size="10.00" fill="#0d1274">1.20%</text>
<text text-anchor="middle" x="20851" y="-1269" font-family="Arial" font-size="10.00" fill="#0d1274">338847×</text>
</g>
<!-- __ieee754_log_fma -->
<g id="node33" class="node">
<title>__ieee754_log_fma</title>
<polygon fill="#0d1375" stroke="#0d1375" points="17470.5,-866 17369.5,-866 17369.5,-803 17470.5,-803 17470.5,-866"/>
<text text-anchor="middle" x="17420" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">libm.so.6</text>
<text text-anchor="middle" x="17420" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">__ieee754_log_fma</text>
<text text-anchor="middle" x="17420" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">1.42%</text>
<text text-anchor="middle" x="17420" y="-821" font-family="Arial" font-size="10.00" fill="#ffffff">(1.42%)</text>
<text text-anchor="middle" x="17420" y="-810" font-family="Arial" font-size="10.00" fill="#ffffff">240886×</text>
</g>
<!-- 0x0000000004a912e0&#45;&gt;__ieee754_log_fma -->
<g id="edge17" class="edge">
<title>0x0000000004a912e0&#45;&gt;__ieee754_log_fma</title>
<path fill="none" stroke="#0d1375" stroke-width="0.5" d="M17423.83,-946.57C17422.7,-943.74 17421.73,-940.86 17421,-938 17415.36,-915.85 17415.13,-890.12 17416.3,-869.99"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width="0.5" points="17417.55,-869.61 17416.55,-866.04 17415.1,-869.45 17417.55,-869.61"/>
<text text-anchor="middle" x="17440" y="-909.5" font-family="Arial" font-size="10.00" fill="#0d1375">1.42%</text>
<text text-anchor="middle" x="17440" y="-898.5" font-family="Arial" font-size="10.00" fill="#0d1375">240886×</text>
</g>
<!-- __ieee754_exp_fma -->
<g id="node35" class="node">
<title>__ieee754_exp_fma</title>
<polygon fill="#0d1074" stroke="#0d1074" points="20654,-866 20550,-866 20550,-803 20654,-803 20654,-866"/>
<text text-anchor="middle" x="20602" y="-854" font-family="Arial" font-size="10.00" fill="#ffffff">libm.so.6</text>
<text text-anchor="middle" x="20602" y="-843" font-family="Arial" font-size="10.00" fill="#ffffff">__ieee754_exp_fma</text>
<text text-anchor="middle" x="20602" y="-832" font-family="Arial" font-size="10.00" fill="#ffffff">0.91%</text>
<text text-anchor="middle" x="20602" y="-821" font-family="Arial" font-size="10.00" fill="#ffffff">(0.91%)</text>
<text text-anchor="middle" x="20602" y="-810" font-family="Arial" font-size="10.00" fill="#ffffff">199970×</text>
</g>
<!-- 0x0000000004a91380&#45;&gt;__ieee754_exp_fma -->
<g id="edge18" class="edge">
<title>0x0000000004a91380&#45;&gt;__ieee754_exp_fma</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M20602,-946.69C20602,-924.08 20602,-893.36 20602,-869.95"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="20603.23,-869.75 20602,-866.25 20600.78,-869.75 20603.23,-869.75"/>
<text text-anchor="middle" x="20621" y="-909.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.91%</text>
<text text-anchor="middle" x="20621" y="-898.5" font-family="Arial" font-size="10.00" fill="#0d1074">199970×</text>
</g>
<!-- DiscreteDistribution::DiscreteDistribution(std::vector&lt;double, std::allocator&lt;double&gt; &gt; const&amp;, double) -->
<g id="node36" class="node">
<title>DiscreteDistribution::DiscreteDistribution(std::vector&lt;double, std::allocator&lt;double&gt; &gt; const&amp;, double)</title>
<polygon fill="#0c728d" stroke="#0c728d" points="19717,-1360 19255,-1360 19255,-1297 19717,-1297 19717,-1360"/>
<text text-anchor="middle" x="19486" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="19486" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">DiscreteDistribution::DiscreteDistribution(std::vector&lt;double, std::allocator&lt;double&gt; &gt; const&amp;, double)</text>
<text text-anchor="middle" x="19486" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">19.87%</text>
<text text-anchor="middle" x="19486" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(3.56%)</text>
<text text-anchor="middle" x="19486" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">79992×</text>
</g>
<!-- std::_Deque_base&lt;std::pair&lt;int, double&gt;, std::allocator&lt;std::pair&lt;int, double&gt; &gt; &gt;::_M_initialize_map(unsigned long) -->
<g id="node37" class="node">
<title>std::_Deque_base&lt;std::pair&lt;int, double&gt;, std::allocator&lt;std::pair&lt;int, double&gt; &gt; &gt;::_M_initialize_map(unsigned long)</title>
<polygon fill="#0d257a" stroke="#0d257a" points="18121.5,-1257 17598.5,-1257 17598.5,-1194 18121.5,-1194 18121.5,-1257"/>
<text text-anchor="middle" x="17860" y="-1245" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="17860" y="-1234" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Deque_base&lt;std::pair&lt;int, double&gt;, std::allocator&lt;std::pair&lt;int, double&gt; &gt; &gt;::_M_initialize_map(unsigned long)</text>
<text text-anchor="middle" x="17860" y="-1223" font-family="Arial" font-size="10.00" fill="#ffffff">5.60%</text>
<text text-anchor="middle" x="17860" y="-1212" font-family="Arial" font-size="10.00" fill="#ffffff">(1.13%)</text>
<text text-anchor="middle" x="17860" y="-1201" font-family="Arial" font-size="10.00" fill="#ffffff">159984×</text>
</g>
<!-- DiscreteDistribution::DiscreteDistribution(std::vector&lt;double, std::allocator&lt;double&gt; &gt; const&amp;, double)&#45;&gt;std::_Deque_base&lt;std::pair&lt;int, double&gt;, std::allocator&lt;std::pair&lt;int, double&gt; &gt; &gt;::_M_initialize_map(unsigned long) -->
<g id="edge19" class="edge">
<title>DiscreteDistribution::DiscreteDistribution(std::vector&lt;double, std::allocator&lt;double&gt; &gt; const&amp;, double)&#45;&gt;std::_Deque_base&lt;std::pair&lt;int, double&gt;, std::allocator&lt;std::pair&lt;int, double&gt; &gt; &gt;::_M_initialize_map(unsigned long)</title>
<path fill="none" stroke="#0d257a" stroke-width="0.5" d="M19308.41,-1296.97C19230.06,-1284.9 19136.71,-1272.39 19052,-1266 18846.79,-1250.53 18331.39,-1269.74 18126,-1257 18125.83,-1256.99 18125.65,-1256.98 18125.48,-1256.97"/>
<polygon fill="#0d257a" stroke="#0d257a" stroke-width="0.5" points="18125.38,-1255.73 18121.81,-1256.73 18125.23,-1258.18 18125.38,-1255.73"/>
<text text-anchor="middle" x="19262" y="-1280" font-family="Arial" font-size="10.00" fill="#0d257a">5.60%</text>
<text text-anchor="middle" x="19262" y="-1269" font-family="Arial" font-size="10.00" fill="#0d257a">159984×</text>
</g>
<!-- std::_Deque_base&lt;std::pair&lt;int, double&gt;, std::allocator&lt;std::pair&lt;int, double&gt; &gt; &gt;::~_Deque_base() -->
<g id="node38" class="node">
<title>std::_Deque_base&lt;std::pair&lt;int, double&gt;, std::allocator&lt;std::pair&lt;int, double&gt; &gt; &gt;::~_Deque_base()</title>
<polygon fill="#0d2179" stroke="#0d2179" points="5383.5,-1185 4932.5,-1185 4932.5,-1122 5383.5,-1122 5383.5,-1185"/>
<text text-anchor="middle" x="5158" y="-1173" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="5158" y="-1162" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Deque_base&lt;std::pair&lt;int, double&gt;, std::allocator&lt;std::pair&lt;int, double&gt; &gt; &gt;::~_Deque_base()</text>
<text text-anchor="middle" x="5158" y="-1151" font-family="Arial" font-size="10.00" fill="#ffffff">4.58%</text>
<text text-anchor="middle" x="5158" y="-1140" font-family="Arial" font-size="10.00" fill="#ffffff">(0.55%)</text>
<text text-anchor="middle" x="5158" y="-1129" font-family="Arial" font-size="10.00" fill="#ffffff">159984×</text>
</g>
<!-- DiscreteDistribution::DiscreteDistribution(std::vector&lt;double, std::allocator&lt;double&gt; &gt; const&amp;, double)&#45;&gt;std::_Deque_base&lt;std::pair&lt;int, double&gt;, std::allocator&lt;std::pair&lt;int, double&gt; &gt; &gt;::~_Deque_base() -->
<g id="edge20" class="edge">
<title>DiscreteDistribution::DiscreteDistribution(std::vector&lt;double, std::allocator&lt;double&gt; &gt; const&amp;, double)&#45;&gt;std::_Deque_base&lt;std::pair&lt;int, double&gt;, std::allocator&lt;std::pair&lt;int, double&gt; &gt; &gt;::~_Deque_base()</title>
<path fill="none" stroke="#0d2179" stroke-width="0.5" d="M19254.96,-1297.33C19253.3,-1297.22 19251.65,-1297.11 19250,-1297 19069.72,-1285.34 6423.63,-1290.67 6243,-1288 6183.26,-1287.12 5211.67,-1297.78 5168,-1257 5149.89,-1240.09 5148.46,-1211.45 5150.95,-1188.73"/>
<polygon fill="#0d2179" stroke="#0d2179" stroke-width="0.5" points="5152.18,-1188.76 5151.38,-1185.14 5149.75,-1188.47 5152.18,-1188.76"/>
<text text-anchor="middle" x="6262" y="-1280" font-family="Arial" font-size="10.00" fill="#0d2179">4.58%</text>
<text text-anchor="middle" x="6262" y="-1269" font-family="Arial" font-size="10.00" fill="#0d2179">159984×</text>
</g>
<!-- std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_append(unsigned long) -->
<g id="node39" class="node">
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_append(unsigned long)</title>
<polygon fill="#0d2079" stroke="#0d2079" points="19625,-1257 19259,-1257 19259,-1194 19625,-1194 19625,-1257"/>
<text text-anchor="middle" x="19442" y="-1245" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="19442" y="-1234" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_append(unsigned long)</text>
<text text-anchor="middle" x="19442" y="-1223" font-family="Arial" font-size="10.00" fill="#ffffff">4.51%</text>
<text text-anchor="middle" x="19442" y="-1212" font-family="Arial" font-size="10.00" fill="#ffffff">(1.56%)</text>
<text text-anchor="middle" x="19442" y="-1201" font-family="Arial" font-size="10.00" fill="#ffffff">159986×</text>
</g>
<!-- DiscreteDistribution::DiscreteDistribution(std::vector&lt;double, std::allocator&lt;double&gt; &gt; const&amp;, double)&#45;&gt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_append(unsigned long) -->
<g id="edge21" class="edge">
<title>DiscreteDistribution::DiscreteDistribution(std::vector&lt;double, std::allocator&lt;double&gt; &gt; const&amp;, double)&#45;&gt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_append(unsigned long)</title>
<path fill="none" stroke="#0d1977" stroke-width="0.5" d="M19472.68,-1296.92C19467.69,-1285.46 19461.98,-1272.36 19456.86,-1260.6"/>
<polygon fill="#0d1977" stroke="#0d1977" stroke-width="0.5" points="19457.95,-1260.04 19455.43,-1257.32 19455.7,-1261.02 19457.95,-1260.04"/>
<text text-anchor="middle" x="19483.5" y="-1280" font-family="Arial" font-size="10.00" fill="#0d1977">3.00%</text>
<text text-anchor="middle" x="19483.5" y="-1269" font-family="Arial" font-size="10.00" fill="#0d1977">79992×</text>
</g>
<!-- std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_default_append(unsigned long) -->
<g id="node40" class="node">
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_default_append(unsigned long)</title>
<polygon fill="#0d1a77" stroke="#0d1a77" points="19964,-1257 19634,-1257 19634,-1194 19964,-1194 19964,-1257"/>
<text text-anchor="middle" x="19799" y="-1245" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="19799" y="-1234" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_default_append(unsigned long)</text>
<text text-anchor="middle" x="19799" y="-1223" font-family="Arial" font-size="10.00" fill="#ffffff">3.13%</text>
<text text-anchor="middle" x="19799" y="-1212" font-family="Arial" font-size="10.00" fill="#ffffff">(0.78%)</text>
<text text-anchor="middle" x="19799" y="-1201" font-family="Arial" font-size="10.00" fill="#ffffff">79992×</text>
</g>
<!-- DiscreteDistribution::DiscreteDistribution(std::vector&lt;double, std::allocator&lt;double&gt; &gt; const&amp;, double)&#45;&gt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_default_append(unsigned long) -->
<g id="edge22" class="edge">
<title>DiscreteDistribution::DiscreteDistribution(std::vector&lt;double, std::allocator&lt;double&gt; &gt; const&amp;, double)&#45;&gt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_default_append(unsigned long)</title>
<path fill="none" stroke="#0d1a77" stroke-width="0.5" d="M19580.76,-1296.92C19618.67,-1284.69 19662.34,-1270.6 19700.61,-1258.25"/>
<polygon fill="#0d1a77" stroke="#0d1a77" stroke-width="0.5" points="19701.34,-1259.3 19704.29,-1257.06 19700.59,-1256.97 19701.34,-1259.3"/>
<text text-anchor="middle" x="19686.5" y="-1280" font-family="Arial" font-size="10.00" fill="#0d1a77">3.13%</text>
<text text-anchor="middle" x="19686.5" y="-1269" font-family="Arial" font-size="10.00" fill="#0d1a77">79992×</text>
</g>
<!-- std::_Deque_base&lt;std::pair&lt;int, double&gt;, std::allocator&lt;std::pair&lt;int, double&gt; &gt; &gt;::_M_initialize_map(unsigned long)&#45;&gt;0x000000000010d7f0 -->
<g id="edge103" class="edge">
<title>std::_Deque_base&lt;std::pair&lt;int, double&gt;, std::allocator&lt;std::pair&lt;int, double&gt; &gt; &gt;::_M_initialize_map(unsigned long)&#45;&gt;0x000000000010d7f0</title>
<path fill="none" stroke="#0d2078" stroke-width="0.5" d="M17598.27,-1194.14C17586.12,-1191.19 17577.5,-1188.13 17574,-1185 17552.47,-1165.74 17569.42,-1148.53 17558,-1122 17557.2,-1120.14 17556.31,-1118.26 17555.37,-1116.39"/>
<polygon fill="#0d2078" stroke="#0d2078" stroke-width="0.5" points="17556.33,-1115.57 17553.62,-1113.04 17554.16,-1116.71 17556.33,-1115.57"/>
<text text-anchor="middle" x="17593" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d2078">4.47%</text>
<text text-anchor="middle" x="17593" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d2078">319968×</text>
</g>
<!-- std::_Deque_base&lt;std::pair&lt;int, double&gt;, std::allocator&lt;std::pair&lt;int, double&gt; &gt; &gt;::~_Deque_base()&#45;&gt;0x000000000010d800 -->
<g id="edge104" class="edge">
<title>std::_Deque_base&lt;std::pair&lt;int, double&gt;, std::allocator&lt;std::pair&lt;int, double&gt; &gt; &gt;::~_Deque_base()&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d1e78" stroke-width="0.5" d="M5163.24,-1121.73C5165.27,-1098.45 5163.46,-1067.58 5144,-1050 5068.54,-981.82 3489.3,-979.22 3161.33,-979.42"/>
<polygon fill="#0d1e78" stroke="#0d1e78" stroke-width="0.5" points="3161.02,-978.19 3157.52,-979.42 3161.03,-980.64 3161.02,-978.19"/>
<text text-anchor="middle" x="5182" y="-1084.5" font-family="Arial" font-size="10.00" fill="#0d1e78">4.04%</text>
<text text-anchor="middle" x="5182" y="-1073.5" font-family="Arial" font-size="10.00" fill="#0d1e78">319968×</text>
</g>
<!-- std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_append(unsigned long)&#45;&gt;0x000000000010d6c0 -->
<g id="edge124" class="edge">
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_append(unsigned long)&#45;&gt;0x000000000010d6c0</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M19461.09,-1193.69C19475.22,-1170.89 19494.45,-1139.86 19509.01,-1116.37"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="19510.14,-1116.87 19510.94,-1113.25 19508.06,-1115.58 19510.14,-1116.87"/>
<text text-anchor="middle" x="19522" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.28%</text>
<text text-anchor="middle" x="19522" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d0e73">159984×</text>
</g>
<!-- std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_append(unsigned long)&#45;&gt;0x000000000010d7f0 -->
<g id="edge125" class="edge">
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_append(unsigned long)&#45;&gt;0x000000000010d7f0</title>
<path fill="none" stroke="#0d1876" stroke-width="0.5" d="M19258.96,-1194.49C19257.3,-1194.32 19255.65,-1194.16 19254,-1194 19130.96,-1182.08 19099.51,-1190.29 18976,-1185 18375.25,-1159.27 18215.85,-1224.6 17625,-1113 17613.91,-1110.91 17602.32,-1107.82 17591.25,-1104.39"/>
<polygon fill="#0d1876" stroke="#0d1876" stroke-width="0.5" points="17591.54,-1103.2 17587.83,-1103.32 17590.8,-1105.54 17591.54,-1103.2"/>
<text text-anchor="middle" x="18995" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d1876">2.67%</text>
<text text-anchor="middle" x="18995" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d1876">159986×</text>
</g>
<!-- std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_default_append(unsigned long)&#45;&gt;0x000000000010d6c0 -->
<g id="edge126" class="edge">
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_default_append(unsigned long)&#45;&gt;0x000000000010d6c0</title>
<path fill="none" stroke="#0d0d73" stroke-width="0.5" d="M19740.96,-1193.86C19696.01,-1170.14 19634.01,-1137.4 19588.86,-1113.57"/>
<polygon fill="#0d0d73" stroke="#0d0d73" stroke-width="0.5" points="19589.3,-1112.42 19585.63,-1111.87 19588.16,-1114.59 19589.3,-1112.42"/>
<text text-anchor="middle" x="19735.5" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d0d73">0.17%</text>
<text text-anchor="middle" x="19735.5" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d0d73">79991×</text>
</g>
<!-- std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_default_append(unsigned long)&#45;&gt;0x000000000010d7f0 -->
<g id="edge127" class="edge">
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_default_append(unsigned long)&#45;&gt;0x000000000010d7f0</title>
<path fill="none" stroke="#0d1676" stroke-width="0.5" d="M19633.57,-1194.41C19632.37,-1194.27 19631.19,-1194.13 19630,-1194 19542.9,-1184.2 19520.23,-1193.5 19433,-1185 19244.7,-1166.66 19200.63,-1136.65 19012,-1122 18935.17,-1116.03 17701.03,-1125.53 17625,-1113 17613.87,-1111.17 17602.25,-1108.2 17591.17,-1104.82"/>
<polygon fill="#0d1676" stroke="#0d1676" stroke-width="0.5" points="17591.46,-1103.63 17587.75,-1103.76 17590.73,-1105.97 17591.46,-1103.63"/>
<text text-anchor="middle" x="19449.5" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d1676">2.18%</text>
<text text-anchor="middle" x="19449.5" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d1676">79992×</text>
</g>
<!-- PutTreeFileIntoVector(std::istream&amp;) -->
<g id="node41" class="node">
<title>PutTreeFileIntoVector(std::istream&amp;)</title>
<polygon fill="#0d2179" stroke="#0d2179" points="20724,-1792 20548,-1792 20548,-1729 20724,-1729 20724,-1792"/>
<text text-anchor="middle" x="20636" y="-1780" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="20636" y="-1769" font-family="Arial" font-size="10.00" fill="#ffffff">PutTreeFileIntoVector(std::istream&amp;)</text>
<text text-anchor="middle" x="20636" y="-1758" font-family="Arial" font-size="10.00" fill="#ffffff">4.60%</text>
<text text-anchor="middle" x="20636" y="-1747" font-family="Arial" font-size="10.00" fill="#ffffff">(1.16%)</text>
<text text-anchor="middle" x="20636" y="-1736" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- PutTreeFileIntoVector(std::istream&amp;)&#45;&gt;0x000000000010d8c0 -->
<g id="edge23" class="edge">
<title>PutTreeFileIntoVector(std::istream&amp;)&#45;&gt;0x000000000010d8c0</title>
<path fill="none" stroke="#0d1977" stroke-width="0.5" d="M20649.67,-1728.69C20659.74,-1705.99 20673.44,-1675.11 20683.85,-1651.66"/>
<polygon fill="#0d1977" stroke="#0d1977" stroke-width="0.5" points="20685.06,-1651.95 20685.36,-1648.25 20682.82,-1650.95 20685.06,-1651.95"/>
<text text-anchor="middle" x="20699" y="-1691.5" font-family="Arial" font-size="10.00" fill="#0d1977">3.00%</text>
<text text-anchor="middle" x="20699" y="-1680.5" font-family="Arial" font-size="10.00" fill="#0d1977">338847×</text>
</g>
<!-- SimulationProtocol::~SimulationProtocol()&#45;&gt;0x000000000010d800 -->
<g id="edge24" class="edge">
<title>SimulationProtocol::~SimulationProtocol()&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d1876" stroke-width="0.5" d="M73.73,-2232.92C53.68,-2205.51 29,-2163.28 29,-2121.5 29,-2121.5 29,-2121.5 29,-1080.5 29,-1042 53.38,-1030.87 90,-1019 162.87,-995.38 2626.92,-981.9 3042.71,-979.79"/>
<polygon fill="#0d1876" stroke="#0d1876" stroke-width="0.5" points="3042.83,-981.02 3046.32,-979.77 3042.81,-978.57 3042.83,-981.02"/>
<text text-anchor="middle" x="43" y="-1619.5" font-family="Arial" font-size="10.00" fill="#0d1876">2.60%</text>
<text text-anchor="middle" x="43" y="-1608.5" font-family="Arial" font-size="10.00" fill="#0d1876">4×</text>
</g>
<!-- Simulator::generateSimulation[abi:cxx11]() -->
<g id="node43" class="node">
<title>Simulator::generateSimulation[abi:cxx11]()</title>
<polygon fill="#0d2b7b" stroke="#0d2b7b" points="5070,-1504 4870,-1504 4870,-1441 5070,-1441 5070,-1504"/>
<text text-anchor="middle" x="4970" y="-1492" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="4970" y="-1481" font-family="Arial" font-size="10.00" fill="#ffffff">Simulator::generateSimulation[abi:cxx11]()</text>
<text text-anchor="middle" x="4970" y="-1470" font-family="Arial" font-size="10.00" fill="#ffffff">6.76%</text>
<text text-anchor="middle" x="4970" y="-1459" font-family="Arial" font-size="10.00" fill="#ffffff">(1.82%)</text>
<text text-anchor="middle" x="4970" y="-1448" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- Simulator::generateSimulation[abi:cxx11]()&#45;&gt;0x000000000010d690 -->
<g id="edge25" class="edge">
<title>Simulator::generateSimulation[abi:cxx11]()&#45;&gt;0x000000000010d690</title>
<path fill="none" stroke="#0d1575" stroke-width="0.5" d="M4966.09,-1440.69C4963.23,-1418.08 4959.33,-1387.36 4956.37,-1363.95"/>
<polygon fill="#0d1575" stroke="#0d1575" stroke-width="0.5" points="4957.55,-1363.57 4955.9,-1360.25 4955.12,-1363.88 4957.55,-1363.57"/>
<text text-anchor="middle" x="4983" y="-1403.5" font-family="Arial" font-size="10.00" fill="#0d1575">2.05%</text>
<text text-anchor="middle" x="4983" y="-1392.5" font-family="Arial" font-size="10.00" fill="#0d1575">678700×</text>
</g>
<!-- Simulator::generateSimulation[abi:cxx11]()&#45;&gt;0x000000000010d800 -->
<g id="edge26" class="edge">
<title>Simulator::generateSimulation[abi:cxx11]()&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d0d73" stroke-width="0.5" d="M4869.83,-1444.23C4863.15,-1442.97 4856.5,-1441.87 4850,-1441 4740.74,-1426.32 4463.41,-1445.51 4354,-1432 4193.13,-1412.14 4004,-1491.59 4004,-1329.5 4004,-1329.5 4004,-1329.5 4004,-1080.5 4004,-1028.55 3902.13,-1027.71 3846,-1019 3714.42,-998.58 3313.29,-985.46 3161.26,-981.1"/>
<polygon fill="#0d0d73" stroke="#0d0d73" stroke-width="0.5" points="3161.25,-979.88 3157.71,-981 3161.18,-982.32 3161.25,-979.88"/>
<text text-anchor="middle" x="4018" y="-1228.5" font-family="Arial" font-size="10.00" fill="#0d0d73">0.12%</text>
<text text-anchor="middle" x="4018" y="-1217.5" font-family="Arial" font-size="10.00" fill="#0d0d73">9998×</text>
</g>
<!-- Simulator::simulateAlongBranch(unsigned long, double, unsigned long) -->
<g id="node44" class="node">
<title>Simulator::simulateAlongBranch(unsigned long, double, unsigned long)</title>
<polygon fill="#0d1174" stroke="#0d1174" points="4887.5,-1360 4564.5,-1360 4564.5,-1297 4887.5,-1297 4887.5,-1360"/>
<text text-anchor="middle" x="4726" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="4726" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">Simulator::simulateAlongBranch(unsigned long, double, unsigned long)</text>
<text text-anchor="middle" x="4726" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">1.03%</text>
<text text-anchor="middle" x="4726" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.28%)</text>
<text text-anchor="middle" x="4726" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">19997×</text>
</g>
<!-- Simulator::generateSimulation[abi:cxx11]()&#45;&gt;Simulator::simulateAlongBranch(unsigned long, double, unsigned long) -->
<g id="edge27" class="edge">
<title>Simulator::generateSimulation[abi:cxx11]()&#45;&gt;Simulator::simulateAlongBranch(unsigned long, double, unsigned long)</title>
<path fill="none" stroke="#0d1174" stroke-width="0.5" d="M4931.87,-1440.9C4928.49,-1437.95 4925.15,-1434.95 4922,-1432 4894.02,-1405.76 4895.72,-1389.03 4863,-1369 4858.71,-1366.37 4854.24,-1363.92 4849.65,-1361.62"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width="0.5" points="4850.13,-1360.49 4846.44,-1360.05 4849.05,-1362.69 4850.13,-1360.49"/>
<text text-anchor="middle" x="4938.5" y="-1403.5" font-family="Arial" font-size="10.00" fill="#0d1174">1.03%</text>
<text text-anchor="middle" x="4938.5" y="-1392.5" font-family="Arial" font-size="10.00" fill="#0d1174">19997×</text>
</g>
<!-- std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;) [clone .isra.0] -->
<g id="node45" class="node">
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;) [clone .isra.0]</title>
<polygon fill="#0d1274" stroke="#0d1274" points="10182,-1360 5068,-1360 5068,-1297 10182,-1297 10182,-1360"/>
<text text-anchor="middle" x="7625" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="7625" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;) [clone .isra.0]</text>
<text text-anchor="middle" x="7625" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">1.35%</text>
<text text-anchor="middle" x="7625" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.14%)</text>
<text text-anchor="middle" x="7625" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">19998×</text>
</g>
<!-- Simulator::generateSimulation[abi:cxx11]()&#45;&gt;std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;) [clone .isra.0] -->
<g id="edge28" class="edge">
<title>Simulator::generateSimulation[abi:cxx11]()&#45;&gt;std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;) [clone .isra.0]</title>
<path fill="none" stroke="#0d1274" stroke-width="0.5" d="M5070.03,-1466.15C5389.17,-1449.08 6400.22,-1395.01 7050.69,-1360.22"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width="0.5" points="7051.08,-1361.42 7054.51,-1360.01 7050.95,-1358.98 7051.08,-1361.42"/>
<text text-anchor="middle" x="6856.5" y="-1403.5" font-family="Arial" font-size="10.00" fill="#0d1274">1.35%</text>
<text text-anchor="middle" x="6856.5" y="-1392.5" font-family="Arial" font-size="10.00" fill="#0d1274">19998×</text>
</g>
<!-- void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) [clone .isra.0] -->
<g id="node46" class="node">
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) [clone .isra.0]</title>
<polygon fill="#0d1274" stroke="#0d1274" points="7980.5,-1257 7269.5,-1257 7269.5,-1194 7980.5,-1194 7980.5,-1257"/>
<text text-anchor="middle" x="7625" y="-1245" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="7625" y="-1234" font-family="Arial" font-size="10.00" fill="#ffffff">void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) [clone .isra.0]</text>
<text text-anchor="middle" x="7625" y="-1223" font-family="Arial" font-size="10.00" fill="#ffffff">1.29%</text>
<text text-anchor="middle" x="7625" y="-1212" font-family="Arial" font-size="10.00" fill="#ffffff">(0.97%)</text>
<text text-anchor="middle" x="7625" y="-1201" font-family="Arial" font-size="10.00" fill="#ffffff">202754×</text>
</g>
<!-- Simulator::generateSimulation[abi:cxx11]()&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) [clone .isra.0] -->
<g id="edge29" class="edge">
<title>Simulator::generateSimulation[abi:cxx11]()&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) [clone .isra.0]</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M4999.01,-1440.61C5000.87,-1437.81 5002.57,-1434.93 5004,-1432 5017.42,-1404.51 5007.4,-1316.47 5031,-1297 5038.5,-1290.81 6422.27,-1288.28 6432,-1288 6712.04,-1279.89 7028.71,-1263.21 7265.39,-1249.27"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="7265.79,-1250.47 7269.21,-1249.04 7265.65,-1248.03 7265.79,-1250.47"/>
<text text-anchor="middle" x="5047.5" y="-1331.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.29%</text>
<text text-anchor="middle" x="5047.5" y="-1320.5" font-family="Arial" font-size="10.00" fill="#0d0e73">39995×</text>
</g>
<!-- Simulator::simulateAlongBranch(unsigned long, double, unsigned long)&#45;&gt;0x000000000010d780 -->
<g id="edge33" class="edge">
<title>Simulator::simulateAlongBranch(unsigned long, double, unsigned long)&#45;&gt;0x000000000010d780</title>
<path fill="none" stroke="#0d0d73" stroke-width="0.5" d="M4887.61,-1297.51C4889.08,-1297.33 4890.54,-1297.16 4892,-1297 4914.77,-1294.42 5077.82,-1298.84 5098,-1288 5108.65,-1282.28 5103.25,-1271.54 5114,-1266 5136.05,-1254.63 5982.85,-1262.67 6007,-1257 6008.24,-1256.71 6009.49,-1256.39 6010.74,-1256.05"/>
<polygon fill="#0d0d73" stroke="#0d0d73" stroke-width="0.5" points="6011.47,-1257.11 6014.48,-1254.94 6010.78,-1254.76 6011.47,-1257.11"/>
<text text-anchor="middle" x="5130.5" y="-1280" font-family="Arial" font-size="10.00" fill="#0d0d73">0.14%</text>
<text text-anchor="middle" x="5130.5" y="-1269" font-family="Arial" font-size="10.00" fill="#0d0d73">19997×</text>
</g>
<!-- Simulator::simulateAlongBranch(unsigned long, double, unsigned long)&#45;&gt;0x000000000010d7f0 -->
<g id="edge34" class="edge">
<title>Simulator::simulateAlongBranch(unsigned long, double, unsigned long)&#45;&gt;0x000000000010d7f0</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M4887.61,-1297.43C4889.08,-1297.28 4890.54,-1297.14 4892,-1297 4911.23,-1295.18 6265.37,-1295.9 6283,-1288 6299.94,-1280.41 6301.64,-1273.04 6311,-1257 6325.87,-1231.51 6308.14,-1211.38 6332,-1194 6392.21,-1150.15 16607.96,-1088.04 17474.57,-1082.85"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="17474.83,-1084.07 17478.32,-1082.83 17474.81,-1081.62 17474.83,-1084.07"/>
<text text-anchor="middle" x="6348.5" y="-1228.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.51%</text>
<text text-anchor="middle" x="6348.5" y="-1217.5" font-family="Arial" font-size="10.00" fill="#0d0f73">19997×</text>
</g>
<!-- std::mersenne_twister_engine&lt;unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul&gt;::operator()() -->
<g id="node50" class="node">
<title>std::mersenne_twister_engine&lt;unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul&gt;::operator()()</title>
<polygon fill="#0d267a" stroke="#0d267a" points="5144,-1257 4092,-1257 4092,-1194 5144,-1194 5144,-1257"/>
<text text-anchor="middle" x="4618" y="-1245" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="4618" y="-1234" font-family="Arial" font-size="10.00" fill="#ffffff">std::mersenne_twister_engine&lt;unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul&gt;::operator()()</text>
<text text-anchor="middle" x="4618" y="-1223" font-family="Arial" font-size="10.00" fill="#ffffff">5.74%</text>
<text text-anchor="middle" x="4618" y="-1212" font-family="Arial" font-size="10.00" fill="#ffffff">(3.83%)</text>
<text text-anchor="middle" x="4618" y="-1201" font-family="Arial" font-size="10.00" fill="#ffffff">1044854×</text>
</g>
<!-- Simulator::simulateAlongBranch(unsigned long, double, unsigned long)&#45;&gt;std::mersenne_twister_engine&lt;unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul&gt;::operator()() -->
<g id="edge35" class="edge">
<title>Simulator::simulateAlongBranch(unsigned long, double, unsigned long)&#45;&gt;std::mersenne_twister_engine&lt;unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul&gt;::operator()()</title>
<path fill="none" stroke="#0d0d73" stroke-width="0.5" d="M4887.62,-1297.59C4889.09,-1297.39 4890.55,-1297.19 4892,-1297 4904.38,-1295.37 4995.53,-1297.17 5004,-1288 5010.63,-1280.81 5010.55,-1273.26 5004,-1266 5001.5,-1263.23 4996.55,-1260.65 4989.59,-1258.24"/>
<polygon fill="#0d0d73" stroke="#0d0d73" stroke-width="0.5" points="4989.72,-1256.99 4986.02,-1257.07 4988.96,-1259.32 4989.72,-1256.99"/>
<text text-anchor="middle" x="5024.5" y="-1280" font-family="Arial" font-size="10.00" fill="#0d0d73">0.11%</text>
<text text-anchor="middle" x="5024.5" y="-1269" font-family="Arial" font-size="10.00" fill="#0d0d73">19997×</text>
</g>
<!-- std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;) [clone .isra.0]&#45;&gt;0x000000000010d7f0 -->
<g id="edge108" class="edge">
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;) [clone .isra.0]&#45;&gt;0x000000000010d7f0</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M10182.41,-1297.04C10183.94,-1297.03 10185.47,-1297.01 10187,-1297 10882.1,-1290.86 11056.03,-1302.7 11751,-1288 13770.56,-1245.29 14274.17,-1191.05 16293,-1122 16748.1,-1106.43 17297.24,-1089.64 17474.69,-1084.26"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="17474.84,-1085.48 17478.3,-1084.15 17474.77,-1083.03 17474.84,-1085.48"/>
<text text-anchor="middle" x="14506.5" y="-1228.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.51%</text>
<text text-anchor="middle" x="14506.5" y="-1217.5" font-family="Arial" font-size="10.00" fill="#0d0f73">19998×</text>
</g>
<!-- std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;) [clone .isra.0]&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) [clone .isra.0] -->
<g id="edge109" class="edge">
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;) [clone .isra.0]&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) [clone .isra.0]</title>
<path fill="none" stroke="#0d0d73" stroke-width="0.5" d="M7625,-1296.92C7625,-1285.56 7625,-1272.59 7625,-1260.9"/>
<polygon fill="#0d0d73" stroke="#0d0d73" stroke-width="0.5" points="7626.23,-1260.82 7625,-1257.32 7623.78,-1260.82 7626.23,-1260.82"/>
<text text-anchor="middle" x="7641.5" y="-1280" font-family="Arial" font-size="10.00" fill="#0d0d73">0.14%</text>
<text text-anchor="middle" x="7641.5" y="-1269" font-family="Arial" font-size="10.00" fill="#0d0d73">19998×</text>
</g>
<!-- Simulator::runSimulator[abi:cxx11](unsigned long)&#45;&gt;Simulator::generateSimulation[abi:cxx11]() -->
<g id="edge30" class="edge">
<title>Simulator::runSimulator[abi:cxx11](unsigned long)&#45;&gt;Simulator::generateSimulation[abi:cxx11]()</title>
<path fill="none" stroke="#0d2b7b" stroke-width="0.5" d="M4937.85,-1728.89C4944.62,-1675.17 4958.57,-1564.27 4965.66,-1507.95"/>
<polygon fill="#0d2b7b" stroke="#0d2b7b" stroke-width="0.5" points="4966.9,-1507.94 4966.12,-1504.32 4964.47,-1507.64 4966.9,-1507.94"/>
<text text-anchor="middle" x="4969" y="-1619.5" font-family="Arial" font-size="10.00" fill="#0d2b7b">6.76%</text>
<text text-anchor="middle" x="4969" y="-1608.5" font-family="Arial" font-size="10.00" fill="#0d2b7b">1×</text>
</g>
<!-- std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0] -->
<g id="node48" class="node">
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0]</title>
<polygon fill="#0d1274" stroke="#0d1274" points="3773.5,-1648 678.5,-1648 678.5,-1585 3773.5,-1585 3773.5,-1648"/>
<text text-anchor="middle" x="2226" y="-1636" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="2226" y="-1625" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0]</text>
<text text-anchor="middle" x="2226" y="-1614" font-family="Arial" font-size="10.00" fill="#ffffff">1.17%</text>
<text text-anchor="middle" x="2226" y="-1603" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="2226" y="-1592" font-family="Arial" font-size="10.00" fill="#ffffff">2×</text>
</g>
<!-- Simulator::runSimulator[abi:cxx11](unsigned long)&#45;&gt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0] -->
<g id="edge31" class="edge">
<title>Simulator::runSimulator[abi:cxx11](unsigned long)&#45;&gt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0]</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M4817.94,-1735.53C4692.01,-1710.71 4484.72,-1673.34 4304,-1657 4187.55,-1646.47 3996.9,-1638.75 3777.06,-1633.07"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="3777.03,-1631.85 3773.5,-1632.98 3776.97,-1634.3 3777.03,-1631.85"/>
<text text-anchor="middle" x="4738" y="-1691.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.38%</text>
<text text-anchor="middle" x="4738" y="-1680.5" font-family="Arial" font-size="10.00" fill="#0d0e73">1×</text>
</g>
<!-- void std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;*, std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; const&amp;) -->
<g id="node49" class="node">
<title>void std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;*, std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; const&amp;)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="16918,-1648 6532,-1648 6532,-1585 16918,-1585 16918,-1648"/>
<text text-anchor="middle" x="11725" y="-1636" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="11725" y="-1625" font-family="Arial" font-size="10.00" fill="#ffffff">void std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;*, std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="11725" y="-1614" font-family="Arial" font-size="10.00" fill="#ffffff">0.76%</text>
<text text-anchor="middle" x="11725" y="-1603" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="11725" y="-1592" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- Simulator::runSimulator[abi:cxx11](unsigned long)&#45;&gt;void std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;*, std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; const&amp;) -->
<g id="edge32" class="edge">
<title>Simulator::runSimulator[abi:cxx11](unsigned long)&#45;&gt;void std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;*, std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M5050.09,-1757.07C5655.12,-1744.42 8487.17,-1685.2 10262.37,-1648.08"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="10262.48,-1649.31 10265.95,-1648.01 10262.42,-1646.86 10262.48,-1649.31"/>
<text text-anchor="middle" x="9732" y="-1691.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.76%</text>
<text text-anchor="middle" x="9732" y="-1680.5" font-family="Arial" font-size="10.00" fill="#0d1074">1×</text>
</g>
<!-- std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0]&#39;2 -->
<g id="node94" class="node">
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0]&#39;2</title>
<polygon fill="#0d1274" stroke="#0d1274" points="3692.5,-1432 589.5,-1432 589.5,-1369 3692.5,-1369 3692.5,-1432"/>
<text text-anchor="middle" x="2141" y="-1420" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="2141" y="-1409" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0]&#39;2</text>
<text text-anchor="middle" x="2141" y="-1398" font-family="Arial" font-size="10.00" fill="#ffffff">1.17%</text>
<text text-anchor="middle" x="2141" y="-1387" font-family="Arial" font-size="10.00" fill="#ffffff">(0.18%)</text>
<text text-anchor="middle" x="2141" y="-1376" font-family="Arial" font-size="10.00" fill="#ffffff">39996×</text>
</g>
<!-- std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0]&#45;&gt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0]&#39;2 -->
<g id="edge105" class="edge">
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0]&#45;&gt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0]&#39;2</title>
<path fill="none" stroke="#0d1274" stroke-width="0.5" d="M2213.82,-1584.84C2198.1,-1545.27 2170.84,-1476.64 2154.51,-1435.51"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width="0.5" points="2155.59,-1434.9 2153.16,-1432.1 2153.31,-1435.81 2155.59,-1434.9"/>
<text text-anchor="middle" x="2224" y="-1547.5" font-family="Arial" font-size="10.00" fill="#0d1274">1.17%</text>
<text text-anchor="middle" x="2224" y="-1536.5" font-family="Arial" font-size="10.00" fill="#0d1274">34×</text>
</g>
<!-- std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0] -->
<g id="node95" class="node">
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]</title>
<polygon fill="#0d1074" stroke="#0d1074" points="18555.5,-1504 9816.5,-1504 9816.5,-1441 18555.5,-1441 18555.5,-1504"/>
<text text-anchor="middle" x="14186" y="-1492" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="14186" y="-1481" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]</text>
<text text-anchor="middle" x="14186" y="-1470" font-family="Arial" font-size="10.00" fill="#ffffff">0.76%</text>
<text text-anchor="middle" x="14186" y="-1459" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="14186" y="-1448" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- void std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;*, std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; const&amp;)&#45;&gt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0] -->
<g id="edge163" class="edge">
<title>void std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;*, std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; const&amp;)&#45;&gt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M12253.7,-1584.99C12667.15,-1561.14 13239.39,-1528.12 13653.75,-1504.21"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="13653.97,-1505.43 13657.4,-1504 13653.83,-1502.98 13653.97,-1505.43"/>
<text text-anchor="middle" x="13472" y="-1547.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.76%</text>
<text text-anchor="middle" x="13472" y="-1536.5" font-family="Arial" font-size="10.00" fill="#0d1074">1×</text>
</g>
<!-- std::mersenne_twister_engine&lt;unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul&gt;::_M_gen_rand() -->
<g id="node100" class="node">
<title>std::mersenne_twister_engine&lt;unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul&gt;::_M_gen_rand()</title>
<polygon fill="#0d1575" stroke="#0d1575" points="5139.5,-1113 4070.5,-1113 4070.5,-1050 5139.5,-1050 5139.5,-1113"/>
<text text-anchor="middle" x="4605" y="-1101" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="4605" y="-1090" font-family="Arial" font-size="10.00" fill="#ffffff">std::mersenne_twister_engine&lt;unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul&gt;::_M_gen_rand()</text>
<text text-anchor="middle" x="4605" y="-1079" font-family="Arial" font-size="10.00" fill="#ffffff">1.92%</text>
<text text-anchor="middle" x="4605" y="-1068" font-family="Arial" font-size="10.00" fill="#ffffff">(1.92%)</text>
<text text-anchor="middle" x="4605" y="-1057" font-family="Arial" font-size="10.00" fill="#ffffff">3350×</text>
</g>
<!-- std::mersenne_twister_engine&lt;unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul&gt;::operator()()&#45;&gt;std::mersenne_twister_engine&lt;unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul&gt;::_M_gen_rand() -->
<g id="edge119" class="edge">
<title>std::mersenne_twister_engine&lt;unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul&gt;::operator()()&#45;&gt;std::mersenne_twister_engine&lt;unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul&gt;::_M_gen_rand()</title>
<path fill="none" stroke="#0d1575" stroke-width="0.5" d="M4615.18,-1193.69C4613.11,-1171.08 4610.3,-1140.36 4608.15,-1116.95"/>
<polygon fill="#0d1575" stroke="#0d1575" stroke-width="0.5" points="4609.35,-1116.63 4607.82,-1113.25 4606.91,-1116.85 4609.35,-1116.63"/>
<text text-anchor="middle" x="4628" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d1575">1.92%</text>
<text text-anchor="middle" x="4628" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d1575">3350×</text>
</g>
<!-- rateMatrixSim::generate_substitution_log(int) -->
<g id="node52" class="node">
<title>rateMatrixSim::generate_substitution_log(int)</title>
<polygon fill="#0b9e70" stroke="#0b9e70" points="4017.5,-2224 3806.5,-2224 3806.5,-2161 4017.5,-2161 4017.5,-2224"/>
<text text-anchor="middle" x="3912" y="-2212" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="3912" y="-2201" font-family="Arial" font-size="10.00" fill="#ffffff">rateMatrixSim::generate_substitution_log(int)</text>
<text text-anchor="middle" x="3912" y="-2190" font-family="Arial" font-size="10.00" fill="#ffffff">32.91%</text>
<text text-anchor="middle" x="3912" y="-2179" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="3912" y="-2168" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- Simulator::simulateSubstitutions(unsigned long)&#45;&gt;rateMatrixSim::generate_substitution_log(int) -->
<g id="edge36" class="edge">
<title>Simulator::simulateSubstitutions(unsigned long)&#45;&gt;rateMatrixSim::generate_substitution_log(int)</title>
<path fill="none" stroke="#0b9e70" stroke-width="1.32" d="M3908.08,-2304.69C3908.86,-2282.73 3909.9,-2253.13 3910.72,-2229.99"/>
<polygon fill="#0b9e70" stroke="#0b9e70" stroke-width="1.32" points="3912.71,-2230.02 3910.92,-2224.25 3908.72,-2229.88 3912.71,-2230.02"/>
<text text-anchor="middle" x="3927" y="-2267.5" font-family="Arial" font-size="10.00" fill="#0b9e70">32.91%</text>
<text text-anchor="middle" x="3927" y="-2256.5" font-family="Arial" font-size="10.00" fill="#0b9e70">1×</text>
</g>
<!-- rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int) -->
<g id="node78" class="node">
<title>rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)</title>
<polygon fill="#0b9e70" stroke="#0b9e70" points="4060.5,-2080 3781.5,-2080 3781.5,-2017 4060.5,-2017 4060.5,-2080"/>
<text text-anchor="middle" x="3921" y="-2068" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="3921" y="-2057" font-family="Arial" font-size="10.00" fill="#ffffff">rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)</text>
<text text-anchor="middle" x="3921" y="-2046" font-family="Arial" font-size="10.00" fill="#ffffff">32.88%</text>
<text text-anchor="middle" x="3921" y="-2035" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="3921" y="-2024" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- rateMatrixSim::generate_substitution_log(int)&#45;&gt;rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int) -->
<g id="edge72" class="edge">
<title>rateMatrixSim::generate_substitution_log(int)&#45;&gt;rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)</title>
<path fill="none" stroke="#0b9e70" stroke-width="1.32" d="M3913.95,-2160.69C3915.34,-2138.73 3917.22,-2109.13 3918.69,-2085.99"/>
<polygon fill="#0b9e70" stroke="#0b9e70" stroke-width="1.32" points="3920.68,-2086.07 3919.05,-2080.25 3916.7,-2085.81 3920.68,-2086.07"/>
<text text-anchor="middle" x="3935" y="-2123.5" font-family="Arial" font-size="10.00" fill="#0b9e70">32.88%</text>
<text text-anchor="middle" x="3935" y="-2112.5" font-family="Arial" font-size="10.00" fill="#0b9e70">1×</text>
</g>
<!-- malloc_consolidate -->
<g id="node55" class="node">
<title>malloc_consolidate</title>
<polygon fill="#0d2279" stroke="#0d2279" points="13984,-166 13884,-166 13884,-103 13984,-103 13984,-166"/>
<text text-anchor="middle" x="13934" y="-154" font-family="Arial" font-size="10.00" fill="#ffffff">libc.so.6</text>
<text text-anchor="middle" x="13934" y="-143" font-family="Arial" font-size="10.00" fill="#ffffff">malloc_consolidate</text>
<text text-anchor="middle" x="13934" y="-132" font-family="Arial" font-size="10.00" fill="#ffffff">4.95%</text>
<text text-anchor="middle" x="13934" y="-121" font-family="Arial" font-size="10.00" fill="#ffffff">(3.51%)</text>
<text text-anchor="middle" x="13934" y="-110" font-family="Arial" font-size="10.00" fill="#ffffff">189×</text>
</g>
<!-- _int_free&#45;&gt;malloc_consolidate -->
<g id="edge37" class="edge">
<title>_int_free&#45;&gt;malloc_consolidate</title>
<path fill="none" stroke="#0d2179" stroke-width="0.5" d="M13922.44,-205.75C13922.87,-195.89 13923.63,-184.96 13925,-175 13925.24,-173.26 13925.52,-171.49 13925.82,-169.7"/>
<polygon fill="#0d2179" stroke="#0d2179" stroke-width="0.5" points="13927.07,-169.69 13926.49,-166.02 13924.66,-169.25 13927.07,-169.69"/>
<text text-anchor="middle" x="13939" y="-189" font-family="Arial" font-size="10.00" fill="#0d2179">4.73%</text>
<text text-anchor="middle" x="13939" y="-178" font-family="Arial" font-size="10.00" fill="#0d2179">87×</text>
</g>
<!-- unlink_chunk.constprop.0 -->
<g id="node57" class="node">
<title>unlink_chunk.constprop.0</title>
<polygon fill="#0d1475" stroke="#0d1475" points="14032,-63 13904,-63 13904,0 14032,0 14032,-63"/>
<text text-anchor="middle" x="13968" y="-51" font-family="Arial" font-size="10.00" fill="#ffffff">libc.so.6</text>
<text text-anchor="middle" x="13968" y="-40" font-family="Arial" font-size="10.00" fill="#ffffff">unlink_chunk.constprop.0</text>
<text text-anchor="middle" x="13968" y="-29" font-family="Arial" font-size="10.00" fill="#ffffff">1.70%</text>
<text text-anchor="middle" x="13968" y="-18" font-family="Arial" font-size="10.00" fill="#ffffff">(1.70%)</text>
<text text-anchor="middle" x="13968" y="-7" font-family="Arial" font-size="10.00" fill="#ffffff">592365×</text>
</g>
<!-- malloc_consolidate&#45;&gt;unlink_chunk.constprop.0 -->
<g id="edge64" class="edge">
<title>malloc_consolidate&#45;&gt;unlink_chunk.constprop.0</title>
<path fill="none" stroke="#0d1375" stroke-width="0.5" d="M13944.29,-102.92C13948.12,-91.56 13952.49,-78.59 13956.42,-66.9"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width="0.5" points="13957.67,-67.03 13957.62,-63.32 13955.35,-66.25 13957.67,-67.03"/>
<text text-anchor="middle" x="13973" y="-86" font-family="Arial" font-size="10.00" fill="#0d1375">1.44%</text>
<text text-anchor="middle" x="13973" y="-75" font-family="Arial" font-size="10.00" fill="#0d1375">500977×</text>
</g>
<!-- _int_malloc&#45;&gt;malloc_consolidate -->
<g id="edge38" class="edge">
<title>_int_malloc&#45;&gt;malloc_consolidate</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M13973.42,-205.57C13971.16,-202.73 13968.99,-199.86 13967,-197 13961.01,-188.41 13955.31,-178.62 13950.38,-169.41"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="13951.32,-168.56 13948.6,-166.04 13949.15,-169.71 13951.32,-168.56"/>
<text text-anchor="middle" x="13981" y="-189" font-family="Arial" font-size="10.00" fill="#0d0e73">0.21%</text>
<text text-anchor="middle" x="13981" y="-178" font-family="Arial" font-size="10.00" fill="#0d0e73">102×</text>
</g>
<!-- _int_malloc&#45;&gt;unlink_chunk.constprop.0 -->
<g id="edge39" class="edge">
<title>_int_malloc&#45;&gt;unlink_chunk.constprop.0</title>
<path fill="none" stroke="#0d0d73" stroke-width="0.5" d="M14004.85,-205.96C14006.96,-172.29 14007.37,-116.95 13993,-72 13992.41,-70.16 13991.72,-68.33 13990.94,-66.51"/>
<polygon fill="#0d0d73" stroke="#0d0d73" stroke-width="0.5" points="13992.03,-65.94 13989.47,-63.26 13989.8,-66.95 13992.03,-65.94"/>
<text text-anchor="middle" x="14021.5" y="-137.5" font-family="Arial" font-size="10.00" fill="#0d0d73">0.17%</text>
<text text-anchor="middle" x="14021.5" y="-126.5" font-family="Arial" font-size="10.00" fill="#0d0d73">59666×</text>
</g>
<!-- allowCharSet(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="node58" class="node">
<title>allowCharSet(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<polygon fill="#0d1174" stroke="#0d1174" points="21712,-1010 20872,-1010 20872,-947 21712,-947 21712,-1010"/>
<text text-anchor="middle" x="21292" y="-998" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="21292" y="-987" font-family="Arial" font-size="10.00" fill="#ffffff">allowCharSet(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="21292" y="-976" font-family="Arial" font-size="10.00" fill="#ffffff">1.01%</text>
<text text-anchor="middle" x="21292" y="-965" font-family="Arial" font-size="10.00" fill="#ffffff">(1.01%)</text>
<text text-anchor="middle" x="21292" y="-954" font-family="Arial" font-size="10.00" fill="#ffffff">19997×</text>
</g>
<!-- computePijGam::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool) -->
<g id="node59" class="node">
<title>computePijGam::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool)</title>
<polygon fill="#0b9e71" stroke="#0b9e71" points="12799.5,-1936 12468.5,-1936 12468.5,-1873 12799.5,-1873 12799.5,-1936"/>
<text text-anchor="middle" x="12634" y="-1924" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="12634" y="-1913" font-family="Arial" font-size="10.00" fill="#ffffff">computePijGam::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool)</text>
<text text-anchor="middle" x="12634" y="-1902" font-family="Arial" font-size="10.00" fill="#ffffff">32.70%</text>
<text text-anchor="middle" x="12634" y="-1891" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="12634" y="-1880" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- computePijHom::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool) -->
<g id="node60" class="node">
<title>computePijHom::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool)</title>
<polygon fill="#0c9a7f" stroke="#0c9a7f" points="17566.5,-1792 17235.5,-1792 17235.5,-1729 17566.5,-1729 17566.5,-1792"/>
<text text-anchor="middle" x="17401" y="-1780" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="17401" y="-1769" font-family="Arial" font-size="10.00" fill="#ffffff">computePijHom::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool)</text>
<text text-anchor="middle" x="17401" y="-1758" font-family="Arial" font-size="10.00" fill="#ffffff">29.68%</text>
<text text-anchor="middle" x="17401" y="-1747" font-family="Arial" font-size="10.00" fill="#ffffff">(0.16%)</text>
<text text-anchor="middle" x="17401" y="-1736" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- computePijGam::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool)&#45;&gt;computePijHom::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool) -->
<g id="edge40" class="edge">
<title>computePijGam::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool)&#45;&gt;computePijHom::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool)</title>
<path fill="none" stroke="#0c9a7f" stroke-width="1.19" d="M12799.67,-1900.85C13128.08,-1895.41 13884.95,-1881.97 14521,-1864 15549.46,-1834.94 16784.01,-1786.42 17229.91,-1768.46"/>
<polygon fill="#0c9a7f" stroke="#0c9a7f" stroke-width="1.19" points="17230.13,-1770.35 17235.45,-1768.24 17229.97,-1766.57 17230.13,-1770.35"/>
<text text-anchor="middle" x="16390" y="-1835.5" font-family="Arial" font-size="10.00" fill="#0c9a7f">29.68%</text>
<text text-anchor="middle" x="16390" y="-1824.5" font-family="Arial" font-size="10.00" fill="#0c9a7f">1×</text>
</g>
<!-- computePijGam::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool)&#45;&gt;tree::clear() -->
<g id="edge41" class="edge">
<title>computePijGam::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool)&#45;&gt;tree::clear()</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M12468.48,-1903.67C11290.49,-1904.75 4217.05,-1909.37 4002,-1864 3927.78,-1848.34 3848.24,-1808.11 3803.35,-1782.96"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="3803.83,-1781.82 3800.18,-1781.18 3802.63,-1783.96 3803.83,-1781.82"/>
<text text-anchor="middle" x="4016" y="-1835.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.84%</text>
<text text-anchor="middle" x="4016" y="-1824.5" font-family="Arial" font-size="10.00" fill="#0d1074">1×</text>
</g>
<!-- tree::tree(tree const&amp;) -->
<g id="node62" class="node">
<title>tree::tree(tree const&amp;)</title>
<polygon fill="#0d1575" stroke="#0d1575" points="15327,-1792 15215,-1792 15215,-1729 15327,-1729 15327,-1792"/>
<text text-anchor="middle" x="15271" y="-1780" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="15271" y="-1769" font-family="Arial" font-size="10.00" fill="#ffffff">tree::tree(tree const&amp;)</text>
<text text-anchor="middle" x="15271" y="-1758" font-family="Arial" font-size="10.00" fill="#ffffff">2.06%</text>
<text text-anchor="middle" x="15271" y="-1747" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="15271" y="-1736" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- computePijGam::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool)&#45;&gt;tree::tree(tree const&amp;) -->
<g id="edge42" class="edge">
<title>computePijGam::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool)&#45;&gt;tree::tree(tree const&amp;)</title>
<path fill="none" stroke="#0d1575" stroke-width="0.5" d="M12799.96,-1894.56C13317.1,-1866.72 14884.39,-1782.32 15210.98,-1764.73"/>
<polygon fill="#0d1575" stroke="#0d1575" stroke-width="0.5" points="15211.33,-1765.94 15214.76,-1764.53 15211.2,-1763.49 15211.33,-1765.94"/>
<text text-anchor="middle" x="14505" y="-1835.5" font-family="Arial" font-size="10.00" fill="#0d1575">2.06%</text>
<text text-anchor="middle" x="14505" y="-1824.5" font-family="Arial" font-size="10.00" fill="#0d1575">1×</text>
</g>
<!-- computePijHomSpec::fillPij(double, stochasticProcess const&amp;, int, bool) -->
<g id="node63" class="node">
<title>computePijHomSpec::fillPij(double, stochasticProcess const&amp;, int, bool)</title>
<polygon fill="#0c9980" stroke="#0c9980" points="19819,-1648 19487,-1648 19487,-1585 19819,-1585 19819,-1648"/>
<text text-anchor="middle" x="19653" y="-1636" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="19653" y="-1625" font-family="Arial" font-size="10.00" fill="#ffffff">computePijHomSpec::fillPij(double, stochasticProcess const&amp;, int, bool)</text>
<text text-anchor="middle" x="19653" y="-1614" font-family="Arial" font-size="10.00" fill="#ffffff">29.49%</text>
<text text-anchor="middle" x="19653" y="-1603" font-family="Arial" font-size="10.00" fill="#ffffff">(2.21%)</text>
<text text-anchor="middle" x="19653" y="-1592" font-family="Arial" font-size="10.00" fill="#ffffff">19997×</text>
</g>
<!-- computePijHom::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool)&#45;&gt;computePijHomSpec::fillPij(double, stochasticProcess const&amp;, int, bool) -->
<g id="edge43" class="edge">
<title>computePijHom::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool)&#45;&gt;computePijHomSpec::fillPij(double, stochasticProcess const&amp;, int, bool)</title>
<path fill="none" stroke="#0c9980" stroke-width="1.18" d="M17566.59,-1749.06C17981.1,-1722.92 19060.24,-1654.88 19481.24,-1628.33"/>
<polygon fill="#0c9980" stroke="#0c9980" stroke-width="1.18" points="19481.51,-1630.21 19486.78,-1627.98 19481.27,-1626.43 19481.51,-1630.21"/>
<text text-anchor="middle" x="19004" y="-1691.5" font-family="Arial" font-size="10.00" fill="#0c9980">29.49%</text>
<text text-anchor="middle" x="19004" y="-1680.5" font-family="Arial" font-size="10.00" fill="#0c9980">19997×</text>
</g>
<!-- tree::clear()&#45;&gt;0x000000000010d800 -->
<g id="edge136" class="edge">
<title>tree::clear()&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d1275" stroke-width="0.5" d="M3771.54,-1728.69C3784.09,-1640.98 3816.81,-1394.62 3792,-1369 3781.09,-1357.74 3525.59,-1361.67 3510,-1360 3333.43,-1341.12 3268.7,-1380.3 3117,-1288 3027.33,-1233.44 3066.02,-1081.95 3089.2,-1013.66"/>
<polygon fill="#0d1275" stroke="#0d1275" stroke-width="0.5" points="3090.45,-1013.78 3090.43,-1010.07 3088.13,-1012.99 3090.45,-1013.78"/>
<text text-anchor="middle" x="3526.5" y="-1331.5" font-family="Arial" font-size="10.00" fill="#0d1275">1.37%</text>
<text text-anchor="middle" x="3526.5" y="-1320.5" font-family="Arial" font-size="10.00" fill="#0d1275">59994×</text>
</g>
<!-- tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*) -->
<g id="node110" class="node">
<title>tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)</title>
<polygon fill="#0d1575" stroke="#0d1575" points="19015,-1648 18745,-1648 18745,-1585 19015,-1585 19015,-1648"/>
<text text-anchor="middle" x="18880" y="-1636" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="18880" y="-1625" font-family="Arial" font-size="10.00" fill="#ffffff">tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)</text>
<text text-anchor="middle" x="18880" y="-1614" font-family="Arial" font-size="10.00" fill="#ffffff">2.06%</text>
<text text-anchor="middle" x="18880" y="-1603" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="18880" y="-1592" font-family="Arial" font-size="10.00" fill="#ffffff">3×</text>
</g>
<!-- tree::tree(tree const&amp;)&#45;&gt;tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*) -->
<g id="edge157" class="edge">
<title>tree::tree(tree const&amp;)&#45;&gt;tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)</title>
<path fill="none" stroke="#0d1575" stroke-width="0.5" d="M15327.33,-1757.28C15726.9,-1741.56 18134.7,-1646.82 18741.33,-1622.96"/>
<polygon fill="#0d1575" stroke="#0d1575" stroke-width="0.5" points="18741.42,-1624.18 18744.87,-1622.82 18741.33,-1621.73 18741.42,-1624.18"/>
<text text-anchor="middle" x="17827" y="-1691.5" font-family="Arial" font-size="10.00" fill="#0d1575">2.06%</text>
<text text-anchor="middle" x="17827" y="-1680.5" font-family="Arial" font-size="10.00" fill="#0d1575">3×</text>
</g>
<!-- computePijHomSpec::fillPij(double, stochasticProcess const&amp;, int, bool)&#45;&gt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_append(unsigned long) -->
<g id="edge48" class="edge">
<title>computePijHomSpec::fillPij(double, stochasticProcess const&amp;, int, bool)&#45;&gt;std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_append(unsigned long)</title>
<path fill="none" stroke="#0d1375" stroke-width="0.5" d="M19669.53,-1584.89C19698.21,-1527.77 19751.41,-1401.28 19722,-1297 19717.61,-1281.45 19716.59,-1274.74 19703,-1266 19689.26,-1257.15 19646.18,-1259.31 19630,-1257 19629.59,-1256.94 19629.18,-1256.88 19628.77,-1256.82"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width="0.5" points="19628.71,-1255.58 19625.07,-1256.29 19628.36,-1258 19628.71,-1255.58"/>
<text text-anchor="middle" x="19746.5" y="-1403.5" font-family="Arial" font-size="10.00" fill="#0d1375">1.51%</text>
<text text-anchor="middle" x="19746.5" y="-1392.5" font-family="Arial" font-size="10.00" fill="#0d1375">79988×</text>
</g>
<!-- computePijHomSpec::fillDistributions() -->
<g id="node64" class="node">
<title>computePijHomSpec::fillDistributions()</title>
<polygon fill="#0c8691" stroke="#0c8691" points="19061.5,-1504 18876.5,-1504 18876.5,-1441 19061.5,-1441 19061.5,-1504"/>
<text text-anchor="middle" x="18969" y="-1492" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="18969" y="-1481" font-family="Arial" font-size="10.00" fill="#ffffff">computePijHomSpec::fillDistributions()</text>
<text text-anchor="middle" x="18969" y="-1470" font-family="Arial" font-size="10.00" fill="#ffffff">22.97%</text>
<text text-anchor="middle" x="18969" y="-1459" font-family="Arial" font-size="10.00" fill="#ffffff">(0.66%)</text>
<text text-anchor="middle" x="18969" y="-1448" font-family="Arial" font-size="10.00" fill="#ffffff">19997×</text>
</g>
<!-- computePijHomSpec::fillPij(double, stochasticProcess const&amp;, int, bool)&#45;&gt;computePijHomSpec::fillDistributions() -->
<g id="edge47" class="edge">
<title>computePijHomSpec::fillPij(double, stochasticProcess const&amp;, int, bool)&#45;&gt;computePijHomSpec::fillDistributions()</title>
<path fill="none" stroke="#0c8691" stroke-width="0.92" d="M19516.08,-1585C19413.48,-1562.88 19269.43,-1533.39 19142,-1513 19108.85,-1507.69 19099.83,-1511.02 19067,-1504 19066.89,-1503.98 19066.78,-1503.95 19066.67,-1503.93"/>
<polygon fill="#0c8691" stroke="#0c8691" stroke-width="0.92" points="19066.79,-1502.23 19061.74,-1502.83 19066.06,-1505.51 19066.79,-1502.23"/>
<text text-anchor="middle" x="19488" y="-1547.5" font-family="Arial" font-size="10.00" fill="#0c8691">22.97%</text>
<text text-anchor="middle" x="19488" y="-1536.5" font-family="Arial" font-size="10.00" fill="#0c8691">19997×</text>
</g>
<!-- trivialAccelerator::Pij_t(int, int, double) const -->
<g id="node65" class="node">
<title>trivialAccelerator::Pij_t(int, int, double) const</title>
<polygon fill="#0d1475" stroke="#0d1475" points="19954.5,-1504 19745.5,-1504 19745.5,-1441 19954.5,-1441 19954.5,-1504"/>
<text text-anchor="middle" x="19850" y="-1492" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="19850" y="-1481" font-family="Arial" font-size="10.00" fill="#ffffff">trivialAccelerator::Pij_t(int, int, double) const</text>
<text text-anchor="middle" x="19850" y="-1470" font-family="Arial" font-size="10.00" fill="#ffffff">1.80%</text>
<text text-anchor="middle" x="19850" y="-1459" font-family="Arial" font-size="10.00" fill="#ffffff">(0.10%)</text>
<text text-anchor="middle" x="19850" y="-1448" font-family="Arial" font-size="10.00" fill="#ffffff">199970×</text>
</g>
<!-- computePijHomSpec::fillPij(double, stochasticProcess const&amp;, int, bool)&#45;&gt;trivialAccelerator::Pij_t(int, int, double) const -->
<g id="edge49" class="edge">
<title>computePijHomSpec::fillPij(double, stochasticProcess const&amp;, int, bool)&#45;&gt;trivialAccelerator::Pij_t(int, int, double) const</title>
<path fill="none" stroke="#0d1475" stroke-width="0.5" d="M19723.52,-1584.83C19728.52,-1582.02 19733.4,-1579.07 19738,-1576 19767.92,-1556.05 19797.77,-1528.24 19819.12,-1506.63"/>
<polygon fill="#0d1475" stroke="#0d1475" stroke-width="0.5" points="19820.1,-1507.38 19821.68,-1504.02 19818.35,-1505.66 19820.1,-1507.38"/>
<text text-anchor="middle" x="19831" y="-1547.5" font-family="Arial" font-size="10.00" fill="#0d1475">1.80%</text>
<text text-anchor="middle" x="19831" y="-1536.5" font-family="Arial" font-size="10.00" fill="#0d1475">199970×</text>
</g>
<!-- computePijHomSpec::fillDistributions()&#45;&gt;0x000000000010d7f0 -->
<g id="edge44" class="edge">
<title>computePijHomSpec::fillDistributions()&#45;&gt;0x000000000010d7f0</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M18999.68,-1440.73C19034.26,-1402.43 19080.79,-1337.16 19041,-1297 19031.6,-1287.51 18092.35,-1288.45 18079,-1288 18019.27,-1286 17584.13,-1299.39 17542,-1257 17505.95,-1220.73 17513.47,-1156.57 17522.82,-1116.97"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="17524.09,-1116.91 17523.73,-1113.22 17521.71,-1116.33 17524.09,-1116.91"/>
<text text-anchor="middle" x="18095.5" y="-1280" font-family="Arial" font-size="10.00" fill="#0d1074">0.77%</text>
<text text-anchor="middle" x="18095.5" y="-1269" font-family="Arial" font-size="10.00" fill="#0d1074">79988×</text>
</g>
<!-- computePijHomSpec::fillDistributions()&#45;&gt;0x000000000010d800 -->
<g id="edge45" class="edge">
<title>computePijHomSpec::fillDistributions()&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d1274" stroke-width="0.5" d="M18876.11,-1462.61C18793.29,-1455.15 18668.69,-1445.09 18560,-1441 18204.47,-1427.64 6107.46,-1447.07 5752,-1432 5418.68,-1417.87 5337.26,-1384.6 5004,-1369 4990.9,-1368.39 4069.77,-1368.74 4060,-1360 4032.63,-1335.53 4050,-1314.71 4050,-1278 4050,-1278 4050,-1278 4050,-1080.5 4050,-1037.48 3944.02,-1024.56 3913,-1019 3768.62,-993.1 3323.02,-983.21 3161.36,-980.41"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width="0.5" points="3161.12,-979.18 3157.6,-980.35 3161.08,-981.63 3161.12,-979.18"/>
<text text-anchor="middle" x="4066.5" y="-1228.5" font-family="Arial" font-size="10.00" fill="#0d1274">1.25%</text>
<text text-anchor="middle" x="4066.5" y="-1217.5" font-family="Arial" font-size="10.00" fill="#0d1274">99985×</text>
</g>
<!-- computePijHomSpec::fillDistributions()&#45;&gt;DiscreteDistribution::DiscreteDistribution(std::vector&lt;double, std::allocator&lt;double&gt; &gt; const&amp;, double) -->
<g id="edge46" class="edge">
<title>computePijHomSpec::fillDistributions()&#45;&gt;DiscreteDistribution::DiscreteDistribution(std::vector&lt;double, std::allocator&lt;double&gt; &gt; const&amp;, double)</title>
<path fill="none" stroke="#0c728d" stroke-width="0.79" d="M19061.71,-1442.01C19063.48,-1441.66 19065.25,-1441.32 19067,-1441 19137.52,-1428.26 19158.01,-1447.43 19228,-1432 19296.33,-1416.94 19370.13,-1386 19421.22,-1362.03"/>
<polygon fill="#0c728d" stroke="#0c728d" stroke-width="0.79" points="19422.07,-1363.37 19425.47,-1360.03 19420.73,-1360.52 19422.07,-1363.37"/>
<text text-anchor="middle" x="19419" y="-1403.5" font-family="Arial" font-size="10.00" fill="#0c728d">19.87%</text>
<text text-anchor="middle" x="19419" y="-1392.5" font-family="Arial" font-size="10.00" fill="#0c728d">79988×</text>
</g>
<!-- nucJC::Pij_t(int, int, double) const -->
<g id="node74" class="node">
<title>nucJC::Pij_t(int, int, double) const</title>
<polygon fill="#0d1475" stroke="#0d1475" points="20708.5,-1360 20543.5,-1360 20543.5,-1297 20708.5,-1297 20708.5,-1360"/>
<text text-anchor="middle" x="20626" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="20626" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">nucJC::Pij_t(int, int, double) const</text>
<text text-anchor="middle" x="20626" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">1.70%</text>
<text text-anchor="middle" x="20626" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.28%)</text>
<text text-anchor="middle" x="20626" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">199970×</text>
</g>
<!-- trivialAccelerator::Pij_t(int, int, double) const&#45;&gt;nucJC::Pij_t(int, int, double) const -->
<g id="edge158" class="edge">
<title>trivialAccelerator::Pij_t(int, int, double) const&#45;&gt;nucJC::Pij_t(int, int, double) const</title>
<path fill="none" stroke="#0d1475" stroke-width="0.5" d="M19917.66,-1440.9C19975.81,-1416.28 20062.59,-1383.49 20142,-1369 20226.41,-1353.6 20443.33,-1373.88 20528,-1360 20531.76,-1359.38 20535.57,-1358.66 20539.41,-1357.84"/>
<polygon fill="#0d1475" stroke="#0d1475" stroke-width="0.5" points="20540.09,-1358.95 20543.25,-1357 20539.57,-1356.56 20540.09,-1358.95"/>
<text text-anchor="middle" x="20161" y="-1403.5" font-family="Arial" font-size="10.00" fill="#0d1475">1.70%</text>
<text text-anchor="middle" x="20161" y="-1392.5" font-family="Arial" font-size="10.00" fill="#0d1475">199970×</text>
</g>
<!-- getDistance(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;) -->
<g id="node66" class="node">
<title>getDistance(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;)</title>
<polygon fill="#0d2078" stroke="#0d2078" points="20599,-1257 20145,-1257 20145,-1194 20599,-1194 20599,-1257"/>
<text text-anchor="middle" x="20372" y="-1245" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="20372" y="-1234" font-family="Arial" font-size="10.00" fill="#ffffff">getDistance(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;)</text>
<text text-anchor="middle" x="20372" y="-1223" font-family="Arial" font-size="10.00" fill="#ffffff">4.41%</text>
<text text-anchor="middle" x="20372" y="-1212" font-family="Arial" font-size="10.00" fill="#ffffff">(0.76%)</text>
<text text-anchor="middle" x="20372" y="-1201" font-family="Arial" font-size="10.00" fill="#ffffff">19997×</text>
</g>
<!-- string2double(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="node67" class="node">
<title>string2double(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<polygon fill="#0d1c77" stroke="#0d1c77" points="21121.5,-1113 20664.5,-1113 20664.5,-1050 21121.5,-1050 21121.5,-1113"/>
<text text-anchor="middle" x="20893" y="-1101" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="20893" y="-1090" font-family="Arial" font-size="10.00" fill="#ffffff">string2double(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="20893" y="-1079" font-family="Arial" font-size="10.00" fill="#ffffff">3.65%</text>
<text text-anchor="middle" x="20893" y="-1068" font-family="Arial" font-size="10.00" fill="#ffffff">(0.34%)</text>
<text text-anchor="middle" x="20893" y="-1057" font-family="Arial" font-size="10.00" fill="#ffffff">19997×</text>
</g>
<!-- getDistance(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;)&#45;&gt;string2double(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="edge52" class="edge">
<title>getDistance(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;)&#45;&gt;string2double(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d1c77" stroke-width="0.5" d="M20423.47,-1193.77C20465.45,-1170.19 20527.09,-1138.9 20585,-1122 20617.23,-1112.59 20626.69,-1117.18 20660,-1113 20660.18,-1112.98 20660.35,-1112.96 20660.53,-1112.93"/>
<polygon fill="#0d1c77" stroke="#0d1c77" stroke-width="0.5" points="20660.94,-1114.12 20664.26,-1112.46 20660.64,-1111.69 20660.94,-1114.12"/>
<text text-anchor="middle" x="20601.5" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d1c77">3.65%</text>
<text text-anchor="middle" x="20601.5" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d1c77">19997×</text>
</g>
<!-- string2double(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;0x000000000010d750 -->
<g id="edge129" class="edge">
<title>string2double(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;0x000000000010d750</title>
<path fill="none" stroke="#0d1676" stroke-width="0.5" d="M20866.96,-1049.92C20857.04,-1038.26 20845.67,-1024.92 20835.52,-1013"/>
<polygon fill="#0d1676" stroke="#0d1676" stroke-width="0.5" points="20836.45,-1012.19 20833.24,-1010.32 20834.58,-1013.78 20836.45,-1012.19"/>
<text text-anchor="middle" x="20873.5" y="-1033" font-family="Arial" font-size="10.00" fill="#0d1676">2.29%</text>
<text text-anchor="middle" x="20873.5" y="-1022" font-family="Arial" font-size="10.00" fill="#0d1676">19997×</text>
</g>
<!-- string2double(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;allowCharSet(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="edge130" class="edge">
<title>string2double(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;allowCharSet(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d1174" stroke-width="0.5" d="M21013.53,-1049.99C21062.36,-1037.63 21118.74,-1023.36 21167.93,-1010.91"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width="0.5" points="21168.37,-1012.06 21171.46,-1010.01 21167.77,-1009.68 21168.37,-1012.06"/>
<text text-anchor="middle" x="21144.5" y="-1033" font-family="Arial" font-size="10.00" fill="#0d1174">1.01%</text>
<text text-anchor="middle" x="21144.5" y="-1022" font-family="Arial" font-size="10.00" fill="#0d1174">19997×</text>
</g>
<!-- int2string[abi:cxx11](int) -->
<g id="node68" class="node">
<title>int2string[abi:cxx11](int)</title>
<polygon fill="#0d1174" stroke="#0d1174" points="18766,-1792 18646,-1792 18646,-1729 18766,-1729 18766,-1792"/>
<text text-anchor="middle" x="18706" y="-1780" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="18706" y="-1769" font-family="Arial" font-size="10.00" fill="#ffffff">int2string[abi:cxx11](int)</text>
<text text-anchor="middle" x="18706" y="-1758" font-family="Arial" font-size="10.00" fill="#ffffff">0.94%</text>
<text text-anchor="middle" x="18706" y="-1747" font-family="Arial" font-size="10.00" fill="#ffffff">(0.32%)</text>
<text text-anchor="middle" x="18706" y="-1736" font-family="Arial" font-size="10.00" fill="#ffffff">9998×</text>
</g>
<!-- rateMatrixSim::rateMatrixSim(modelFactory&amp;)&#45;&gt;computePijGam::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool) -->
<g id="edge82" class="edge">
<title>rateMatrixSim::rateMatrixSim(modelFactory&amp;)&#45;&gt;computePijGam::fillPij(tree const&amp;, stochasticProcess const&amp;, int, bool)</title>
<path fill="none" stroke="#0b9e71" stroke-width="1.31" d="M5552.28,-2116.28C6361.32,-2092.2 11458.11,-1940.5 12462.32,-1910.61"/>
<polygon fill="#0b9e71" stroke="#0b9e71" stroke-width="1.31" points="12462.53,-1912.6 12468.17,-1910.44 12462.42,-1908.61 12462.53,-1912.6"/>
<text text-anchor="middle" x="8901" y="-2051.5" font-family="Arial" font-size="10.00" fill="#0b9e71">32.70%</text>
<text text-anchor="middle" x="8901" y="-2040.5" font-family="Arial" font-size="10.00" fill="#0b9e71">1×</text>
</g>
<!-- std::_Sp_counted_deleter&lt;sequenceContainer*, std::default_delete&lt;sequenceContainer&gt;, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose() -->
<g id="node97" class="node">
<title>std::_Sp_counted_deleter&lt;sequenceContainer*, std::default_delete&lt;sequenceContainer&gt;, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose()</title>
<polygon fill="#0d1375" stroke="#0d1375" points="905,-1864 211,-1864 211,-1801 905,-1801 905,-1864"/>
<text text-anchor="middle" x="558" y="-1852" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="558" y="-1841" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Sp_counted_deleter&lt;sequenceContainer*, std::default_delete&lt;sequenceContainer&gt;, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose()</text>
<text text-anchor="middle" x="558" y="-1830" font-family="Arial" font-size="10.00" fill="#ffffff">1.56%</text>
<text text-anchor="middle" x="558" y="-1819" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="558" y="-1808" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release()&#45;&gt;std::_Sp_counted_deleter&lt;sequenceContainer*, std::default_delete&lt;sequenceContainer&gt;, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose() -->
<g id="edge114" class="edge">
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release()&#45;&gt;std::_Sp_counted_deleter&lt;sequenceContainer*, std::default_delete&lt;sequenceContainer&gt;, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose()</title>
<path fill="none" stroke="#0d1375" stroke-width="0.5" d="M688.76,-1944.69C661.64,-1921.63 624.61,-1890.14 596.87,-1866.55"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width="0.5" points="597.34,-1865.34 593.88,-1864.01 595.75,-1867.21 597.34,-1865.34"/>
<text text-anchor="middle" x="690" y="-1907.5" font-family="Arial" font-size="10.00" fill="#0d1375">1.56%</text>
<text text-anchor="middle" x="690" y="-1896.5" font-family="Arial" font-size="10.00" fill="#0d1375">1×</text>
</g>
<!-- rateMatrixSim::~rateMatrixSim() -->
<g id="node87" class="node">
<title>rateMatrixSim::~rateMatrixSim()</title>
<polygon fill="#0d277a" stroke="#0d277a" points="279,-1576 123,-1576 123,-1513 279,-1513 279,-1576"/>
<text text-anchor="middle" x="201" y="-1564" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="201" y="-1553" font-family="Arial" font-size="10.00" fill="#ffffff">rateMatrixSim::~rateMatrixSim()</text>
<text text-anchor="middle" x="201" y="-1542" font-family="Arial" font-size="10.00" fill="#ffffff">5.94%</text>
<text text-anchor="middle" x="201" y="-1531" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="201" y="-1520" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- std::unique_ptr&lt;rateMatrixSim, std::default_delete&lt;rateMatrixSim&gt; &gt;::~unique_ptr()&#45;&gt;rateMatrixSim::~rateMatrixSim() -->
<g id="edge120" class="edge">
<title>std::unique_ptr&lt;rateMatrixSim, std::default_delete&lt;rateMatrixSim&gt; &gt;::~unique_ptr()&#45;&gt;rateMatrixSim::~rateMatrixSim()</title>
<path fill="none" stroke="#0d277a" stroke-width="0.5" d="M314.26,-2237.94C253.19,-2218.17 201,-2183.23 201,-2121.5 201,-2121.5 201,-2121.5 201,-1687.5 201,-1650.81 201,-1608.79 201,-1580.04"/>
<polygon fill="#0d277a" stroke="#0d277a" stroke-width="0.5" points="202.23,-1579.75 201,-1576.25 199.78,-1579.75 202.23,-1579.75"/>
<text text-anchor="middle" x="215" y="-1907.5" font-family="Arial" font-size="10.00" fill="#0d277a">5.94%</text>
<text text-anchor="middle" x="215" y="-1896.5" font-family="Arial" font-size="10.00" fill="#0d277a">1×</text>
</g>
<!-- std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt;::~vector()&#45;&gt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0] -->
<g id="edge128" class="edge">
<title>std::vector&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, BlockTree, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt; &gt; &gt;::~vector()&#45;&gt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0]</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M1347.61,-2304.99C1108.02,-2284.5 915,-2250.35 915,-2193.5 915,-2193.5 915,-2193.5 915,-1759.5 915,-1702.87 1110.87,-1668.8 1351.19,-1648.31"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="1351.35,-1649.53 1354.73,-1648.01 1351.14,-1647.09 1351.35,-1649.53"/>
<text text-anchor="middle" x="929" y="-1979.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.79%</text>
<text text-anchor="middle" x="929" y="-1968.5" font-family="Arial" font-size="10.00" fill="#0d1074">1×</text>
</g>
<!-- tree::create_names_to_internal_nodes() -->
<g id="node104" class="node">
<title>tree::create_names_to_internal_nodes()</title>
<polygon fill="#0d1274" stroke="#0d1274" points="18800,-1936 18612,-1936 18612,-1873 18800,-1873 18800,-1936"/>
<text text-anchor="middle" x="18706" y="-1924" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="18706" y="-1913" font-family="Arial" font-size="10.00" fill="#ffffff">tree::create_names_to_internal_nodes()</text>
<text text-anchor="middle" x="18706" y="-1902" font-family="Arial" font-size="10.00" fill="#ffffff">1.22%</text>
<text text-anchor="middle" x="18706" y="-1891" font-family="Arial" font-size="10.00" fill="#ffffff">(0.06%)</text>
<text text-anchor="middle" x="18706" y="-1880" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- tree::tree(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;tree::create_names_to_internal_nodes() -->
<g id="edge155" class="edge">
<title>tree::tree(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;tree::create_names_to_internal_nodes()</title>
<path fill="none" stroke="#0d1274" stroke-width="0.5" d="M18706,-2016.69C18706,-1994.08 18706,-1963.36 18706,-1939.95"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width="0.5" points="18707.23,-1939.75 18706,-1936.25 18704.78,-1939.75 18707.23,-1939.75"/>
<text text-anchor="middle" x="18720" y="-1979.5" font-family="Arial" font-size="10.00" fill="#0d1274">1.22%</text>
<text text-anchor="middle" x="18720" y="-1968.5" font-family="Arial" font-size="10.00" fill="#0d1274">1×</text>
</g>
<!-- tree::readPhylipTreeTopology(std::istream&amp;) -->
<g id="node107" class="node">
<title>tree::readPhylipTreeTopology(std::istream&amp;)</title>
<polygon fill="#0d4482" stroke="#0d4482" points="20403,-1936 20195,-1936 20195,-1873 20403,-1873 20403,-1936"/>
<text text-anchor="middle" x="20299" y="-1924" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="20299" y="-1913" font-family="Arial" font-size="10.00" fill="#ffffff">tree::readPhylipTreeTopology(std::istream&amp;)</text>
<text text-anchor="middle" x="20299" y="-1902" font-family="Arial" font-size="10.00" fill="#ffffff">11.71%</text>
<text text-anchor="middle" x="20299" y="-1891" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="20299" y="-1880" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- tree::tree(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;tree::readPhylipTreeTopology(std::istream&amp;) -->
<g id="edge156" class="edge">
<title>tree::tree(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;tree::readPhylipTreeTopology(std::istream&amp;)</title>
<path fill="none" stroke="#0d4482" stroke-width="0.5" d="M18925.41,-2027.94C19271.59,-1997.08 19931.76,-1938.24 20190.83,-1915.14"/>
<polygon fill="#0d4482" stroke="#0d4482" stroke-width="0.5" points="20191.24,-1916.34 20194.62,-1914.8 20191.02,-1913.9 20191.24,-1916.34"/>
<text text-anchor="middle" x="19845" y="-1979.5" font-family="Arial" font-size="10.00" fill="#0d4482">11.71%</text>
<text text-anchor="middle" x="19845" y="-1968.5" font-family="Arial" font-size="10.00" fill="#0d4482">1×</text>
</g>
<!-- nucJC::Pij_t(int, int, double) const&#45;&gt;0x000000000010da50 -->
<g id="edge65" class="edge">
<title>nucJC::Pij_t(int, int, double) const&#45;&gt;0x000000000010da50</title>
<path fill="none" stroke="#0d1375" stroke-width="0.5" d="M20637.5,-1296.92C20641.82,-1285.46 20646.74,-1272.36 20651.17,-1260.6"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width="0.5" points="20652.32,-1261.03 20652.4,-1257.32 20650.02,-1260.17 20652.32,-1261.03"/>
<text text-anchor="middle" x="20667" y="-1280" font-family="Arial" font-size="10.00" fill="#0d1375">1.41%</text>
<text text-anchor="middle" x="20667" y="-1269" font-family="Arial" font-size="10.00" fill="#0d1375">199970×</text>
</g>
<!-- nucJC::Qij(int, int) const -->
<g id="node75" class="node">
<title>nucJC::Qij(int, int) const</title>
<polygon fill="#0d0f74" stroke="#0d0f74" points="5446.5,-1010 5323.5,-1010 5323.5,-947 5446.5,-947 5446.5,-1010"/>
<text text-anchor="middle" x="5385" y="-998" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="5385" y="-987" font-family="Arial" font-size="10.00" fill="#ffffff">nucJC::Qij(int, int) const</text>
<text text-anchor="middle" x="5385" y="-976" font-family="Arial" font-size="10.00" fill="#ffffff">0.61%</text>
<text text-anchor="middle" x="5385" y="-965" font-family="Arial" font-size="10.00" fill="#ffffff">(0.61%)</text>
<text text-anchor="middle" x="5385" y="-954" font-family="Arial" font-size="10.00" fill="#ffffff">968072×</text>
</g>
<!-- nucleotide::clone() const -->
<g id="node76" class="node">
<title>nucleotide::clone() const</title>
<polygon fill="#0d277a" stroke="#0d277a" points="6257.5,-1257 6134.5,-1257 6134.5,-1194 6257.5,-1194 6257.5,-1257"/>
<text text-anchor="middle" x="6196" y="-1245" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="6196" y="-1234" font-family="Arial" font-size="10.00" fill="#ffffff">nucleotide::clone() const</text>
<text text-anchor="middle" x="6196" y="-1223" font-family="Arial" font-size="10.00" fill="#ffffff">5.93%</text>
<text text-anchor="middle" x="6196" y="-1212" font-family="Arial" font-size="10.00" fill="#ffffff">(0.79%)</text>
<text text-anchor="middle" x="6196" y="-1201" font-family="Arial" font-size="10.00" fill="#ffffff">36385×</text>
</g>
<!-- nucleotide::clone() const&#45;&gt;0x000000000010d7f0 -->
<g id="edge66" class="edge">
<title>nucleotide::clone() const&#45;&gt;0x000000000010d7f0</title>
<path fill="none" stroke="#0d2279" stroke-width="0.5" d="M6211.53,-1193.7C6212.78,-1190.79 6213.96,-1187.86 6215,-1185 6224.87,-1157.85 6208.21,-1139.75 6231,-1122 6238.75,-1115.97 11877.18,-1113.03 11887,-1113 14195.37,-1104.93 17034.56,-1085.9 17474.57,-1082.9"/>
<polygon fill="#0d2279" stroke="#0d2279" stroke-width="0.5" points="17474.89,-1084.12 17478.38,-1082.87 17474.87,-1081.67 17474.89,-1084.12"/>
<text text-anchor="middle" x="6250" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d2279">4.89%</text>
<text text-anchor="middle" x="6250" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d2279">218310×</text>
</g>
<!-- nucleotide::clone() const&#45;&gt;0x000000000010d9b0 -->
<g id="edge67" class="edge">
<title>nucleotide::clone() const&#45;&gt;0x000000000010d9b0</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M6181.49,-1193.82C6180.5,-1190.88 6179.65,-1187.92 6179,-1185 6174.09,-1162.84 6173.33,-1137.33 6173.8,-1117.3"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="6175.04,-1116.9 6173.91,-1113.37 6172.59,-1116.83 6175.04,-1116.9"/>
<text text-anchor="middle" x="6198" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.24%</text>
<text text-anchor="middle" x="6198" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d0e73">145540×</text>
</g>
<!-- nucleotide::~nucleotide() -->
<g id="node77" class="node">
<title>nucleotide::~nucleotide()</title>
<polygon fill="#0d1b77" stroke="#0d1b77" points="3310.5,-1113 3187.5,-1113 3187.5,-1050 3310.5,-1050 3310.5,-1113"/>
<text text-anchor="middle" x="3249" y="-1101" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="3249" y="-1090" font-family="Arial" font-size="10.00" fill="#ffffff">nucleotide::~nucleotide()</text>
<text text-anchor="middle" x="3249" y="-1079" font-family="Arial" font-size="10.00" fill="#ffffff">3.46%</text>
<text text-anchor="middle" x="3249" y="-1068" font-family="Arial" font-size="10.00" fill="#ffffff">(0.29%)</text>
<text text-anchor="middle" x="3249" y="-1057" font-family="Arial" font-size="10.00" fill="#ffffff">36386×</text>
</g>
<!-- nucleotide::~nucleotide()&#45;&gt;0x000000000010d800 -->
<g id="edge68" class="edge">
<title>nucleotide::~nucleotide()&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d1a77" stroke-width="0.5" d="M3204.5,-1049.92C3187.16,-1038.01 3167.26,-1024.34 3149.64,-1012.23"/>
<polygon fill="#0d1a77" stroke="#0d1a77" stroke-width="0.5" points="3150.18,-1011.12 3146.61,-1010.15 3148.8,-1013.14 3150.18,-1011.12"/>
<text text-anchor="middle" x="3208" y="-1033" font-family="Arial" font-size="10.00" fill="#0d1a77">3.16%</text>
<text text-anchor="middle" x="3208" y="-1022" font-family="Arial" font-size="10.00" fill="#0d1a77">218316×</text>
</g>
<!-- rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#39;2 -->
<g id="node81" class="node">
<title>rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#39;2</title>
<polygon fill="#0b9e70" stroke="#0b9e70" points="4067.5,-1936 3780.5,-1936 3780.5,-1873 4067.5,-1873 4067.5,-1936"/>
<text text-anchor="middle" x="3924" y="-1924" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="3924" y="-1913" font-family="Arial" font-size="10.00" fill="#ffffff">rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#39;2</text>
<text text-anchor="middle" x="3924" y="-1902" font-family="Arial" font-size="10.00" fill="#ffffff">32.87%</text>
<text text-anchor="middle" x="3924" y="-1891" font-family="Arial" font-size="10.00" fill="#ffffff">(0.26%)</text>
<text text-anchor="middle" x="3924" y="-1880" font-family="Arial" font-size="10.00" fill="#ffffff">19997×</text>
</g>
<!-- rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#45;&gt;rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#39;2 -->
<g id="edge76" class="edge">
<title>rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#45;&gt;rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#39;2</title>
<path fill="none" stroke="#0b9e70" stroke-width="1.31" d="M3921.65,-2016.69C3922.11,-1994.73 3922.74,-1965.13 3923.23,-1941.99"/>
<polygon fill="#0b9e70" stroke="#0b9e70" stroke-width="1.31" points="3925.22,-1941.99 3923.35,-1936.25 3921.24,-1941.91 3925.22,-1941.99"/>
<text text-anchor="middle" x="3940" y="-1979.5" font-family="Arial" font-size="10.00" fill="#0b9e70">32.87%</text>
<text text-anchor="middle" x="3940" y="-1968.5" font-family="Arial" font-size="10.00" fill="#0b9e70">3×</text>
</g>
<!-- rateMatrixSim::mutateSeqGillespie(tree::TreeNode*, int, double) -->
<g id="node79" class="node">
<title>rateMatrixSim::mutateSeqGillespie(tree::TreeNode*, int, double)</title>
<polygon fill="#0c5f88" stroke="#0c5f88" points="4358,-1360 4064,-1360 4064,-1297 4358,-1297 4358,-1360"/>
<text text-anchor="middle" x="4211" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="4211" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">rateMatrixSim::mutateSeqGillespie(tree::TreeNode*, int, double)</text>
<text text-anchor="middle" x="4211" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">16.60%</text>
<text text-anchor="middle" x="4211" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(4.72%)</text>
<text text-anchor="middle" x="4211" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">19997×</text>
</g>
<!-- rateMatrixSim::mutateSeqGillespie(tree::TreeNode*, int, double)&#45;&gt;0x000000000010d780 -->
<g id="edge73" class="edge">
<title>rateMatrixSim::mutateSeqGillespie(tree::TreeNode*, int, double)&#45;&gt;0x000000000010d780</title>
<path fill="none" stroke="#0d1375" stroke-width="0.5" d="M4358.16,-1297.54C4359.78,-1297.35 4361.39,-1297.17 4363,-1297 4394.93,-1293.58 4911.29,-1300.19 4941,-1288 4954.09,-1282.63 4950.89,-1271.32 4964,-1266 4990.84,-1255.09 5978.79,-1263.6 6007,-1257 6008.24,-1256.71 6009.49,-1256.39 6010.74,-1256.05"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width="0.5" points="6011.47,-1257.11 6014.48,-1254.95 6010.78,-1254.76 6011.47,-1257.11"/>
<text text-anchor="middle" x="4983" y="-1280" font-family="Arial" font-size="10.00" fill="#0d1375">1.56%</text>
<text text-anchor="middle" x="4983" y="-1269" font-family="Arial" font-size="10.00" fill="#0d1375">220889×</text>
</g>
<!-- rateMatrixSim::mutateSeqGillespie(tree::TreeNode*, int, double)&#45;&gt;std::mersenne_twister_engine&lt;unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul&gt;::operator()() -->
<g id="edge74" class="edge">
<title>rateMatrixSim::mutateSeqGillespie(tree::TreeNode*, int, double)&#45;&gt;std::mersenne_twister_engine&lt;unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul&gt;::operator()()</title>
<path fill="none" stroke="#0d257a" stroke-width="0.5" d="M4333.94,-1296.99C4383.76,-1284.63 4441.26,-1270.36 4491.44,-1257.91"/>
<polygon fill="#0d257a" stroke="#0d257a" stroke-width="0.5" points="4491.94,-1259.04 4495.04,-1257.01 4491.35,-1256.67 4491.94,-1259.04"/>
<text text-anchor="middle" x="4471.5" y="-1280" font-family="Arial" font-size="10.00" fill="#0d257a">5.63%</text>
<text text-anchor="middle" x="4471.5" y="-1269" font-family="Arial" font-size="10.00" fill="#0d257a">1024457×</text>
</g>
<!-- substitutionManager::handleEvent(int, unsigned long, unsigned char, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*, sequence&amp;) -->
<g id="node80" class="node">
<title>substitutionManager::handleEvent(int, unsigned long, unsigned char, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*, sequence&amp;)</title>
<polygon fill="#0d2179" stroke="#0d2179" points="5954,-1257 5172,-1257 5172,-1194 5954,-1194 5954,-1257"/>
<text text-anchor="middle" x="5563" y="-1245" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="5563" y="-1234" font-family="Arial" font-size="10.00" fill="#ffffff">substitutionManager::handleEvent(int, unsigned long, unsigned char, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*, sequence&amp;)</text>
<text text-anchor="middle" x="5563" y="-1223" font-family="Arial" font-size="10.00" fill="#ffffff">4.70%</text>
<text text-anchor="middle" x="5563" y="-1212" font-family="Arial" font-size="10.00" fill="#ffffff">(3.46%)</text>
<text text-anchor="middle" x="5563" y="-1201" font-family="Arial" font-size="10.00" fill="#ffffff">301551×</text>
</g>
<!-- rateMatrixSim::mutateSeqGillespie(tree::TreeNode*, int, double)&#45;&gt;substitutionManager::handleEvent(int, unsigned long, unsigned char, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*, sequence&amp;) -->
<g id="edge75" class="edge">
<title>rateMatrixSim::mutateSeqGillespie(tree::TreeNode*, int, double)&#45;&gt;substitutionManager::handleEvent(int, unsigned long, unsigned char, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*, sequence&amp;)</title>
<path fill="none" stroke="#0d2179" stroke-width="0.5" d="M4358.17,-1297.64C4359.79,-1297.42 4361.4,-1297.21 4363,-1297 4392.69,-1293.18 4871.09,-1267.4 4901,-1266 5011.17,-1260.83 5038.87,-1263.05 5149,-1257 5155.38,-1256.65 5161.81,-1256.29 5168.28,-1255.91"/>
<polygon fill="#0d2179" stroke="#0d2179" stroke-width="0.5" points="5168.46,-1257.13 5171.88,-1255.7 5168.31,-1254.68 5168.46,-1257.13"/>
<text text-anchor="middle" x="4920" y="-1280" font-family="Arial" font-size="10.00" fill="#0d2179">4.70%</text>
<text text-anchor="middle" x="4920" y="-1269" font-family="Arial" font-size="10.00" fill="#0d2179">301551×</text>
</g>
<!-- substitutionManager::handleEvent(int, unsigned long, unsigned char, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*, sequence&amp;)&#45;&gt;0x000000000010d7f0 -->
<g id="edge132" class="edge">
<title>substitutionManager::handleEvent(int, unsigned long, unsigned char, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*, sequence&amp;)&#45;&gt;0x000000000010d7f0</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M5954.24,-1194.46C5956.5,-1194.31 5958.75,-1194.15 5961,-1194 5977.88,-1192.85 6099.29,-1194.91 6113,-1185 6137.41,-1167.35 6113.09,-1138.94 6138,-1122 6146.25,-1116.39 11877.02,-1113.03 11887,-1113 14195.37,-1104.96 17034.56,-1085.9 17474.57,-1082.9"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="17474.89,-1084.12 17478.38,-1082.87 17474.87,-1081.67 17474.89,-1084.12"/>
<text text-anchor="middle" x="6154.5" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.48%</text>
<text text-anchor="middle" x="6154.5" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d0f73">54658×</text>
</g>
<!-- trivialAccelerator::Qij(int, int) const -->
<g id="node101" class="node">
<title>trivialAccelerator::Qij(int, int) const</title>
<polygon fill="#0d1174" stroke="#0d1174" points="5468.5,-1113 5301.5,-1113 5301.5,-1050 5468.5,-1050 5468.5,-1113"/>
<text text-anchor="middle" x="5385" y="-1101" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="5385" y="-1090" font-family="Arial" font-size="10.00" fill="#ffffff">trivialAccelerator::Qij(int, int) const</text>
<text text-anchor="middle" x="5385" y="-1079" font-family="Arial" font-size="10.00" fill="#ffffff">1.10%</text>
<text text-anchor="middle" x="5385" y="-1068" font-family="Arial" font-size="10.00" fill="#ffffff">(0.49%)</text>
<text text-anchor="middle" x="5385" y="-1057" font-family="Arial" font-size="10.00" fill="#ffffff">968072×</text>
</g>
<!-- substitutionManager::handleEvent(int, unsigned long, unsigned char, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*, sequence&amp;)&#45;&gt;trivialAccelerator::Qij(int, int) const -->
<g id="edge133" class="edge">
<title>substitutionManager::handleEvent(int, unsigned long, unsigned char, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*, sequence&amp;)&#45;&gt;trivialAccelerator::Qij(int, int) const</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M5524.38,-1193.69C5495.35,-1170.54 5455.67,-1138.88 5426.07,-1115.27"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="5426.74,-1114.23 5423.24,-1113.01 5425.21,-1116.15 5426.74,-1114.23"/>
<text text-anchor="middle" x="5529" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.69%</text>
<text text-anchor="middle" x="5529" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d1074">603102×</text>
</g>
<!-- rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#39;2&#45;&gt;0x000000000010d800 -->
<g id="edge77" class="edge">
<title>rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#39;2&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d0d73" stroke-width="0.5" d="M3780.34,-1902.86C3180.64,-1898.79 897.72,-1868.81 674,-1648 608.25,-1583.1 720.33,-1506.33 655,-1441 639.54,-1425.54 571.74,-1448.16 557,-1432 547.56,-1421.66 547.52,-1379.31 557,-1369 565.08,-1360.22 652.17,-1361.53 664,-1360 1539.64,-1247.11 1745.25,-1131.02 2621,-1019 2772.24,-999.65 2951.52,-987.85 3042.55,-982.65"/>
<polygon fill="#0d0d73" stroke="#0d0d73" stroke-width="0.5" points="3042.86,-983.85 3046.28,-982.43 3042.72,-981.41 3042.86,-983.85"/>
<text text-anchor="middle" x="571" y="-1403.5" font-family="Arial" font-size="10.00" fill="#0d0d73">0.14%</text>
<text text-anchor="middle" x="571" y="-1392.5" font-family="Arial" font-size="10.00" fill="#0d0d73">9997×</text>
</g>
<!-- rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#39;2&#45;&gt;rateMatrixSim::mutateSeqGillespie(tree::TreeNode*, int, double) -->
<g id="edge78" class="edge">
<title>rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#39;2&#45;&gt;rateMatrixSim::mutateSeqGillespie(tree::TreeNode*, int, double)</title>
<path fill="none" stroke="#0c5f88" stroke-width="0.66" d="M4067.65,-1894.46C4314.05,-1877.02 4791,-1833.9 4791,-1761.5 4791,-1761.5 4791,-1761.5 4791,-1471.5 4791,-1297.63 4577.56,-1389.17 4451,-1369 4412.17,-1362.81 4401.87,-1365.87 4363,-1360 4362.8,-1359.97 4362.6,-1359.94 4362.4,-1359.91"/>
<polygon fill="#0c5f88" stroke="#0c5f88" stroke-width="0.66" points="4362.46,-1358.47 4358.19,-1359.26 4362.02,-1361.3 4362.46,-1358.47"/>
<text text-anchor="middle" x="4808" y="-1619.5" font-family="Arial" font-size="10.00" fill="#0c5f88">16.60%</text>
<text text-anchor="middle" x="4808" y="-1608.5" font-family="Arial" font-size="10.00" fill="#0c5f88">19994×</text>
</g>
<!-- rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#39;2&#45;&gt;rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#39;2 -->
<g id="edge79" class="edge">
<title>rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#39;2&#45;&gt;rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#39;2</title>
<path fill="none" stroke="#0b9e70" stroke-width="1.31" d="M4067.54,-1912.46C4073.22,-1910.39 4076.5,-1907.73 4076.5,-1904.5 4076.5,-1902.48 4075.22,-1900.68 4072.87,-1899.12"/>
<polygon fill="#0b9e70" stroke="#0b9e70" stroke-width="1.31" points="4073.54,-1897.22 4067.54,-1896.54 4071.8,-1900.82 4073.54,-1897.22"/>
<text text-anchor="middle" x="4093" y="-1902" font-family="Arial" font-size="10.00" fill="#0b9e70">19994×</text>
</g>
<!-- rateMatrixSim::saveSequence(int const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="node82" class="node">
<title>rateMatrixSim::saveSequence(int const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<polygon fill="#0d4282" stroke="#0d4282" points="4458.5,-1792 3877.5,-1792 3877.5,-1729 4458.5,-1729 4458.5,-1792"/>
<text text-anchor="middle" x="4168" y="-1780" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="4168" y="-1769" font-family="Arial" font-size="10.00" fill="#ffffff">rateMatrixSim::saveSequence(int const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="4168" y="-1758" font-family="Arial" font-size="10.00" fill="#ffffff">11.45%</text>
<text text-anchor="middle" x="4168" y="-1747" font-family="Arial" font-size="10.00" fill="#ffffff">(0.04%)</text>
<text text-anchor="middle" x="4168" y="-1736" font-family="Arial" font-size="10.00" fill="#ffffff">10000×</text>
</g>
<!-- rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#39;2&#45;&gt;rateMatrixSim::saveSequence(int const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="edge80" class="edge">
<title>rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#39;2&#45;&gt;rateMatrixSim::saveSequence(int const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d4282" stroke-width="0.5" d="M4013.9,-1872.97C4020.12,-1870.14 4026.21,-1867.15 4032,-1864 4067.71,-1844.57 4104.29,-1816.45 4130.51,-1794.57"/>
<polygon fill="#0d4282" stroke="#0d4282" stroke-width="0.5" points="4131.43,-1795.39 4133.33,-1792.21 4129.86,-1793.51 4131.43,-1795.39"/>
<text text-anchor="middle" x="4138" y="-1835.5" font-family="Arial" font-size="10.00" fill="#0d4282">11.45%</text>
<text text-anchor="middle" x="4138" y="-1824.5" font-family="Arial" font-size="10.00" fill="#0d4282">9998×</text>
</g>
<!-- substitutionManager::undoSubs(int, sequence&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*) -->
<g id="node83" class="node">
<title>substitutionManager::undoSubs(int, sequence&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*)</title>
<polygon fill="#0d1f78" stroke="#0d1f78" points="3940,-1257 3302,-1257 3302,-1194 3940,-1194 3940,-1257"/>
<text text-anchor="middle" x="3621" y="-1245" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="3621" y="-1234" font-family="Arial" font-size="10.00" fill="#ffffff">substitutionManager::undoSubs(int, sequence&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*)</text>
<text text-anchor="middle" x="3621" y="-1223" font-family="Arial" font-size="10.00" fill="#ffffff">4.25%</text>
<text text-anchor="middle" x="3621" y="-1212" font-family="Arial" font-size="10.00" fill="#ffffff">(3.35%)</text>
<text text-anchor="middle" x="3621" y="-1201" font-family="Arial" font-size="10.00" fill="#ffffff">18215×</text>
</g>
<!-- rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#39;2&#45;&gt;substitutionManager::undoSubs(int, sequence&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*) -->
<g id="edge81" class="edge">
<title>rateMatrixSim::mutateSeqRecuresively(tree::TreeNode*, int)&#39;2&#45;&gt;substitutionManager::undoSubs(int, sequence&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*)</title>
<path fill="none" stroke="#0d1f78" stroke-width="0.5" d="M3843.47,-1872.76C3840.39,-1870.08 3837.54,-1867.16 3835,-1864 3805.85,-1827.77 3814,-1808 3814,-1761.5 3814,-1761.5 3814,-1761.5 3814,-1543.5 3814,-1524.1 3815.94,-1386.22 3807,-1369 3781.62,-1320.08 3731.02,-1283.03 3688.99,-1258.99"/>
<polygon fill="#0d1f78" stroke="#0d1f78" stroke-width="0.5" points="3689.37,-1257.8 3685.72,-1257.14 3688.16,-1259.93 3689.37,-1257.8"/>
<text text-anchor="middle" x="3830.5" y="-1547.5" font-family="Arial" font-size="10.00" fill="#0d1f78">4.25%</text>
<text text-anchor="middle" x="3830.5" y="-1536.5" font-family="Arial" font-size="10.00" fill="#0d1f78">18212×</text>
</g>
<!-- sequence::sequence(sequence const&amp;) -->
<g id="node84" class="node">
<title>sequence::sequence(sequence const&amp;)</title>
<polygon fill="#0d2f7d" stroke="#0d2f7d" points="4555,-1360 4367,-1360 4367,-1297 4555,-1297 4555,-1360"/>
<text text-anchor="middle" x="4461" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="4461" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">sequence::sequence(sequence const&amp;)</text>
<text text-anchor="middle" x="4461" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">7.59%</text>
<text text-anchor="middle" x="4461" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.33%)</text>
<text text-anchor="middle" x="4461" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">36383×</text>
</g>
<!-- rateMatrixSim::saveSequence(int const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;sequence::sequence(sequence const&amp;) -->
<g id="edge83" class="edge">
<title>rateMatrixSim::saveSequence(int const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;sequence::sequence(sequence const&amp;)</title>
<path fill="none" stroke="#0d1375" stroke-width="0.5" d="M4458.83,-1729.71C4602.52,-1698.29 4762.8,-1634.23 4847,-1504 4880.37,-1452.39 4867.54,-1403.98 4817,-1369 4793.51,-1352.74 4588.18,-1364.75 4560,-1360 4559.6,-1359.93 4559.2,-1359.86 4558.8,-1359.79"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width="0.5" points="4558.85,-1358.56 4555.18,-1359.14 4558.41,-1360.97 4558.85,-1358.56"/>
<text text-anchor="middle" x="4854.5" y="-1547.5" font-family="Arial" font-size="10.00" fill="#0d1375">1.51%</text>
<text text-anchor="middle" x="4854.5" y="-1536.5" font-family="Arial" font-size="10.00" fill="#0d1375">10000×</text>
</g>
<!-- sequence::~sequence() -->
<g id="node85" class="node">
<title>sequence::~sequence()</title>
<polygon fill="#0d1f78" stroke="#0d1f78" points="3666.5,-1360 3547.5,-1360 3547.5,-1297 3666.5,-1297 3666.5,-1360"/>
<text text-anchor="middle" x="3607" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="3607" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">sequence::~sequence()</text>
<text text-anchor="middle" x="3607" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">4.24%</text>
<text text-anchor="middle" x="3607" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.10%)</text>
<text text-anchor="middle" x="3607" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">36384×</text>
</g>
<!-- rateMatrixSim::saveSequence(int const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;sequence::~sequence() -->
<g id="edge84" class="edge">
<title>rateMatrixSim::saveSequence(int const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;sequence::~sequence()</title>
<path fill="none" stroke="#0d1174" stroke-width="0.5" d="M4108.77,-1728.94C4035.13,-1687.84 3910.86,-1607.77 3843,-1504 3809.08,-1452.12 3853.12,-1411.5 3808,-1369 3788.41,-1350.54 3721.71,-1340.1 3670.47,-1334.65"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width="0.5" points="3670.41,-1333.42 3666.8,-1334.27 3670.16,-1335.85 3670.41,-1333.42"/>
<text text-anchor="middle" x="3915.5" y="-1547.5" font-family="Arial" font-size="10.00" fill="#0d1174">1.14%</text>
<text text-anchor="middle" x="3915.5" y="-1536.5" font-family="Arial" font-size="10.00" fill="#0d1174">10000×</text>
</g>
<!-- sequenceContainer::add(sequence const&amp;) -->
<g id="node86" class="node">
<title>sequenceContainer::add(sequence const&amp;)</title>
<polygon fill="#0d347e" stroke="#0d347e" points="4414,-1648 4210,-1648 4210,-1585 4414,-1585 4414,-1648"/>
<text text-anchor="middle" x="4312" y="-1636" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="4312" y="-1625" font-family="Arial" font-size="10.00" fill="#ffffff">sequenceContainer::add(sequence const&amp;)</text>
<text text-anchor="middle" x="4312" y="-1614" font-family="Arial" font-size="10.00" fill="#ffffff">8.60%</text>
<text text-anchor="middle" x="4312" y="-1603" font-family="Arial" font-size="10.00" fill="#ffffff">(0.06%)</text>
<text text-anchor="middle" x="4312" y="-1592" font-family="Arial" font-size="10.00" fill="#ffffff">10000×</text>
</g>
<!-- rateMatrixSim::saveSequence(int const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;sequenceContainer::add(sequence const&amp;) -->
<g id="edge85" class="edge">
<title>rateMatrixSim::saveSequence(int const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;sequenceContainer::add(sequence const&amp;)</title>
<path fill="none" stroke="#0d347e" stroke-width="0.5" d="M4199.25,-1728.69C4222.55,-1705.71 4254.35,-1674.35 4278.24,-1650.79"/>
<polygon fill="#0d347e" stroke="#0d347e" stroke-width="0.5" points="4279.18,-1651.58 4280.82,-1648.25 4277.46,-1649.84 4279.18,-1651.58"/>
<text text-anchor="middle" x="4285.5" y="-1691.5" font-family="Arial" font-size="10.00" fill="#0d347e">8.60%</text>
<text text-anchor="middle" x="4285.5" y="-1680.5" font-family="Arial" font-size="10.00" fill="#0d347e">10000×</text>
</g>
<!-- substitutionManager::undoSubs(int, sequence&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*)&#45;&gt;0x000000000010d800 -->
<g id="edge134" class="edge">
<title>substitutionManager::undoSubs(int, sequence&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*)&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M3573.35,-1193.88C3514.29,-1156.76 3409.83,-1093.73 3315,-1050 3278.11,-1032.98 3267.52,-1031.93 3229,-1019 3206.97,-1011.61 3182.64,-1003.93 3161.22,-997.32"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="3161.52,-996.13 3157.81,-996.27 3160.79,-998.47 3161.52,-996.13"/>
<text text-anchor="middle" x="3451.5" y="-1084.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.48%</text>
<text text-anchor="middle" x="3451.5" y="-1073.5" font-family="Arial" font-size="10.00" fill="#0d0f73">36430×</text>
</g>
<!-- substitutionManager::undoSubs(int, sequence&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*)&#45;&gt;trivialAccelerator::Qij(int, int) const -->
<g id="edge135" class="edge">
<title>substitutionManager::undoSubs(int, sequence&amp;, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; const&amp;, stochasticProcess const*)&#45;&gt;trivialAccelerator::Qij(int, int) const</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M3847.24,-1194C4038.78,-1169.62 4320.82,-1137.11 4568,-1122 4707.75,-1113.46 5058.53,-1125.3 5198,-1113 5230.59,-1110.13 5266.08,-1104.88 5297.3,-1099.54"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="5297.85,-1100.69 5301.09,-1098.89 5297.43,-1098.28 5297.85,-1100.69"/>
<text text-anchor="middle" x="4587" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.41%</text>
<text text-anchor="middle" x="4587" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d0e73">364770×</text>
</g>
<!-- sequence::sequence(sequence const&amp;)&#45;&gt;0x000000000010d7f0 -->
<g id="edge89" class="edge">
<title>sequence::sequence(sequence const&amp;)&#45;&gt;0x000000000010d7f0</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M4555.17,-1297.8C4556.79,-1297.51 4558.4,-1297.25 4560,-1297 4571.72,-1295.2 6258.25,-1296 6267,-1288 6282.49,-1273.85 6263.04,-1210.5 6276,-1194 6336.16,-1117.39 6386.97,-1138.31 6483,-1122 6520,-1115.72 11849.47,-1113.13 11887,-1113 14195.37,-1104.84 17034.56,-1085.88 17474.57,-1082.9"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="17474.89,-1084.12 17478.38,-1082.87 17474.87,-1081.67 17474.89,-1084.12"/>
<text text-anchor="middle" x="6292.5" y="-1228.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.81%</text>
<text text-anchor="middle" x="6292.5" y="-1217.5" font-family="Arial" font-size="10.00" fill="#0d1074">36383×</text>
</g>
<!-- sequence::sequence(sequence const&amp;)&#45;&gt;0x000000000010d9b0 -->
<g id="edge90" class="edge">
<title>sequence::sequence(sequence const&amp;)&#45;&gt;0x000000000010d9b0</title>
<path fill="none" stroke="#0d0d73" stroke-width="0.5" d="M4555.18,-1297.84C4556.79,-1297.54 4558.4,-1297.26 4560,-1297 4580.68,-1293.63 4918.18,-1297.2 4937,-1288 4948.35,-1282.45 4943.61,-1271.46 4955,-1266 4980.15,-1253.94 5936.81,-1273.89 5959,-1257 5982.17,-1239.36 5961.5,-1218.65 5977,-1194 6002.64,-1153.22 6016.32,-1146.13 6058,-1122 6076.12,-1111.51 6097.42,-1103.3 6116.91,-1097.15"/>
<polygon fill="#0d0d73" stroke="#0d0d73" stroke-width="0.5" points="6117.29,-1098.32 6120.27,-1096.11 6116.57,-1095.98 6117.29,-1098.32"/>
<text text-anchor="middle" x="5993.5" y="-1228.5" font-family="Arial" font-size="10.00" fill="#0d0d73">0.11%</text>
<text text-anchor="middle" x="5993.5" y="-1217.5" font-family="Arial" font-size="10.00" fill="#0d0d73">36383×</text>
</g>
<!-- sequence::sequence(sequence const&amp;)&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) [clone .isra.0] -->
<g id="edge92" class="edge">
<title>sequence::sequence(sequence const&amp;)&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) [clone .isra.0]</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M4555.17,-1297.8C4556.79,-1297.51 4558.4,-1297.25 4560,-1297 4654.62,-1282.5 6188.71,-1304.49 6283,-1288 6311.8,-1282.96 6316.26,-1271.4 6345,-1266 6367.58,-1261.75 6894.98,-1246.51 7265.66,-1236.25"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="7265.73,-1237.48 7269.19,-1236.16 7265.66,-1235.03 7265.73,-1237.48"/>
<text text-anchor="middle" x="6361.5" y="-1280" font-family="Arial" font-size="10.00" fill="#0d0e73">0.42%</text>
<text text-anchor="middle" x="6361.5" y="-1269" font-family="Arial" font-size="10.00" fill="#0d0e73">72766×</text>
</g>
<!-- sequence::sequence(sequence const&amp;)&#45;&gt;nucleotide::clone() const -->
<g id="edge91" class="edge">
<title>sequence::sequence(sequence const&amp;)&#45;&gt;nucleotide::clone() const</title>
<path fill="none" stroke="#0d277a" stroke-width="0.5" d="M4555.18,-1297.83C4556.79,-1297.53 4558.4,-1297.26 4560,-1297 4586.5,-1292.76 5018.56,-1299.09 5043,-1288 5055.03,-1282.54 5050.94,-1271.4 5063,-1266 5090.06,-1253.89 6101.08,-1263.49 6130,-1257 6130.28,-1256.94 6130.55,-1256.87 6130.83,-1256.81"/>
<polygon fill="#0d277a" stroke="#0d277a" stroke-width="0.5" points="6131.35,-1257.94 6134.45,-1255.9 6130.76,-1255.57 6131.35,-1257.94"/>
<text text-anchor="middle" x="5079.5" y="-1280" font-family="Arial" font-size="10.00" fill="#0d277a">5.93%</text>
<text text-anchor="middle" x="5079.5" y="-1269" font-family="Arial" font-size="10.00" fill="#0d277a">36383×</text>
</g>
<!-- sequence::~sequence()&#45;&gt;0x000000000010d800 -->
<g id="edge93" class="edge">
<title>sequence::~sequence()&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M3547.36,-1322.15C3437.74,-1312.26 3213.81,-1291.78 3197,-1288 3157.36,-1279.09 3134.89,-1289.86 3111,-1257 3083.56,-1219.25 3092.48,-1079.83 3098.46,-1014.15"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="3099.71,-1013.92 3098.81,-1010.32 3097.27,-1013.69 3099.71,-1013.92"/>
<text text-anchor="middle" x="3110.5" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.53%</text>
<text text-anchor="middle" x="3110.5" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d0f73">36384×</text>
</g>
<!-- sequence::~sequence()&#45;&gt;nucleotide::~nucleotide() -->
<g id="edge94" class="edge">
<title>sequence::~sequence()&#45;&gt;nucleotide::~nucleotide()</title>
<path fill="none" stroke="#0d1876" stroke-width="0.5" d="M3547.17,-1323.62C3459.05,-1316.58 3300.82,-1298.39 3264,-1257 3259.42,-1251.85 3253.81,-1166.5 3250.92,-1117.11"/>
<polygon fill="#0d1876" stroke="#0d1876" stroke-width="0.5" points="3252.12,-1116.74 3250.7,-1113.32 3249.68,-1116.89 3252.12,-1116.74"/>
<text text-anchor="middle" x="3280.5" y="-1228.5" font-family="Arial" font-size="10.00" fill="#0d1876">2.62%</text>
<text text-anchor="middle" x="3280.5" y="-1217.5" font-family="Arial" font-size="10.00" fill="#0d1876">26384×</text>
</g>
<!-- sequence::~sequence()&#39;2 -->
<g id="node90" class="node">
<title>sequence::~sequence()&#39;2</title>
<polygon fill="#0d1174" stroke="#0d1174" points="3242,-1257 3116,-1257 3116,-1194 3242,-1194 3242,-1257"/>
<text text-anchor="middle" x="3179" y="-1245" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="3179" y="-1234" font-family="Arial" font-size="10.00" fill="#ffffff">sequence::~sequence()&#39;2</text>
<text text-anchor="middle" x="3179" y="-1223" font-family="Arial" font-size="10.00" fill="#ffffff">1.01%</text>
<text text-anchor="middle" x="3179" y="-1212" font-family="Arial" font-size="10.00" fill="#ffffff">(0.03%)</text>
<text text-anchor="middle" x="3179" y="-1201" font-family="Arial" font-size="10.00" fill="#ffffff">10000×</text>
</g>
<!-- sequence::~sequence()&#45;&gt;sequence::~sequence()&#39;2 -->
<g id="edge95" class="edge">
<title>sequence::~sequence()&#45;&gt;sequence::~sequence()&#39;2</title>
<path fill="none" stroke="#0d1174" stroke-width="0.5" d="M3547.49,-1322.76C3442.44,-1314.21 3233.81,-1296.32 3220,-1288 3209.24,-1281.52 3200.72,-1271 3194.29,-1260.49"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width="0.5" points="3195.2,-1259.62 3192.36,-1257.23 3193.09,-1260.86 3195.2,-1259.62"/>
<text text-anchor="middle" x="3236.5" y="-1280" font-family="Arial" font-size="10.00" fill="#0d1174">1.01%</text>
<text text-anchor="middle" x="3236.5" y="-1269" font-family="Arial" font-size="10.00" fill="#0d1174">10000×</text>
</g>
<!-- sequenceContainer::add(sequence const&amp;)&#45;&gt;sequence::sequence(sequence const&amp;) -->
<g id="edge98" class="edge">
<title>sequenceContainer::add(sequence const&amp;)&#45;&gt;sequence::sequence(sequence const&amp;)</title>
<path fill="none" stroke="#0d1675" stroke-width="0.5" d="M4414.25,-1603.95C4536.61,-1588.04 4731.37,-1555.36 4782,-1504 4824.42,-1460.97 4839.91,-1412.52 4798,-1369 4788.82,-1359.47 4573.04,-1362.22 4560,-1360 4559.6,-1359.93 4559.2,-1359.86 4558.8,-1359.79"/>
<polygon fill="#0d1675" stroke="#0d1675" stroke-width="0.5" points="4558.85,-1358.56 4555.18,-1359.13 4558.41,-1360.97 4558.85,-1358.56"/>
<text text-anchor="middle" x="4834" y="-1475.5" font-family="Arial" font-size="10.00" fill="#0d1675">2.12%</text>
<text text-anchor="middle" x="4834" y="-1464.5" font-family="Arial" font-size="10.00" fill="#0d1675">9985×</text>
</g>
<!-- void std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt;::_M_realloc_insert&lt;sequence const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;sequence*, std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt; &gt;, sequence const&amp;) -->
<g id="node91" class="node">
<title>void std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt;::_M_realloc_insert&lt;sequence const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;sequence*, std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt; &gt;, sequence const&amp;)</title>
<polygon fill="#0d297b" stroke="#0d297b" points="4777,-1504 3847,-1504 3847,-1441 4777,-1441 4777,-1504"/>
<text text-anchor="middle" x="4312" y="-1492" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="4312" y="-1481" font-family="Arial" font-size="10.00" fill="#ffffff">void std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt;::_M_realloc_insert&lt;sequence const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;sequence*, std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt; &gt;, sequence const&amp;)</text>
<text text-anchor="middle" x="4312" y="-1470" font-family="Arial" font-size="10.00" fill="#ffffff">6.37%</text>
<text text-anchor="middle" x="4312" y="-1459" font-family="Arial" font-size="10.00" fill="#ffffff">(0.03%)</text>
<text text-anchor="middle" x="4312" y="-1448" font-family="Arial" font-size="10.00" fill="#ffffff">15×</text>
</g>
<!-- sequenceContainer::add(sequence const&amp;)&#45;&gt;void std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt;::_M_realloc_insert&lt;sequence const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;sequence*, std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt; &gt;, sequence const&amp;) -->
<g id="edge99" class="edge">
<title>sequenceContainer::add(sequence const&amp;)&#45;&gt;void std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt;::_M_realloc_insert&lt;sequence const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;sequence*, std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt; &gt;, sequence const&amp;)</title>
<path fill="none" stroke="#0d297b" stroke-width="0.5" d="M4312,-1584.69C4312,-1562.08 4312,-1531.36 4312,-1507.95"/>
<polygon fill="#0d297b" stroke="#0d297b" stroke-width="0.5" points="4313.23,-1507.75 4312,-1504.25 4310.78,-1507.75 4313.23,-1507.75"/>
<text text-anchor="middle" x="4326" y="-1547.5" font-family="Arial" font-size="10.00" fill="#0d297b">6.37%</text>
<text text-anchor="middle" x="4326" y="-1536.5" font-family="Arial" font-size="10.00" fill="#0d297b">15×</text>
</g>
<!-- rateMatrixSim::~rateMatrixSim()&#39;2 -->
<g id="node88" class="node">
<title>rateMatrixSim::~rateMatrixSim()&#39;2</title>
<polygon fill="#0d277a" stroke="#0d277a" points="283,-1360 119,-1360 119,-1297 283,-1297 283,-1360"/>
<text text-anchor="middle" x="201" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="201" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">rateMatrixSim::~rateMatrixSim()&#39;2</text>
<text text-anchor="middle" x="201" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">5.94%</text>
<text text-anchor="middle" x="201" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.03%)</text>
<text text-anchor="middle" x="201" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- rateMatrixSim::~rateMatrixSim()&#45;&gt;rateMatrixSim::~rateMatrixSim()&#39;2 -->
<g id="edge86" class="edge">
<title>rateMatrixSim::~rateMatrixSim()&#45;&gt;rateMatrixSim::~rateMatrixSim()&#39;2</title>
<path fill="none" stroke="#0d277a" stroke-width="0.5" d="M201,-1512.84C201,-1473.43 201,-1405.19 201,-1364"/>
<polygon fill="#0d277a" stroke="#0d277a" stroke-width="0.5" points="202.23,-1363.6 201,-1360.1 199.78,-1363.6 202.23,-1363.6"/>
<text text-anchor="middle" x="215" y="-1475.5" font-family="Arial" font-size="10.00" fill="#0d277a">5.94%</text>
<text text-anchor="middle" x="215" y="-1464.5" font-family="Arial" font-size="10.00" fill="#0d277a">1×</text>
</g>
<!-- rateMatrixSim::~rateMatrixSim()&#39;2&#45;&gt;0x000000000010d800 -->
<g id="edge87" class="edge">
<title>rateMatrixSim::~rateMatrixSim()&#39;2&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d1274" stroke-width="0.5" d="M171.82,-1296.83C136.86,-1257.76 80.24,-1186.46 58,-1113 49.89,-1086.2 38.64,-1070.23 58,-1050 111.58,-994.01 2622.47,-981.44 3042.66,-979.72"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width="0.5" points="3042.81,-980.95 3046.31,-979.71 3042.8,-978.5 3042.81,-980.95"/>
<text text-anchor="middle" x="106.5" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d1274">1.36%</text>
<text text-anchor="middle" x="106.5" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d1274">18240×</text>
</g>
<!-- std::vector&lt;computePijHom, std::allocator&lt;computePijHom&gt; &gt;::~vector() -->
<g id="node89" class="node">
<title>std::vector&lt;computePijHom, std::allocator&lt;computePijHom&gt; &gt;::~vector()</title>
<polygon fill="#0d2079" stroke="#0d2079" points="888.5,-1257 551.5,-1257 551.5,-1194 888.5,-1194 888.5,-1257"/>
<text text-anchor="middle" x="720" y="-1245" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="720" y="-1234" font-family="Arial" font-size="10.00" fill="#ffffff">std::vector&lt;computePijHom, std::allocator&lt;computePijHom&gt; &gt;::~vector()</text>
<text text-anchor="middle" x="720" y="-1223" font-family="Arial" font-size="10.00" fill="#ffffff">4.55%</text>
<text text-anchor="middle" x="720" y="-1212" font-family="Arial" font-size="10.00" fill="#ffffff">(0.42%)</text>
<text text-anchor="middle" x="720" y="-1201" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- rateMatrixSim::~rateMatrixSim()&#39;2&#45;&gt;std::vector&lt;computePijHom, std::allocator&lt;computePijHom&gt; &gt;::~vector() -->
<g id="edge88" class="edge">
<title>rateMatrixSim::~rateMatrixSim()&#39;2&#45;&gt;std::vector&lt;computePijHom, std::allocator&lt;computePijHom&gt; &gt;::~vector()</title>
<path fill="none" stroke="#0d2079" stroke-width="0.5" d="M283.24,-1311.5C357.24,-1297.09 468.1,-1275.52 559.6,-1257.71"/>
<polygon fill="#0d2079" stroke="#0d2079" stroke-width="0.5" points="559.92,-1258.9 563.12,-1257.03 559.45,-1256.5 559.92,-1258.9"/>
<text text-anchor="middle" x="521" y="-1280" font-family="Arial" font-size="10.00" fill="#0d2079">4.55%</text>
<text text-anchor="middle" x="521" y="-1269" font-family="Arial" font-size="10.00" fill="#0d2079">1×</text>
</g>
<!-- std::vector&lt;computePijHom, std::allocator&lt;computePijHom&gt; &gt;::~vector()&#45;&gt;0x000000000010d800 -->
<g id="edge121" class="edge">
<title>std::vector&lt;computePijHom, std::allocator&lt;computePijHom&gt; &gt;::~vector()&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M888.57,-1208.74C1028.03,-1192.43 1211.85,-1162.28 1267,-1113 1289.01,-1093.34 1272.09,-1074.86 1288,-1050 1298.85,-1033.05 1302.37,-1026.62 1321,-1019 1402.27,-985.77 2741.19,-980.41 3042.23,-979.63"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="3042.66,-980.85 3046.15,-979.62 3042.65,-978.4 3042.66,-980.85"/>
<text text-anchor="middle" x="1304.5" y="-1084.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.30%</text>
<text text-anchor="middle" x="1304.5" y="-1073.5" font-family="Arial" font-size="10.00" fill="#0d0e73">20004×</text>
</g>
<!-- std::_Sp_counted_ptr_inplace&lt;DiscreteDistribution, std::allocator&lt;DiscreteDistribution&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy() -->
<g id="node98" class="node">
<title>std::_Sp_counted_ptr_inplace&lt;DiscreteDistribution, std::allocator&lt;DiscreteDistribution&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy()</title>
<polygon fill="#0d1274" stroke="#0d1274" points="657.5,-1113 62.5,-1113 62.5,-1050 657.5,-1050 657.5,-1113"/>
<text text-anchor="middle" x="360" y="-1101" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="360" y="-1090" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Sp_counted_ptr_inplace&lt;DiscreteDistribution, std::allocator&lt;DiscreteDistribution&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy()</text>
<text text-anchor="middle" x="360" y="-1079" font-family="Arial" font-size="10.00" fill="#ffffff">1.24%</text>
<text text-anchor="middle" x="360" y="-1068" font-family="Arial" font-size="10.00" fill="#ffffff">(0.03%)</text>
<text text-anchor="middle" x="360" y="-1057" font-family="Arial" font-size="10.00" fill="#ffffff">79988×</text>
</g>
<!-- std::vector&lt;computePijHom, std::allocator&lt;computePijHom&gt; &gt;::~vector()&#45;&gt;std::_Sp_counted_ptr_inplace&lt;DiscreteDistribution, std::allocator&lt;DiscreteDistribution&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy() -->
<g id="edge122" class="edge">
<title>std::vector&lt;computePijHom, std::allocator&lt;computePijHom&gt; &gt;::~vector()&#45;&gt;std::_Sp_counted_ptr_inplace&lt;DiscreteDistribution, std::allocator&lt;DiscreteDistribution&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy()</title>
<path fill="none" stroke="#0d1274" stroke-width="0.5" d="M642.33,-1193.86C582.95,-1170.44 501.32,-1138.24 441.1,-1114.49"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width="0.5" points="441.24,-1113.23 437.53,-1113.08 440.34,-1115.51 441.24,-1113.23"/>
<text text-anchor="middle" x="630.5" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d1274">1.24%</text>
<text text-anchor="middle" x="630.5" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d1274">79988×</text>
</g>
<!-- std::_Sp_counted_ptr_inplace&lt;DiscreteDistribution, std::allocator&lt;DiscreteDistribution&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose() -->
<g id="node99" class="node">
<title>std::_Sp_counted_ptr_inplace&lt;DiscreteDistribution, std::allocator&lt;DiscreteDistribution&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose()</title>
<polygon fill="#0d1876" stroke="#0d1876" points="1263,-1113 667,-1113 667,-1050 1263,-1050 1263,-1113"/>
<text text-anchor="middle" x="965" y="-1101" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="965" y="-1090" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Sp_counted_ptr_inplace&lt;DiscreteDistribution, std::allocator&lt;DiscreteDistribution&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose()</text>
<text text-anchor="middle" x="965" y="-1079" font-family="Arial" font-size="10.00" fill="#ffffff">2.59%</text>
<text text-anchor="middle" x="965" y="-1068" font-family="Arial" font-size="10.00" fill="#ffffff">(0.16%)</text>
<text text-anchor="middle" x="965" y="-1057" font-family="Arial" font-size="10.00" fill="#ffffff">79988×</text>
</g>
<!-- std::vector&lt;computePijHom, std::allocator&lt;computePijHom&gt; &gt;::~vector()&#45;&gt;std::_Sp_counted_ptr_inplace&lt;DiscreteDistribution, std::allocator&lt;DiscreteDistribution&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose() -->
<g id="edge123" class="edge">
<title>std::vector&lt;computePijHom, std::allocator&lt;computePijHom&gt; &gt;::~vector()&#45;&gt;std::_Sp_counted_ptr_inplace&lt;DiscreteDistribution, std::allocator&lt;DiscreteDistribution&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose()</title>
<path fill="none" stroke="#0d1876" stroke-width="0.5" d="M772.86,-1193.86C812.95,-1170.63 867.94,-1138.76 908.82,-1115.06"/>
<polygon fill="#0d1876" stroke="#0d1876" stroke-width="0.5" points="909.82,-1115.9 912.24,-1113.08 908.59,-1113.78 909.82,-1115.9"/>
<text text-anchor="middle" x="909.5" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d1876">2.59%</text>
<text text-anchor="middle" x="909.5" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d1876">79988×</text>
</g>
<!-- sequence::~sequence()&#39;2&#45;&gt;0x000000000010d800 -->
<g id="edge96" class="edge">
<title>sequence::~sequence()&#39;2&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d0d73" stroke-width="0.5" d="M3169.4,-1193.97C3154.95,-1147.99 3127.71,-1061.29 3112.66,-1013.41"/>
<polygon fill="#0d0d73" stroke="#0d0d73" stroke-width="0.5" points="3113.81,-1013 3111.6,-1010.03 3111.48,-1013.74 3113.81,-1013"/>
<text text-anchor="middle" x="3160.5" y="-1084.5" font-family="Arial" font-size="10.00" fill="#0d0d73">0.13%</text>
<text text-anchor="middle" x="3160.5" y="-1073.5" font-family="Arial" font-size="10.00" fill="#0d0d73">10000×</text>
</g>
<!-- sequence::~sequence()&#39;2&#45;&gt;nucleotide::~nucleotide() -->
<g id="edge97" class="edge">
<title>sequence::~sequence()&#39;2&#45;&gt;nucleotide::~nucleotide()</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M3188.92,-1193.98C3196.25,-1173.1 3207.16,-1145.12 3220,-1122 3221.08,-1120.05 3222.25,-1118.08 3223.47,-1116.12"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="3224.58,-1116.66 3225.43,-1113.05 3222.51,-1115.34 3224.58,-1116.66"/>
<text text-anchor="middle" x="3236.5" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.85%</text>
<text text-anchor="middle" x="3236.5" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d1074">10000×</text>
</g>
<!-- void std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt;::_M_realloc_insert&lt;sequence const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;sequence*, std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt; &gt;, sequence const&amp;)&#45;&gt;0x000000000010d800 -->
<g id="edge160" class="edge">
<title>void std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt;::_M_realloc_insert&lt;sequence const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;sequence*, std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt; &gt;, sequence const&amp;)&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M4012.53,-1440.94C4006.36,-1438.21 4001.12,-1435.23 3997,-1432 3958.67,-1401.89 3958,-1378.24 3958,-1329.5 3958,-1329.5 3958,-1329.5 3958,-1080.5 3958,-1000.11 3354.92,-983.52 3161.17,-980.26"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="3161.02,-979.03 3157.5,-980.2 3160.98,-981.48 3161.02,-979.03"/>
<text text-anchor="middle" x="3972" y="-1228.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.45%</text>
<text text-anchor="middle" x="3972" y="-1217.5" font-family="Arial" font-size="10.00" fill="#0d0f73">14×</text>
</g>
<!-- void std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt;::_M_realloc_insert&lt;sequence const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;sequence*, std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt; &gt;, sequence const&amp;)&#45;&gt;sequence::sequence(sequence const&amp;) -->
<g id="edge161" class="edge">
<title>void std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt;::_M_realloc_insert&lt;sequence const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;sequence*, std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt; &gt;, sequence const&amp;)&#45;&gt;sequence::sequence(sequence const&amp;)</title>
<path fill="none" stroke="#0d1e78" stroke-width="0.5" d="M4344.33,-1440.69C4368.53,-1417.63 4401.57,-1386.14 4426.32,-1362.55"/>
<polygon fill="#0d1e78" stroke="#0d1e78" stroke-width="0.5" points="4427.3,-1363.31 4428.99,-1360.01 4425.61,-1361.54 4427.3,-1363.31"/>
<text text-anchor="middle" x="4432.5" y="-1403.5" font-family="Arial" font-size="10.00" fill="#0d1e78">3.96%</text>
<text text-anchor="middle" x="4432.5" y="-1392.5" font-family="Arial" font-size="10.00" fill="#0d1e78">16398×</text>
</g>
<!-- void std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt;::_M_realloc_insert&lt;sequence const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;sequence*, std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt; &gt;, sequence const&amp;)&#45;&gt;sequence::~sequence() -->
<g id="edge162" class="edge">
<title>void std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt;::_M_realloc_insert&lt;sequence const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;sequence*, std::vector&lt;sequence, std::allocator&lt;sequence&gt; &gt; &gt;, sequence const&amp;)&#45;&gt;sequence::~sequence()</title>
<path fill="none" stroke="#0d1575" stroke-width="0.5" d="M3947.6,-1440.95C3935.9,-1438.21 3925.87,-1435.23 3918,-1432 3876.78,-1415.07 3880.62,-1387.32 3840,-1369 3786.05,-1344.67 3718.93,-1335.22 3670.6,-1331.6"/>
<polygon fill="#0d1575" stroke="#0d1575" stroke-width="0.5" points="3670.44,-1330.36 3666.86,-1331.33 3670.26,-1332.8 3670.44,-1330.36"/>
<text text-anchor="middle" x="3934.5" y="-1403.5" font-family="Arial" font-size="10.00" fill="#0d1575">1.93%</text>
<text text-anchor="middle" x="3934.5" y="-1392.5" font-family="Arial" font-size="10.00" fill="#0d1575">16383×</text>
</g>
<!-- sequenceContainer::~sequenceContainer() -->
<g id="node92" class="node">
<title>sequenceContainer::~sequenceContainer()</title>
<polygon fill="#0d1375" stroke="#0d1375" points="656.5,-1720 453.5,-1720 453.5,-1657 656.5,-1657 656.5,-1720"/>
<text text-anchor="middle" x="555" y="-1708" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="555" y="-1697" font-family="Arial" font-size="10.00" fill="#ffffff">sequenceContainer::~sequenceContainer()</text>
<text text-anchor="middle" x="555" y="-1686" font-family="Arial" font-size="10.00" fill="#ffffff">1.56%</text>
<text text-anchor="middle" x="555" y="-1675" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="555" y="-1664" font-family="Arial" font-size="10.00" fill="#ffffff">2×</text>
</g>
<!-- sequenceContainer::~sequenceContainer()&#39;2 -->
<g id="node93" class="node">
<title>sequenceContainer::~sequenceContainer()&#39;2</title>
<polygon fill="#0d1375" stroke="#0d1375" points="651,-1504 441,-1504 441,-1441 651,-1441 651,-1504"/>
<text text-anchor="middle" x="546" y="-1492" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="546" y="-1481" font-family="Arial" font-size="10.00" fill="#ffffff">sequenceContainer::~sequenceContainer()&#39;2</text>
<text text-anchor="middle" x="546" y="-1470" font-family="Arial" font-size="10.00" fill="#ffffff">1.56%</text>
<text text-anchor="middle" x="546" y="-1459" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="546" y="-1448" font-family="Arial" font-size="10.00" fill="#ffffff">2×</text>
</g>
<!-- sequenceContainer::~sequenceContainer()&#45;&gt;sequenceContainer::~sequenceContainer()&#39;2 -->
<g id="edge100" class="edge">
<title>sequenceContainer::~sequenceContainer()&#45;&gt;sequenceContainer::~sequenceContainer()&#39;2</title>
<path fill="none" stroke="#0d1375" stroke-width="0.5" d="M553.71,-1656.84C552.05,-1617.43 549.18,-1549.19 547.45,-1508"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width="0.5" points="548.66,-1507.55 547.29,-1504.1 546.21,-1507.65 548.66,-1507.55"/>
<text text-anchor="middle" x="568" y="-1619.5" font-family="Arial" font-size="10.00" fill="#0d1375">1.56%</text>
<text text-anchor="middle" x="568" y="-1608.5" font-family="Arial" font-size="10.00" fill="#0d1375">2×</text>
</g>
<!-- sequenceContainer::~sequenceContainer()&#39;2&#45;&gt;0x000000000010d800 -->
<g id="edge101" class="edge">
<title>sequenceContainer::~sequenceContainer()&#39;2&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M537.03,-1440.69C532.57,-1418.59 530.92,-1389.27 546,-1369 567.22,-1340.47 1125.69,-1197.43 1159,-1185 1232.06,-1157.73 1269.73,-1173.44 1319,-1113 1346.05,-1079.82 1306.9,-1046.14 1340,-1019 1373.64,-991.42 2738.8,-981.67 3042.53,-979.83"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="3042.56,-981.06 3046.05,-979.81 3042.55,-978.61 3042.56,-981.06"/>
<text text-anchor="middle" x="1142" y="-1228.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.37%</text>
<text text-anchor="middle" x="1142" y="-1217.5" font-family="Arial" font-size="10.00" fill="#0d0e73">3×</text>
</g>
<!-- sequenceContainer::~sequenceContainer()&#39;2&#45;&gt;sequence::~sequence() -->
<g id="edge102" class="edge">
<title>sequenceContainer::~sequenceContainer()&#39;2&#45;&gt;sequence::~sequence()</title>
<path fill="none" stroke="#0d1274" stroke-width="0.5" d="M651.44,-1471.2C1201.43,-1469.49 3717.19,-1460.16 3745,-1432 3764.68,-1412.08 3761.86,-1391.36 3745,-1369 3735.52,-1356.42 3701.76,-1346.64 3670.01,-1339.95"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width="0.5" points="3670.22,-1338.75 3666.55,-1339.23 3669.72,-1341.14 3670.22,-1338.75"/>
<text text-anchor="middle" x="3775.5" y="-1403.5" font-family="Arial" font-size="10.00" fill="#0d1274">1.18%</text>
<text text-anchor="middle" x="3775.5" y="-1392.5" font-family="Arial" font-size="10.00" fill="#0d1274">10000×</text>
</g>
<!-- std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0]&#39;2&#45;&gt;0x000000000010d800 -->
<g id="edge106" class="edge">
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0]&#39;2&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d0f74" stroke-width="0.5" d="M2421.06,-1368.96C2514.83,-1350.74 2596,-1322.2 2596,-1278 2596,-1278 2596,-1278 2596,-1080.5 2596,-990.26 2909.37,-979.5 3042.89,-979.01"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width="0.5" points="3042.91,-980.24 3046.4,-979 3042.9,-977.79 3042.91,-980.24"/>
<text text-anchor="middle" x="2612.5" y="-1228.5" font-family="Arial" font-size="10.00" fill="#0d0f74">0.61%</text>
<text text-anchor="middle" x="2612.5" y="-1217.5" font-family="Arial" font-size="10.00" fill="#0d0f74">39962×</text>
</g>
<!-- std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0]&#39;2&#45;&gt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0]&#39;2 -->
<g id="edge107" class="edge">
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0]&#39;2&#45;&gt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_erase(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*) [clone .isra.0]&#39;2</title>
<path fill="none" stroke="#0d1274" stroke-width="0.5" d="M3692.74,-1403.24C3698.5,-1402.38 3701.5,-1401.47 3701.5,-1400.5 3701.5,-1399.77 3699.81,-1399.08 3696.54,-1398.41"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width="0.5" points="3696.4,-1397.14 3692.74,-1397.76 3695.98,-1399.56 3696.4,-1397.14"/>
<text text-anchor="middle" x="3718" y="-1398" font-family="Arial" font-size="10.00" fill="#0d1274">39962×</text>
</g>
<!-- std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]&#39;2 -->
<g id="node96" class="node">
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]&#39;2</title>
<polygon fill="#0d1074" stroke="#0d1074" points="18938.5,-1360 10191.5,-1360 10191.5,-1297 18938.5,-1297 18938.5,-1360"/>
<text text-anchor="middle" x="14565" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="14565" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]&#39;2</text>
<text text-anchor="middle" x="14565" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">0.76%</text>
<text text-anchor="middle" x="14565" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.10%)</text>
<text text-anchor="middle" x="14565" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">9964×</text>
</g>
<!-- std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]&#45;&gt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]&#39;2 -->
<g id="edge110" class="edge">
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]&#45;&gt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]&#39;2</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M14267.77,-1440.86C14330.41,-1417.39 14416.56,-1385.11 14479.99,-1361.35"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="14480.53,-1362.46 14483.38,-1360.08 14479.67,-1360.16 14480.53,-1362.46"/>
<text text-anchor="middle" x="14467" y="-1403.5" font-family="Arial" font-size="10.00" fill="#0d1074">0.76%</text>
<text text-anchor="middle" x="14467" y="-1392.5" font-family="Arial" font-size="10.00" fill="#0d1074">16×</text>
</g>
<!-- std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]&#39;2&#45;&gt;0x000000000010d7f0 -->
<g id="edge111" class="edge">
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]&#39;2&#45;&gt;0x000000000010d7f0</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M14934.52,-1297C15644.83,-1238.36 17158.63,-1113.4 17474.5,-1087.33"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="17474.77,-1088.54 17478.16,-1087.03 17474.57,-1086.09 17474.77,-1088.54"/>
<text text-anchor="middle" x="16163.5" y="-1228.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.51%</text>
<text text-anchor="middle" x="16163.5" y="-1217.5" font-family="Arial" font-size="10.00" fill="#0d0f73">19981×</text>
</g>
<!-- std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]&#39;2&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) [clone .isra.0] -->
<g id="edge113" class="edge">
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]&#39;2&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) [clone .isra.0]</title>
<path fill="none" stroke="#0d0d73" stroke-width="0.5" d="M12469.24,-1297C10869.44,-1273.72 8804.84,-1243.67 7984.24,-1231.73"/>
<polygon fill="#0d0d73" stroke="#0d0d73" stroke-width="0.5" points="7984.16,-1230.5 7980.64,-1231.68 7984.12,-1232.95 7984.16,-1230.5"/>
<text text-anchor="middle" x="11732.5" y="-1280" font-family="Arial" font-size="10.00" fill="#0d0d73">0.14%</text>
<text text-anchor="middle" x="11732.5" y="-1269" font-family="Arial" font-size="10.00" fill="#0d0d73">19981×</text>
</g>
<!-- std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]&#39;2&#45;&gt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]&#39;2 -->
<g id="edge112" class="edge">
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]&#39;2&#45;&gt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&gt;(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;*, std::_Rb_tree_node_base*, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, BlockTree&gt; &gt; &gt;::_Alloc_node&amp;) [clone .isra.0]&#39;2</title>
<path fill="none" stroke="#0d1074" stroke-width="0.5" d="M18938.54,-1329.67C18944.47,-1329.29 18947.5,-1328.9 18947.5,-1328.5 18947.5,-1328.2 18945.79,-1327.9 18942.44,-1327.62"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width="0.5" points="18942.12,-1326.36 18938.54,-1327.33 18941.95,-1328.81 18942.12,-1326.36"/>
<text text-anchor="middle" x="18961.5" y="-1326" font-family="Arial" font-size="10.00" fill="#0d1074">9948×</text>
</g>
<!-- std::_Sp_counted_deleter&lt;sequenceContainer*, std::default_delete&lt;sequenceContainer&gt;, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose()&#45;&gt;sequenceContainer::~sequenceContainer() -->
<g id="edge115" class="edge">
<title>std::_Sp_counted_deleter&lt;sequenceContainer*, std::default_delete&lt;sequenceContainer&gt;, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose()&#45;&gt;sequenceContainer::~sequenceContainer()</title>
<path fill="none" stroke="#0d1375" stroke-width="0.5" d="M557.35,-1800.69C556.87,-1778.08 556.22,-1747.36 555.73,-1723.95"/>
<polygon fill="#0d1375" stroke="#0d1375" stroke-width="0.5" points="556.95,-1723.73 555.65,-1720.25 554.5,-1723.78 556.95,-1723.73"/>
<text text-anchor="middle" x="572" y="-1763.5" font-family="Arial" font-size="10.00" fill="#0d1375">1.56%</text>
<text text-anchor="middle" x="572" y="-1752.5" font-family="Arial" font-size="10.00" fill="#0d1375">1×</text>
</g>
<!-- std::_Sp_counted_ptr_inplace&lt;DiscreteDistribution, std::allocator&lt;DiscreteDistribution&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy()&#45;&gt;0x000000000010d800 -->
<g id="edge116" class="edge">
<title>std::_Sp_counted_ptr_inplace&lt;DiscreteDistribution, std::allocator&lt;DiscreteDistribution&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy()&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d1274" stroke-width="0.5" d="M657.81,-1049.96C787.9,-1037.96 942.36,-1025.51 1082,-1019 1856.48,-982.87 2799.49,-979.68 3042.61,-979.49"/>
<polygon fill="#0d1274" stroke="#0d1274" stroke-width="0.5" points="3042.64,-980.71 3046.13,-979.48 3042.63,-978.26 3042.64,-980.71"/>
<text text-anchor="middle" x="1098.5" y="-1033" font-family="Arial" font-size="10.00" fill="#0d1274">1.21%</text>
<text text-anchor="middle" x="1098.5" y="-1022" font-family="Arial" font-size="10.00" fill="#0d1274">79988×</text>
</g>
<!-- std::_Sp_counted_ptr_inplace&lt;DiscreteDistribution, std::allocator&lt;DiscreteDistribution&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose()&#45;&gt;0x000000000010d800 -->
<g id="edge117" class="edge">
<title>std::_Sp_counted_ptr_inplace&lt;DiscreteDistribution, std::allocator&lt;DiscreteDistribution&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose()&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d1776" stroke-width="0.5" d="M1076.18,-1049.94C1124.84,-1037.95 1182.85,-1025.53 1236,-1019 1418.52,-996.59 2744.51,-982.87 3042.61,-980.04"/>
<polygon fill="#0d1776" stroke="#0d1776" stroke-width="0.5" points="3043.01,-981.26 3046.49,-980.01 3042.98,-978.81 3043.01,-981.26"/>
<text text-anchor="middle" x="1255" y="-1033" font-family="Arial" font-size="10.00" fill="#0d1776">2.42%</text>
<text text-anchor="middle" x="1255" y="-1022" font-family="Arial" font-size="10.00" fill="#0d1776">159976×</text>
</g>
<!-- trivialAccelerator::Qij(int, int) const&#45;&gt;nucJC::Qij(int, int) const -->
<g id="edge159" class="edge">
<title>trivialAccelerator::Qij(int, int) const&#45;&gt;nucJC::Qij(int, int) const</title>
<path fill="none" stroke="#0d0f74" stroke-width="0.5" d="M5385,-1049.92C5385,-1038.56 5385,-1025.59 5385,-1013.9"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width="0.5" points="5386.23,-1013.82 5385,-1010.32 5383.78,-1013.82 5386.23,-1013.82"/>
<text text-anchor="middle" x="5404" y="-1033" font-family="Arial" font-size="10.00" fill="#0d0f74">0.61%</text>
<text text-anchor="middle" x="5404" y="-1022" font-family="Arial" font-size="10.00" fill="#0d0f74">968072×</text>
</g>
<!-- tree::createNode(tree::TreeNode*, int) -->
<g id="node102" class="node">
<title>tree::createNode(tree::TreeNode*, int)</title>
<polygon fill="#0d1275" stroke="#0d1275" points="19245.5,-1360 19064.5,-1360 19064.5,-1297 19245.5,-1297 19245.5,-1360"/>
<text text-anchor="middle" x="19155" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="19155" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">tree::createNode(tree::TreeNode*, int)</text>
<text text-anchor="middle" x="19155" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">1.38%</text>
<text text-anchor="middle" x="19155" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.14%)</text>
<text text-anchor="middle" x="19155" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">19997×</text>
</g>
<!-- tree::createNode(tree::TreeNode*, int)&#45;&gt;0x000000000010d7f0 -->
<g id="edge137" class="edge">
<title>tree::createNode(tree::TreeNode*, int)&#45;&gt;0x000000000010d7f0</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M19064.44,-1298.38C19061.94,-1297.88 19059.46,-1297.42 19057,-1297 19005.31,-1288.27 18166.4,-1267.29 18114,-1266 18098.64,-1265.62 17572.59,-1267.09 17561,-1257 17538.1,-1237.06 17544.98,-1151.95 17540,-1122 17539.71,-1120.29 17539.42,-1118.53 17539.12,-1116.76"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="17540.29,-1116.35 17538.49,-1113.11 17537.88,-1116.77 17540.29,-1116.35"/>
<text text-anchor="middle" x="17577.5" y="-1228.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.57%</text>
<text text-anchor="middle" x="17577.5" y="-1217.5" font-family="Arial" font-size="10.00" fill="#0d0f73">19997×</text>
</g>
<!-- void std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt;::_M_realloc_insert&lt;tree::TreeNode* const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;tree::TreeNode**, std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt; &gt;, tree::TreeNode* const&amp;) -->
<g id="node103" class="node">
<title>void std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt;::_M_realloc_insert&lt;tree::TreeNode* const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;tree::TreeNode**, std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt; &gt;, tree::TreeNode* const&amp;)</title>
<polygon fill="#0d1274" stroke="#0d1274" points="19249.5,-1257 18130.5,-1257 18130.5,-1194 19249.5,-1194 19249.5,-1257"/>
<text text-anchor="middle" x="18690" y="-1245" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="18690" y="-1234" font-family="Arial" font-size="10.00" fill="#ffffff">void std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt;::_M_realloc_insert&lt;tree::TreeNode* const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;tree::TreeNode**, std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt; &gt;, tree::TreeNode* const&amp;)</text>
<text text-anchor="middle" x="18690" y="-1223" font-family="Arial" font-size="10.00" fill="#ffffff">1.32%</text>
<text text-anchor="middle" x="18690" y="-1212" font-family="Arial" font-size="10.00" fill="#ffffff">(0.37%)</text>
<text text-anchor="middle" x="18690" y="-1201" font-family="Arial" font-size="10.00" fill="#ffffff">39999×</text>
</g>
<!-- tree::createNode(tree::TreeNode*, int)&#45;&gt;void std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt;::_M_realloc_insert&lt;tree::TreeNode* const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;tree::TreeNode**, std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt; &gt;, tree::TreeNode* const&amp;) -->
<g id="edge138" class="edge">
<title>tree::createNode(tree::TreeNode*, int)&#45;&gt;void std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt;::_M_realloc_insert&lt;tree::TreeNode* const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;tree::TreeNode**, std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt; &gt;, tree::TreeNode* const&amp;)</title>
<path fill="none" stroke="#0d0f74" stroke-width="0.5" d="M19064.33,-1298.89C19061.87,-1298.24 19059.42,-1297.61 19057,-1297 18997.92,-1282.18 18932.82,-1268.75 18874.05,-1257.68"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width="0.5" points="18874.22,-1256.47 18870.55,-1257.02 18873.76,-1258.87 18874.22,-1256.47"/>
<text text-anchor="middle" x="19033.5" y="-1280" font-family="Arial" font-size="10.00" fill="#0d0f74">0.66%</text>
<text text-anchor="middle" x="19033.5" y="-1269" font-family="Arial" font-size="10.00" fill="#0d0f74">19997×</text>
</g>
<!-- void std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt;::_M_realloc_insert&lt;tree::TreeNode* const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;tree::TreeNode**, std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt; &gt;, tree::TreeNode* const&amp;)&#45;&gt;0x000000000010d7f0 -->
<g id="edge164" class="edge">
<title>void std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt;::_M_realloc_insert&lt;tree::TreeNode* const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;tree::TreeNode**, std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt; &gt;, tree::TreeNode* const&amp;)&#45;&gt;0x000000000010d7f0</title>
<path fill="none" stroke="#0d0f74" stroke-width="0.5" d="M18130.42,-1194.16C18128.94,-1194.11 18127.47,-1194.05 18126,-1194 18112.12,-1193.5 17636.89,-1193.63 17626,-1185 17603.36,-1167.06 17628,-1144.59 17610,-1122 17604.76,-1115.42 17598.12,-1109.83 17590.96,-1105.11"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width="0.5" points="17591.47,-1103.98 17587.86,-1103.14 17590.15,-1106.05 17591.47,-1103.98"/>
<text text-anchor="middle" x="17642.5" y="-1156.5" font-family="Arial" font-size="10.00" fill="#0d0f74">0.66%</text>
<text text-anchor="middle" x="17642.5" y="-1145.5" font-family="Arial" font-size="10.00" fill="#0d0f74">39999×</text>
</g>
<!-- void std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt;::_M_realloc_insert&lt;tree::TreeNode* const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;tree::TreeNode**, std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt; &gt;, tree::TreeNode* const&amp;)&#45;&gt;0x000000000010d800 -->
<g id="edge165" class="edge">
<title>void std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt;::_M_realloc_insert&lt;tree::TreeNode* const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;tree::TreeNode**, std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt; &gt;, tree::TreeNode* const&amp;)&#45;&gt;0x000000000010d800</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M18130.42,-1194.17C18128.94,-1194.11 18127.47,-1194.05 18126,-1194 18113.92,-1193.55 17701.31,-1191.3 17691,-1185 17663.85,-1168.42 17675.35,-1147.99 17657,-1122 17632.14,-1086.78 17631.37,-1067.57 17592,-1050 17514.17,-1015.26 5404.23,-1010.73 5319,-1010 4461.95,-1002.71 3418.64,-985.03 3161.41,-980.55"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="3161.2,-979.32 3157.68,-980.48 3161.16,-981.77 3161.2,-979.32"/>
<text text-anchor="middle" x="17666.5" y="-1084.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.25%</text>
<text text-anchor="middle" x="17666.5" y="-1073.5" font-family="Arial" font-size="10.00" fill="#0d0e73">19998×</text>
</g>
<!-- tree::create_names_to_internal_nodes()&#45;&gt;int2string[abi:cxx11](int) -->
<g id="edge139" class="edge">
<title>tree::create_names_to_internal_nodes()&#45;&gt;int2string[abi:cxx11](int)</title>
<path fill="none" stroke="#0d1174" stroke-width="0.5" d="M18706,-1872.69C18706,-1850.08 18706,-1819.36 18706,-1795.95"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width="0.5" points="18707.23,-1795.75 18706,-1792.25 18704.78,-1795.75 18707.23,-1795.75"/>
<text text-anchor="middle" x="18720" y="-1835.5" font-family="Arial" font-size="10.00" fill="#0d1174">0.94%</text>
<text text-anchor="middle" x="18720" y="-1824.5" font-family="Arial" font-size="10.00" fill="#0d1174">9998×</text>
</g>
<!-- tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;) -->
<g id="node105" class="node">
<title>tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)</title>
<polygon fill="#0d297b" stroke="#0d297b" points="20634,-1504 19964,-1504 19964,-1441 20634,-1441 20634,-1504"/>
<text text-anchor="middle" x="20299" y="-1492" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="20299" y="-1481" font-family="Arial" font-size="10.00" fill="#ffffff">tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)</text>
<text text-anchor="middle" x="20299" y="-1470" font-family="Arial" font-size="10.00" fill="#ffffff">6.35%</text>
<text text-anchor="middle" x="20299" y="-1459" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="20299" y="-1448" font-family="Arial" font-size="10.00" fill="#ffffff">3×</text>
</g>
<!-- tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#39;2 -->
<g id="node106" class="node">
<title>tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#39;2</title>
<polygon fill="#0d297b" stroke="#0d297b" points="20472.5,-1360 19795.5,-1360 19795.5,-1297 20472.5,-1297 20472.5,-1360"/>
<text text-anchor="middle" x="20134" y="-1348" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="20134" y="-1337" font-family="Arial" font-size="10.00" fill="#ffffff">tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#39;2</text>
<text text-anchor="middle" x="20134" y="-1326" font-family="Arial" font-size="10.00" fill="#ffffff">6.35%</text>
<text text-anchor="middle" x="20134" y="-1315" font-family="Arial" font-size="10.00" fill="#ffffff">(0.23%)</text>
<text text-anchor="middle" x="20134" y="-1304" font-family="Arial" font-size="10.00" fill="#ffffff">19994×</text>
</g>
<!-- tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#45;&gt;tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#39;2 -->
<g id="edge140" class="edge">
<title>tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#45;&gt;tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#39;2</title>
<path fill="none" stroke="#0d297b" stroke-width="0.5" d="M20263.2,-1440.69C20236.4,-1417.63 20199.81,-1386.14 20172.41,-1362.55"/>
<polygon fill="#0d297b" stroke="#0d297b" stroke-width="0.5" points="20172.9,-1361.36 20169.45,-1360.01 20171.3,-1363.22 20172.9,-1361.36"/>
<text text-anchor="middle" x="20264" y="-1403.5" font-family="Arial" font-size="10.00" fill="#0d297b">6.35%</text>
<text text-anchor="middle" x="20264" y="-1392.5" font-family="Arial" font-size="10.00" fill="#0d297b">2×</text>
</g>
<!-- tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#39;2&#45;&gt;0x000000000010d6b0 -->
<g id="edge141" class="edge">
<title>tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#39;2&#45;&gt;0x000000000010d6b0</title>
<path fill="none" stroke="#0d0d73" stroke-width="0.5" d="M20117.65,-1296.92C20111.52,-1285.46 20104.52,-1272.36 20098.23,-1260.6"/>
<polygon fill="#0d0d73" stroke="#0d0d73" stroke-width="0.5" points="20099.21,-1259.83 20096.48,-1257.32 20097.05,-1260.99 20099.21,-1259.83"/>
<text text-anchor="middle" x="20127.5" y="-1280" font-family="Arial" font-size="10.00" fill="#0d0d73">0.18%</text>
<text text-anchor="middle" x="20127.5" y="-1269" font-family="Arial" font-size="10.00" fill="#0d0d73">29992×</text>
</g>
<!-- tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#39;2&#45;&gt;0x000000000010d7f0 -->
<g id="edge142" class="edge">
<title>tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#39;2&#45;&gt;0x000000000010d7f0</title>
<path fill="none" stroke="#0d0f73" stroke-width="0.5" d="M20039.89,-1296.92C20020.2,-1286.84 20001.15,-1273.76 19987,-1257 19968.22,-1234.75 19989.12,-1215.05 19969,-1194 19899.36,-1121.16 19853.42,-1138.42 19754,-1122 19637.3,-1102.73 17741.73,-1132.1 17625,-1113 17613.86,-1111.18 17602.25,-1108.22 17591.17,-1104.84"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width="0.5" points="17591.46,-1103.65 17587.75,-1103.78 17590.73,-1105.99 17591.46,-1103.65"/>
<text text-anchor="middle" x="20003.5" y="-1228.5" font-family="Arial" font-size="10.00" fill="#0d0f73">0.50%</text>
<text text-anchor="middle" x="20003.5" y="-1217.5" font-family="Arial" font-size="10.00" fill="#0d0f73">19994×</text>
</g>
<!-- tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#39;2&#45;&gt;getDistance(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;) -->
<g id="edge143" class="edge">
<title>tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#39;2&#45;&gt;getDistance(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;)</title>
<path fill="none" stroke="#0d2078" stroke-width="0.5" d="M20206.05,-1296.92C20234.58,-1284.82 20267.4,-1270.89 20296.28,-1258.63"/>
<polygon fill="#0d2078" stroke="#0d2078" stroke-width="0.5" points="20297.04,-1259.64 20299.78,-1257.15 20296.08,-1257.39 20297.04,-1259.64"/>
<text text-anchor="middle" x="20290.5" y="-1280" font-family="Arial" font-size="10.00" fill="#0d2078">4.41%</text>
<text text-anchor="middle" x="20290.5" y="-1269" font-family="Arial" font-size="10.00" fill="#0d2078">19994×</text>
</g>
<!-- tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#39;2&#45;&gt;void std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt;::_M_realloc_insert&lt;tree::TreeNode* const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;tree::TreeNode**, std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt; &gt;, tree::TreeNode* const&amp;) -->
<g id="edge145" class="edge">
<title>tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#39;2&#45;&gt;void std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt;::_M_realloc_insert&lt;tree::TreeNode* const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;tree::TreeNode**, std::vector&lt;tree::TreeNode*, std::allocator&lt;tree::TreeNode*&gt; &gt; &gt;, tree::TreeNode* const&amp;)</title>
<path fill="none" stroke="#0d0f74" stroke-width="0.5" d="M19955.83,-1296.98C19878.92,-1285.1 19787.77,-1272.74 19705,-1266 19505.62,-1249.78 19454.9,-1264.39 19255,-1257 19254.46,-1256.98 19253.93,-1256.96 19253.39,-1256.94"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width="0.5" points="19253.38,-1255.71 19249.84,-1256.81 19253.29,-1258.16 19253.38,-1255.71"/>
<text text-anchor="middle" x="19909.5" y="-1280" font-family="Arial" font-size="10.00" fill="#0d0f74">0.65%</text>
<text text-anchor="middle" x="19909.5" y="-1269" font-family="Arial" font-size="10.00" fill="#0d0f74">19992×</text>
</g>
<!-- tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#39;2&#45;&gt;tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#39;2 -->
<g id="edge144" class="edge">
<title>tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#39;2&#45;&gt;tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#39;2</title>
<path fill="none" stroke="#0d297b" stroke-width="0.5" d="M20472.51,-1332.38C20478.32,-1331.26 20481.5,-1329.96 20481.5,-1328.5 20481.5,-1327.36 20479.56,-1326.32 20475.94,-1325.38"/>
<polygon fill="#0d297b" stroke="#0d297b" stroke-width="0.5" points="20476.2,-1324.18 20472.51,-1324.62 20475.67,-1326.57 20476.2,-1324.18"/>
<text text-anchor="middle" x="20498" y="-1326" font-family="Arial" font-size="10.00" fill="#0d297b">19992×</text>
</g>
<!-- tree::readPhylipTreeTopology(std::istream&amp;)&#45;&gt;PutTreeFileIntoVector(std::istream&amp;) -->
<g id="edge146" class="edge">
<title>tree::readPhylipTreeTopology(std::istream&amp;)&#45;&gt;PutTreeFileIntoVector(std::istream&amp;)</title>
<path fill="none" stroke="#0d2179" stroke-width="0.5" d="M20371.71,-1872.86C20427.3,-1849.44 20503.71,-1817.24 20560.08,-1793.49"/>
<polygon fill="#0d2179" stroke="#0d2179" stroke-width="0.5" points="20560.67,-1794.57 20563.42,-1792.08 20559.72,-1792.31 20560.67,-1794.57"/>
<text text-anchor="middle" x="20550" y="-1835.5" font-family="Arial" font-size="10.00" fill="#0d2179">4.60%</text>
<text text-anchor="middle" x="20550" y="-1824.5" font-family="Arial" font-size="10.00" fill="#0d2179">1×</text>
</g>
<!-- tree::readPhylipTreeTopology(std::vector&lt;char, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="node108" class="node">
<title>tree::readPhylipTreeTopology(std::vector&lt;char, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<polygon fill="#0d2c7c" stroke="#0d2c7c" points="20477,-1792 20121,-1792 20121,-1729 20477,-1729 20477,-1792"/>
<text text-anchor="middle" x="20299" y="-1780" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="20299" y="-1769" font-family="Arial" font-size="10.00" fill="#ffffff">tree::readPhylipTreeTopology(std::vector&lt;char, std::allocator&lt;char&gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="20299" y="-1758" font-family="Arial" font-size="10.00" fill="#ffffff">7.11%</text>
<text text-anchor="middle" x="20299" y="-1747" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="20299" y="-1736" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- tree::readPhylipTreeTopology(std::istream&amp;)&#45;&gt;tree::readPhylipTreeTopology(std::vector&lt;char, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="edge147" class="edge">
<title>tree::readPhylipTreeTopology(std::istream&amp;)&#45;&gt;tree::readPhylipTreeTopology(std::vector&lt;char, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<path fill="none" stroke="#0d2c7c" stroke-width="0.5" d="M20299,-1872.69C20299,-1850.08 20299,-1819.36 20299,-1795.95"/>
<polygon fill="#0d2c7c" stroke="#0d2c7c" stroke-width="0.5" points="20300.23,-1795.75 20299,-1792.25 20297.78,-1795.75 20300.23,-1795.75"/>
<text text-anchor="middle" x="20313" y="-1835.5" font-family="Arial" font-size="10.00" fill="#0d2c7c">7.11%</text>
<text text-anchor="middle" x="20313" y="-1824.5" font-family="Arial" font-size="10.00" fill="#0d2c7c">1×</text>
</g>
<!-- tree::readPhylipTreeTopology(std::vector&lt;char, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;) -->
<g id="node109" class="node">
<title>tree::readPhylipTreeTopology(std::vector&lt;char, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)</title>
<polygon fill="#0d2c7c" stroke="#0d2c7c" points="20570,-1648 20028,-1648 20028,-1585 20570,-1585 20570,-1648"/>
<text text-anchor="middle" x="20299" y="-1636" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="20299" y="-1625" font-family="Arial" font-size="10.00" fill="#ffffff">tree::readPhylipTreeTopology(std::vector&lt;char, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)</text>
<text text-anchor="middle" x="20299" y="-1614" font-family="Arial" font-size="10.00" fill="#ffffff">7.11%</text>
<text text-anchor="middle" x="20299" y="-1603" font-family="Arial" font-size="10.00" fill="#ffffff">(0.03%)</text>
<text text-anchor="middle" x="20299" y="-1592" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- tree::readPhylipTreeTopology(std::vector&lt;char, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;tree::readPhylipTreeTopology(std::vector&lt;char, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;) -->
<g id="edge148" class="edge">
<title>tree::readPhylipTreeTopology(std::vector&lt;char, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;tree::readPhylipTreeTopology(std::vector&lt;char, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)</title>
<path fill="none" stroke="#0d2c7c" stroke-width="0.5" d="M20299,-1728.69C20299,-1706.08 20299,-1675.36 20299,-1651.95"/>
<polygon fill="#0d2c7c" stroke="#0d2c7c" stroke-width="0.5" points="20300.23,-1651.75 20299,-1648.25 20297.78,-1651.75 20300.23,-1651.75"/>
<text text-anchor="middle" x="20313" y="-1691.5" font-family="Arial" font-size="10.00" fill="#0d2c7c">7.11%</text>
<text text-anchor="middle" x="20313" y="-1680.5" font-family="Arial" font-size="10.00" fill="#0d2c7c">1×</text>
</g>
<!-- tree::readPhylipTreeTopology(std::vector&lt;char, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#45;&gt;tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;) -->
<g id="edge149" class="edge">
<title>tree::readPhylipTreeTopology(std::vector&lt;char, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)&#45;&gt;tree::readPart(__gnu_cxx::__normal_iterator&lt;char const*, std::vector&lt;char, std::allocator&lt;char&gt; &gt; &gt;&amp;, int&amp;, std::vector&lt;char, std::allocator&lt;char&gt; &gt;&amp;)</title>
<path fill="none" stroke="#0d297b" stroke-width="0.5" d="M20299,-1584.69C20299,-1562.08 20299,-1531.36 20299,-1507.95"/>
<polygon fill="#0d297b" stroke="#0d297b" stroke-width="0.5" points="20300.23,-1507.75 20299,-1504.25 20297.78,-1507.75 20300.23,-1507.75"/>
<text text-anchor="middle" x="20313" y="-1547.5" font-family="Arial" font-size="10.00" fill="#0d297b">6.35%</text>
<text text-anchor="middle" x="20313" y="-1536.5" font-family="Arial" font-size="10.00" fill="#0d297b">3×</text>
</g>
<!-- tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)&#39;2 -->
<g id="node111" class="node">
<title>tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)&#39;2</title>
<polygon fill="#0d1575" stroke="#0d1575" points="19349,-1504 19071,-1504 19071,-1441 19349,-1441 19349,-1504"/>
<text text-anchor="middle" x="19210" y="-1492" font-family="Arial" font-size="10.00" fill="#ffffff">a.out</text>
<text text-anchor="middle" x="19210" y="-1481" font-family="Arial" font-size="10.00" fill="#ffffff">tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)&#39;2</text>
<text text-anchor="middle" x="19210" y="-1470" font-family="Arial" font-size="10.00" fill="#ffffff">2.06%</text>
<text text-anchor="middle" x="19210" y="-1459" font-family="Arial" font-size="10.00" fill="#ffffff">(0.19%)</text>
<text text-anchor="middle" x="19210" y="-1448" font-family="Arial" font-size="10.00" fill="#ffffff">19994×</text>
</g>
<!-- tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)&#45;&gt;tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)&#39;2 -->
<g id="edge150" class="edge">
<title>tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)&#45;&gt;tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)&#39;2</title>
<path fill="none" stroke="#0d1575" stroke-width="0.5" d="M18951.2,-1584.86C19005.63,-1561.44 19080.46,-1529.24 19135.65,-1505.49"/>
<polygon fill="#0d1575" stroke="#0d1575" stroke-width="0.5" points="19136.2,-1506.59 19138.93,-1504.08 19135.23,-1504.34 19136.2,-1506.59"/>
<text text-anchor="middle" x="19126" y="-1547.5" font-family="Arial" font-size="10.00" fill="#0d1575">2.06%</text>
<text text-anchor="middle" x="19126" y="-1536.5" font-family="Arial" font-size="10.00" fill="#0d1575">2×</text>
</g>
<!-- tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)&#39;2&#45;&gt;0x000000000010d6b0 -->
<g id="edge151" class="edge">
<title>tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)&#39;2&#45;&gt;0x000000000010d6b0</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M19349.29,-1449.12C19378.66,-1443.91 19409.42,-1438.09 19438,-1432 19565.36,-1404.87 19618.34,-1438.8 19722,-1360 19747.67,-1340.48 19731.43,-1315.27 19758,-1297 19853.97,-1231 19905.8,-1291.65 20017,-1257 20018.22,-1256.62 20019.44,-1256.22 20020.67,-1255.8"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="20021.47,-1256.82 20024.36,-1254.5 20020.65,-1254.51 20021.47,-1256.82"/>
<text text-anchor="middle" x="19774.5" y="-1331.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.26%</text>
<text text-anchor="middle" x="19774.5" y="-1320.5" font-family="Arial" font-size="10.00" fill="#0d0e73">39988×</text>
</g>
<!-- tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)&#39;2&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) [clone .isra.0] -->
<g id="edge154" class="edge">
<title>tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)&#39;2&#45;&gt;void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) [clone .isra.0]</title>
<path fill="none" stroke="#0d0e73" stroke-width="0.5" d="M19143.26,-1440.83C19105.99,-1421.41 19060.47,-1393.62 19027,-1360 19003.93,-1336.83 19017.42,-1313.17 18989,-1297 18981.34,-1292.64 9916.3,-1239.8 7984.38,-1228.58"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width="0.5" points="7984.35,-1227.36 7980.85,-1228.56 7984.34,-1229.81 7984.35,-1227.36"/>
<text text-anchor="middle" x="19043.5" y="-1331.5" font-family="Arial" font-size="10.00" fill="#0d0e73">0.23%</text>
<text text-anchor="middle" x="19043.5" y="-1320.5" font-family="Arial" font-size="10.00" fill="#0d0e73">39988×</text>
</g>
<!-- tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)&#39;2&#45;&gt;tree::createNode(tree::TreeNode*, int) -->
<g id="edge152" class="edge">
<title>tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)&#39;2&#45;&gt;tree::createNode(tree::TreeNode*, int)</title>
<path fill="none" stroke="#0d1275" stroke-width="0.5" d="M19198.07,-1440.69C19189.27,-1417.99 19177.31,-1387.11 19168.23,-1363.66"/>
<polygon fill="#0d1275" stroke="#0d1275" stroke-width="0.5" points="19169.32,-1363.07 19166.91,-1360.25 19167.03,-1363.96 19169.32,-1363.07"/>
<text text-anchor="middle" x="19209.5" y="-1403.5" font-family="Arial" font-size="10.00" fill="#0d1275">1.38%</text>
<text text-anchor="middle" x="19209.5" y="-1392.5" font-family="Arial" font-size="10.00" fill="#0d1275">19994×</text>
</g>
<!-- tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)&#39;2&#45;&gt;tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)&#39;2 -->
<g id="edge153" class="edge">
<title>tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)&#39;2&#45;&gt;tree::recursiveBuildTree(tree::TreeNode*, tree::TreeNode*)&#39;2</title>
<path fill="none" stroke="#0d1575" stroke-width="0.5" d="M19349.3,-1480.46C19354.81,-1478.39 19358,-1475.73 19358,-1472.5 19358,-1469.97 19356.06,-1467.8 19352.58,-1465.98"/>
<polygon fill="#0d1575" stroke="#0d1575" stroke-width="0.5" points="19353,-1464.83 19349.3,-1464.54 19352.01,-1467.07 19353,-1464.83"/>
<text text-anchor="middle" x="19374.5" y="-1470" font-family="Arial" font-size="10.00" fill="#0d1575">19992×</text>
</g>
</g>
</svg>
